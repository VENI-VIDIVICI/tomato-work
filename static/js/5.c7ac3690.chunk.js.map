{"version":3,"sources":["views/home/setting/inner-message/enum.tsx","views/home/setting/inner-message/index.tsx"],"names":["MessageType","InnerMessage","tableRef","useRef","useState","selectedRowKeys","setSelectedRowKeys","title","dataIndex","width","className","render","hasRead","tableColumns","getInnerMessage","useCallback","params","serviceGetInnerMessage","then","res","data","success","rows","forEach","item","createdAt","moment","format","typeName","type","handleAction","buttonType","join","serviceUpdateInnerMessageHasRead","current","getTableData","useEffect","ref","columns","rowSelection","onChange","selectedKeys","onClick","bind","disabled","length"],"mappings":"mJAGKA,E,mFAAAA,O,2DAAAA,M,KAIUA,QCuEAC,UAtEM,WACnB,IAAMC,EAAWC,iBAAY,MADJ,EAEqBC,mBAAS,IAF9B,mBAElBC,EAFkB,KAEDC,EAFC,OAGFF,mBAAS,CAC9B,CAAEG,MAAO,GAAIC,UAAW,UAAWC,MAAO,GAAIC,UAAW,aACvDC,OAAQ,SAACC,GAAD,OACLA,GAAW,uBAAGF,UAAU,cAAb,YAEhB,CAAEH,MAAO,2BAAQC,UAAW,WAC5B,CAAED,MAAO,2BAAQC,UAAW,YAAaC,MAAO,KAChD,CAAEF,MAAO,eAAMC,UAAW,WAAYC,MAAO,OAPxCI,EAHkB,oBAanBC,EAAkBC,uBAAY,SAACC,GACnC,OAAOC,YAAuBD,GAC7BE,MAAK,SAAAC,GAOJ,OANIA,EAAIC,KAAKC,SACXF,EAAIC,KAAKA,KAAKE,KAAKC,SAAQ,SAACC,GAC1BA,EAAKC,UAAYC,IAAOF,EAAKC,WAAWE,OAAO,oBAC/CH,EAAKI,SAAW5B,EAAYwB,EAAKK,SAG9BV,OAER,IAEGW,EAAef,uBAAY,SAACgB,GAEhC,IAAIf,EAASX,EAAgB2B,OACV,IAAfD,IACFf,EAAS,OAGXiB,YAAiCjB,GAChCE,MAAK,SAAAC,GACAA,EAAIC,KAAKC,UACXf,EAAmB,IACnBJ,EAASgC,QAAQC,qBAGpB,CAAC9B,EAAiBH,EAAUI,IAM/B,OAJA8B,qBAAU,WACRlC,EAASgC,QAAQC,iBAChB,CAACjC,IAGF,yBAAKQ,UAAU,iBACb,kBAAC,IAAD,CACE2B,IAAKnC,EACLiC,aAAcrB,EACdwB,QAASzB,EACT0B,aAAc,CACZlC,kBACAmC,SAAU,SAACC,GAAD,OAAuBnC,EAAmBmC,OAGxD,yBAAK/B,UAAU,gBACb,kBAAC,IAAD,CACEgC,QAASZ,EAAaa,KAAK,KAAM,GACjCC,SAAUvC,EAAgBwC,QAAU,GAFtC,4BAMA,kBAAC,IAAD,CAAQH,QAASZ,EAAaa,KAAK,KAAM,IAAzC","file":"static/js/5.c7ac3690.chunk.js","sourcesContent":["\n// 枚举类型由后台提供\n\nenum MessageType {\n  '系统消息' = 0\n}\n\nexport default MessageType;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './style.scss';\nimport { Button } from 'antd';\nimport Table from '@/components/table';\nimport { serviceGetInnerMessage, serviceUpdateInnerMessageHasRead } from '@/services';\nimport moment from 'moment';\nimport MessageType from './enum';\n\nconst InnerMessage = () => {\n  const tableRef = useRef<any>(null);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [tableColumns] = useState([\n    { title: '', dataIndex: 'hasRead', width: 12, className: 'unread-row', \n      render: (hasRead: boolean) => (\n        !hasRead && <i className=\"unread-dot\">●</i>\n      )},\n    { title: '标题内容', dataIndex: 'content' },\n    { title: '提交时间', dataIndex: 'createdAt', width: 150 },\n    { title: '类型', dataIndex: 'typeName', width: 130 }\n  ]);\n\n  const getInnerMessage = useCallback((params?: object) => {\n    return serviceGetInnerMessage(params)\n    .then(res => {\n      if (res.data.success) {\n        res.data.data.rows.forEach((item: any) => {\n          item.createdAt = moment(item.createdAt).format('YYYY-MM-DD HH:mm');\n          item.typeName = MessageType[item.type];\n        })\n      }\n      return res;\n    });\n  }, []);\n\n  const handleAction = useCallback((buttonType: 1 | 2) => {\n    \n    let params = selectedRowKeys.join();\n    if (buttonType === 2) {\n      params = 'all';\n    }\n\n    serviceUpdateInnerMessageHasRead(params)\n    .then(res => {\n      if (res.data.success) {\n        setSelectedRowKeys([]);\n        tableRef.current.getTableData();\n      }\n    })\n  }, [selectedRowKeys, tableRef, setSelectedRowKeys]);\n\n  useEffect(() => {\n    tableRef.current.getTableData();\n  }, [tableRef]);\n\n  return (\n    <div className=\"inner-message\">\n      <Table \n        ref={tableRef}\n        getTableData={getInnerMessage}\n        columns={tableColumns} \n        rowSelection={{\n          selectedRowKeys,\n          onChange: (selectedKeys: any) => setSelectedRowKeys(selectedKeys)\n        }}\n      />\n      <div className=\"action-group\">\n        <Button \n          onClick={handleAction.bind(null, 1)} \n          disabled={selectedRowKeys.length <= 0}\n        >\n          标记已读\n        </Button>\n        <Button onClick={handleAction.bind(null, 2)}>全部已读</Button>\n      </div>\n    </div>\n  )\n};\n\nexport default InnerMessage;\n"],"sourceRoot":""}