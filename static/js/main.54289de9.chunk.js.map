{"version":3,"sources":["store/actions/user.ts","components/table/action-panel.tsx","components/table/index.tsx","utils/http.ts","services/user.ts","services/system.ts","services/reminder.ts","services/todayTask.ts","services/capitalFlow.ts","services/memorandum.ts","services/innerMessage.ts","services/todoList.ts","services/common.ts","utils/helper.ts","hooks/index.ts","store/reducers/user.ts","store/reducers/system.ts","store/reducers/index.ts","store/index.ts","api/index.ts","components/avatar/index.tsx","assets/img/common/no-data.svg","assets/img/common/logo.png","utils/date.ts","utils/spin.ts","config/index.ts","constants/storage.ts","constants/menu.tsx","router/constants.ts","components/private-route/index.tsx","components/footer/index.tsx","views/login/index.tsx","views/home/index/components/system-info/index.tsx","views/home/memorandum/create/index.tsx","views/home/capital-flow/enum.tsx","components/exception/index.tsx","views/exception/no-match/index.tsx","components/sidebar/index.tsx","components/header/index.tsx","views/home/main-entry/index.tsx","views/home/reminder/components/create-reminder/index.tsx","views/home/reminder/index.tsx","views/home/setting/index/index.tsx","views/home/index/components/penel-group/index.tsx","views/home/index/components/money-access-chart/index.tsx","views/home/index/index.tsx","components/no-data/index.tsx","views/home/today-task/components/task-item/index.tsx","views/home/today-task/components/create-task/index.tsx","views/home/today-task/index.tsx","views/home/memorandum/index/index.tsx","views/home/memorandum/constants.ts","views/home/memorandum/detail/index.tsx","views/home/capital-flow/components/create-capital-flow/index.tsx","views/home/capital-flow/index/index.tsx","views/home/capital-flow/components/create-type/index.tsx","views/home/capital-flow/type/index.tsx","views/home/todo-list/components/create-todo/index.tsx","views/home/todo-list/constants.tsx","views/home/todo-list/index/index.tsx","router/routes.ts","router/index.tsx","serviceWorker.ts","index.tsx","store/constants/index.ts","store/actions/system.ts"],"names":["LOGIN","USER","setUser","userInfo","createdAt","moment","format","type","loginByToken","token","dispatch","serviceLoginByToken","then","res","data","success","logout","serviceLogout","finally","localStorageWhiteList","LOCAL_STORAGE","LOGIN_NAME","localStorageLen","window","localStorage","length","allLocalStorageKey","i","key","push","forEach","keyName","indexOf","removeItem","sessionStorage","clear","location","reload","githubAuthz","url","config","github","callbackURL","clientId","replace","validateLocalStatus","JSON","parse","getItem","_","isPlainObject","ActionPanel","selectedRowKeys","onDelete","isShowPanel","disabled","className","danger","onClick","modalConfirmDelete","title","initialState","tableHeight","tableDataSource","isLoading","pagination","pageNo","pageSize","showSizeChanger","total","pageSizeOptions","TableFC","rowSelection","getTableData","onTableChange","tableRef","forwardedRef","props","showRowSelection","useKeepState","state","setState","getData","current","count","rows","useEffect","setTimeout","tableEl","document","querySelector","clientHeight","onChange","Fragment","join","rowKey","loading","dataSource","scroll","y","showHeader","filters","sorter","size","forwardedTable","React","forwardRef","ref","memo","_logout","CancelToken","axios","handleError","error","isCancel","response","message","status","statusText","httpInstance","create","timeout","baseURL","CONFIG","http","defaults","headers","common","successAlert","errorAlert","Object","setPrototypeOf","interceptors","request","use","method","userState","store","getState","user","axiosCancelTokenStore","idx","cancelRequest","cancel","splice","cancelToken","pathname","spin","start","FormData","append","assign","Promise","reject","done","warn","msg","errorCode","serviceLogin","post","api","login","get","params","serviceUpdateUser","updateUser","serviceGetUserConfig","getUserConfig","serviceUpdateUserConfig","put","serviceGetSystemInfo","getSystemInfo","serviceCreateReminder","reminder","serviceGetReminder","serviceDeleteReminder","id","delete","serviceUpdateReminder","serviceCreateTask","todayTask","serviceGetTask","serviceDeleteTask","serviceUpdateTask","serviceGetCapitalFlowType","capitalFlowType","serviceDeleteCapitalFlowType","serviceUpdateCapitalFlowType","serviceCreateCapitalFlowType","serviceGetCapitalFlow","capitalFlow","serviceDeleteCapitalFlow","serviceUpdateCapitalFlow","serviceCreateCapitalFlow","serviceGetCapitalFlowPrice","getCapitalFlowPrice","serviceCreateMemorandum","memorandum","serviceGetMemorandum","serviceGetMemorandumById","serviceDeleteMemorandum","serviceUpdateMemorandum","serviceGetInnerMessage","innerMessage","serviceUpdateInnerMessageHasRead","serviceCreateTodoList","todoList","serviceGetTodoList","serviceDeleteTodoList","serviceUpdateTodoList","serviceGetPanelData","getPanelData","CODE","totalPercentage","totalmem","freemem","Math","floor","object","resolve","Modal","confirm","okType","onOk","fullscreen","docElm","documentElement","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","doc","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","randomCode","num","random","useFormInput","initialValue","useState","value","setValue","event","target","isLogin","isLockScreen","provider","uid","undefined","bio","username","password","loginName","avatarUrl","email","role","action","setItem","stringify","INFO","SYSTEM","info","mysqlVersion","currentSystemTime","Date","now","platform","hostname","arch","nodeVersion","cpus","system","isEmpty","slice","combineReducers","createStore","rootReducer","applyMiddleware","thunk","API","getCaptcha","Avatar","onError","module","exports","ONE_DAY_TIMESTAMP","getCurMonthTotalDay","daysInMonth","getCurMonthFirstDay","cur","setDate","setHours","getTime","getCurMonthLastDay","isLtTodayTimestamp","todayTimestamp","valueOf","getStartTimestampByDate","date","getEndTimestampByDate","getThisYearFirstDay","setMonth","getThisYearLastDay","endOf","containerEl","getElementById","spinEl","createElement","innerHTML","appendChild","parentNode","removeChild","isProduction","process","isDevelopment","origin","repositoryUrl","bug","SIDEBAR_COLLAPSED","LOCK_SCREEN","HOME_SIDER_MENU_LIST","path","HOME","HOME_INDEX","icon","HomeOutlined","name","REMINDER","ClockCircleOutlined","TODO_LIST","FileDoneOutlined","TODAY_TASK","ScheduleOutlined","BarChartOutlined","children","CAPITAL_FLOW","CAPITAL_FLOW_TYPE","MEMORANDUM","FormOutlined","MEMORANDUM_CREATE","SETTING","BASE","UserOutlined","SETTING_SIDER_MENU_LIST","INNER_MESSAGE","NOTIFICATION","ACCOUNT","SETTING_INDEX","MEMORANDUM_DETAIL","NO_MATCH","PrivateRouteComponent","connect","withRouter","Component","component","childrenRoutes","rest","Array","isArray","meta","auth","requiresAuth","isLoginToHome","qs","search","redirectUrl","to","render","map","route","currentYear","getFullYear","Footer","href","rel","PopoverContent","style","padding","captcha","reloadCaptcha","e","src","timer","editor","TypeNames","TypeColors","history","code","setLoading","handleSubmit","_loginName","trim","_password","_code","Error","md5","catch","err","query","Number","width","height","viewBox","aria-hidden","d","fill","require","alt","Group","placeholder","prefix","maxLength","autoComplete","onPressEnter","LockOutlined","PictureOutlined","suffix","marginTop","block","content","trigger","placement","GithubOutlined","statusMap","403","subTitle","404","500","extra","goBack","NoMatch","Sider","Layout","SubMenu","Menu","collapsed","selectedKeys","setSelectedKeys","openKeys","setOpenKeys","fragment","split","prefixPath","menu","findIdx","findIndex","collapsible","onOpenChange","mode","theme","subItem","Item","Header","popoverList","el","PoweroffOutlined","fontSize","marginRight","setCollapsed","messageList","setMessageList","unReadCount","setUnReadCount","isFullscreen","setIsFullscreen","item","hasRead","MessageContent","useMemo","MenuUnfoldOutlined","cursor","MenuFoldOutlined","dot","BellFilled","FullscreenOutlined","FullscreenExitOutlined","BugFilled","Content","storageCollapsed","Children","child","TextArea","Input","confirmLoading","dateMode","visible","onCancel","onSuccess","rowData","initParams","useCallback","preventDefault","label","showTime","allowClear","onPanelChange","disabledDate","RangePicker","DatePicker","Option","Select","STATUS_TYPE","1","color","text","2","queryType","modalVisible","currentRow","useRef","tableColumns","dataIndex","row","align","handleButton","bind","startDate","endDate","handleModalOnSuccess","warning","order","columns","SettingIndex","fallback","settingRoutes","isInit","Icon","PropertySafetyFilled","ScheduleFilled","FileTextFilled","AlertFilled","consumption","todayTaskCount","unfinishedTodoListCount","reminderCount","gutter","xs","sm","md","xl","lg","curSystemTime","percentage","systemInfo","memPercentage","countdown","clearTimeout","timeDiff","hoverable","bytes","percent","strokeColor","cols","range","setData","totalPrice","setTotalPrice","price","scale","forceFit","formatter","val","parseInt","crosshairs","position","shape","stroke","lineWidth","image","Empty","PRESENTED_IMAGE_SIMPLE","propDispatch","NoDataSvg","reloadData","handleAction","buttonType","rollback","includes","setParentState","handleSubmitForm","showCreateTaskModal","datePickerValue","TASK_TYPE","wait","finished","unfinished","TodayTask","getTask","handleOnSuccess","keys","span","Memorandum","list","setList","stopPropagation","index","copyList","dangerouslySetInnerHTML","__html","html","Create","computedMatch","setTitle","handleActionButton","markdown","getValue","init","Editor","initialEditType","previewStyle","usageStatistics","remove","onBlur","Detail","setContent","LeftOutlined","EditOutlined","remarks","typeId","nameList","initRef","isNaN","optionName","TYPES","symbol","OPTION_TYPES","Search","searchKeyword","income","available","sortedInfo","Reminder","onFilterDate","prevDay","subtract","startOf","add","sort","a","b","sortOrder","columnKey","defaultFilteredValue","__color__","__price__","onSearch","precision","keyword","typeNameId","defaultType","Type","typeName","handleEdit","getCapitalFlowType","handleData","ids","showCreateTodoModal","STATUS","currentRowData","TodoList","getTodoList","routesMap","exact","Login","MainEntry","HomeIndex","MemorandumCreate","MemorandumDetail","CapitalFlow","CapitalFlowType","Base","lazy","InnerMessage","Notification","Account","basename","Boolean","match","locale","ReactDOM","zh_CN","navigator","serviceWorker","ready","registration","unregister","console","LOGOUT","setSystemInfo"],"mappings":"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","file":"static/js/main.54289de9.chunk.js","sourcesContent":["/**\n * @file User Action Creator\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\nimport config from '@/config';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { USER } from '../constants';\nimport { LOCAL_STORAGE } from '@/constants';\nimport { serviceLoginByToken, serviceLogout } from '@/services';\nimport { Dispatch } from 'redux';\n\nconst { LOGIN } = USER;\n\nexport function setUser(userInfo: any = {}) {\n  if (userInfo.createdAt) {\n    userInfo.createdAt = moment(userInfo.createdAt).format('YYYY-MM-DD');\n  }\n  return {\n    type: LOGIN,\n    userInfo: userInfo\n  };\n}\n\n/**\n * 使用token进行登录\n */\nexport function loginByToken(token: string) {\n  return function (dispatch: Dispatch) {\n    return serviceLoginByToken(token).then((res: any) => {\n      if (res.data.success) {\n        const userInfo = res.data.data.userInfo;\n        return dispatch(setUser(userInfo));\n      }\n      return dispatch(setUser());\n    });\n  }\n}\n\n/**\n * 注销登录\n */\nexport function logout() {\n  serviceLogout()\n  .finally(() => {\n    const localStorageWhiteList = [LOCAL_STORAGE.LOGIN_NAME];\n    const localStorageLen = window.localStorage.length;\n    const allLocalStorageKey: string[] = [];\n\n    for (let i = 0; i < localStorageLen; i++) {\n      const key = window.localStorage.key(i) as string;\n      allLocalStorageKey.push(key);\n    }\n\n    allLocalStorageKey.forEach(keyName => {\n      if (localStorageWhiteList.indexOf(keyName) === -1) {\n        window.localStorage.removeItem(keyName);\n      }\n    });\n    window.sessionStorage.clear();\n    window.location.reload(true);\n  });\n}\n\n/**\n * Github Auth\n */\nexport function githubAuthz() {\n  const url = `https://github.com/login/oauth/authorize?response_type=code&redirect_uri=${config.github.callbackURL}&client_id=${config.github.clientId}`;\n  window.location.replace(url);\n}\n\n/**\n * 验证本地登录状态\n */\nexport function validateLocalStatus() {\n  let userInfo = {};\n  try {\n    userInfo = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE.USER) as string);\n    if (!_.isPlainObject(userInfo)) {\n      userInfo = {};\n    }\n  } catch {}\n  return setUser(userInfo);\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { modalConfirmDelete } from '@/utils/helper';\n\ninterface Props {\n  onDelete?: () => void;\n  selectedRowKeys: string[];\n}\n\nconst ActionPanel: React.FC<Props> = function({\n  selectedRowKeys,\n  onDelete\n}) {\n  const isShowPanel = onDelete;\n  const disabled = selectedRowKeys.length <= 0;\n\n  function handleDelete() {\n    modalConfirmDelete({\n      title: '确定要删除选中'\n    }).then(() => {\n      onDelete && onDelete();\n    });\n  }\n\n  return isShowPanel ? (\n    <div className=\"table-action-panel\">\n      {onDelete && (\n        <Button\n          type=\"primary\"\n          danger\n          onClick={handleDelete}\n          disabled={disabled}\n        >\n            删除\n        </Button>\n      )}\n    </div>\n  ) : null\n};\n\nexport default ActionPanel;\n","/**\n * @author xiejiahe <xjh22222228@gmail.com>\n * @example:\n * <Table\n *   // 配置ref用于调用父组件方法获取数据\n *   ref={tableRef}\n *\n *   // getData 接口函数获取数据，必须返回一个axios Promise 同时处理好数据\n *   getTableData={getData}\n *\n *   columns={tableColumns}\n * />\n */\n\nimport React, { FC, useEffect } from 'react';\nimport './style.scss';\nimport { Table } from 'antd';\nimport { TableProps } from 'rc-table/lib/Table';\nimport { AxiosPromise } from 'axios';\nimport useKeepState from 'use-keep-state';\nimport ActionPanel from './action-panel';\n\ninterface Props {\n  getTableData: (data: any) => AxiosPromise;\n  onTableChange?: (pagination: any, filters: any, sorter: any) => void;\n  onDelete?: (id: string) => AxiosPromise;\n  [key: string]: any;\n}\n\ninterface State {\n  tableHeight: number;\n  tableDataSource: any[];\n  isLoading: boolean;\n  pagination: {\n    [key: string]: any;\n  },\n  selectedRowKeys: string[]\n}\n\nconst DEFAULT_PAGE_SIZE = 50;\nconst initialState: State = {\n  tableHeight: 0,\n  tableDataSource: [],\n  isLoading: false,\n  pagination: {\n    pageNo: 1,\n    pageSize: DEFAULT_PAGE_SIZE,\n    showSizeChanger: true,\n    total: 0,\n    pageSizeOptions: ['30', '50', '70', '100', '200']\n  },\n  selectedRowKeys: []\n};\n\nconst TableFC: FC<Props & TableProps<unknown>> = ({\n  getTableData,\n  onTableChange,\n  onDelete,\n  forwardedRef: tableRef,\n  ...props\n}) => {\n  let rowSelection;\n  const showRowSelection = onDelete;\n  const [state, setState] = useKeepState(initialState);\n\n  function getData() {\n    setState({ isLoading: true });\n    const { pageNo, pageSize } = tableRef.current;\n    // 调用父组件函数获取数据\n    getTableData({\n      pageNo: pageNo - 1,\n      pageSize: pageSize\n    })\n      .then(res => {\n        if (res.data.success) {\n          setState({\n            pagination: {\n              ...state.pagination,\n              total: res.data.data.count,\n              pageSize\n            },\n            tableDataSource: res.data.data.rows\n          });\n        }\n      })\n      .finally(() => {\n        setState({ isLoading: false });\n      });\n  }\n\n  function onChange(pagination: any, filters: any, sorter: any) {\n    const pageNo = pagination.current;\n    const pageSize = pagination.pageSize;\n    setState({\n      pagination: {\n        ...state.pagination,\n        pageNo,\n        pageSize\n      }\n    });\n    tableRef.current.pageNo = pageNo;\n    tableRef.current.pageSize = pageSize;\n    getData();\n    onTableChange && onTableChange(pagination, filters, sorter);\n  }\n\n  useEffect(() => {\n    if (!tableRef.current) {\n      tableRef.current = {};\n    }\n    // 新增方法给父组件调用\n    tableRef.current.getTableData = getData;\n  });\n\n  useEffect(() => {\n    tableRef.current.pageNo = 1;\n    tableRef.current.pageSize = DEFAULT_PAGE_SIZE;\n  }, [tableRef]);\n\n  useEffect(() => {\n    // 设置表格的高度\n    setTimeout(() => {\n      const tableEl = document.querySelector('.ant-table-wrapper');\n      if (tableEl) {\n        setState({ tableHeight: tableEl.clientHeight - 120 });\n      }\n    }, 0);\n  }, [setState]);\n\n  function handleDelete() {\n    if (!onDelete) return null;\n    const selectedRowKeys = state.selectedRowKeys.join(',');\n    onDelete(selectedRowKeys)\n      .then(res => {\n        if (res.data.success) {\n          setState({ selectedRowKeys: [] });\n          getData();\n        }\n      });\n  }\n\n  if (showRowSelection) {\n    rowSelection = {\n      onChange(selectedRowKeys: string[]) {\n        setState({ selectedRowKeys });\n      }\n    };\n  }\n\n  return (\n    <React.Fragment>\n      <ActionPanel\n        selectedRowKeys={state.selectedRowKeys}\n        onDelete={onDelete && handleDelete}\n      />\n\n      <Table\n        {...props as any}\n        rowKey=\"id\"\n        loading={state.isLoading}\n        dataSource={state.tableDataSource}\n        scroll={{ y: state.tableHeight + 'px' }}\n        showHeader={state.tableDataSource.length}\n        onChange={onChange}\n        rowSelection={rowSelection}\n        pagination={{\n          ...state.pagination,\n          size: 'small'\n        }}\n      />\n    </React.Fragment>\n  )\n};\n\nconst forwardedTable = React.forwardRef((props: any, ref) => (\n  <TableFC {...props} forwardedRef={ref} />\n));\n\nexport default React.memo(forwardedTable);\n","import axios from 'axios';\nimport CONFIG from '@/config';\nimport store from '@/store';\nimport { message } from 'antd';\nimport { logout } from '@/store/actions';\nimport { spin } from '@/utils';\n\nlet _logout = false;\nconst CancelToken = axios.CancelToken;\n\nfunction handleError(error: any): Promise<any> | undefined {\n  if (axios.isCancel(error)) {\n\n  } else {\n    const response = error.response;\n    message.error(`${response.status} ${response.statusText}`);\n  }\n  return void 0;\n}\n\nconst httpInstance = axios.create({\n  timeout: 60000,\n  baseURL: CONFIG.http.baseURL\n});\n\nhttpInstance.defaults.headers.common.isLoading = true;\nhttpInstance.defaults.headers.common.successAlert = false;\nhttpInstance.defaults.headers.common.errorAlert = true;\nObject.setPrototypeOf(httpInstance, axios);\n\nhttpInstance.interceptors.request.use(function (config) {\n  const method = config.method;\n  const url = config.url;\n  const userState = store.getState().user.userInfo;\n\n  // 取消重复请求\n  window.axiosCancelTokenStore.forEach((store, idx) => {\n    if (\n      config.headers.cancelRequest !== false &&\n      store.url === url &&\n      store.method === method\n    ) {\n      store.cancel();\n      window.axiosCancelTokenStore.splice(idx, 1);\n    }\n  });\n\n  config.headers.token = userState.token;\n  config.cancelToken = new CancelToken(cancel => {\n    window.axiosCancelTokenStore.push({\n      pathname: window.location.pathname,\n      method,\n      url,\n      cancel\n    });\n  });\n\n  const data: { [k: string]: any } = {};\n\n  if (config.headers.isLoading) {\n    spin.start();\n  }\n\n  if (method === 'post' || method === 'put') {\n    if (config.data instanceof FormData) {\n      for (let key in data) {\n        config.data.append(key, data[key])\n      }\n    } else {\n      config.data = Object.assign(data, config.data);\n    }\n  }\n\n  return config;\n}, function (error) {\n  return (handleError(error) as any) || Promise.reject(error);\n});\n\n\nhttpInstance.interceptors.response.use(function (res) {\n  if (res.config.headers.isLoading) {\n    spin.done();\n  }\n\n  if (!res.data.success && res.config.headers.errorAlert) {\n    message.warn(res.data.msg ?? '服务器出小差');\n  }\n\n  if (res.data.success && res.config.headers.successAlert) {\n    message.success(res.data.msg ?? 'success');\n  }\n\n  if (res.data.errorCode === 401 && !_logout) {\n    _logout = true;\n    setTimeout(logout, 2000);\n  }\n  return res;\n}, function (error) {\n  return (handleError(error) as any) || Promise.reject(error);\n});\n\nexport default httpInstance;\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 通过账号密码登录\nexport function serviceLogin(data: object) {\n  return http.post(api.login, data);\n}\n\n// 通过token登录\nexport function serviceLoginByToken(token: string) {\n  return http.get(api.loginByToken, {\n    params: { token }\n  });\n}\n\n// 退出登录\nexport function serviceLogout() {\n  return http.get(api.logout);\n}\n\n// 更新用户信息\nexport function serviceUpdateUser(data: object) {\n  return http.post(api.updateUser, data, {\n    headers: { successAlert: true }\n  });\n}\n\n// 获取用户配置信息\nexport function serviceGetUserConfig() {\n  return http.get(api.getUserConfig);\n}\n\n// 更新用户配置信息\nexport function serviceUpdateUserConfig(data: object) {\n  return http.put(api.getUserConfig, data, {\n    headers: { successAlert: true }\n  });\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 获取系统信息\nexport function serviceGetSystemInfo() {\n  return http.get(api.getSystemInfo);\n}\n\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 新增\nexport function serviceCreateReminder(data: object) {\n  return http.post(api.reminder, data, {\n    headers: { successAlert: true }\n  });\n}\n\n// 查询\nexport function serviceGetReminder(params?: object) {\n  return http.get(api.reminder, { params });\n}\n\n// 删除\nexport function serviceDeleteReminder(id: unknown) {\n  return http.delete(`${api.reminder}/${id}`, {\n    headers: { successAlert: true }\n  });\n}\n\n// 更新\nexport function serviceUpdateReminder(id: unknown, data: object) {\n  return http.put(`${api.reminder}/${id}`, data, {\n    headers: { successAlert: true }\n  });\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 创建\nexport function serviceCreateTask(data: object) {\n  return http.post(api.todayTask, data, {\n    headers: { successAlert: true }\n  });\n}\n\n// 查询\nexport function serviceGetTask(params?: object) {\n  return http.get(api.todayTask, {\n    params,\n    headers: { isLoading: true }\n  });\n}\n\n// 删除\nexport function serviceDeleteTask(id: unknown) {\n  return http.delete(`${api.todayTask}/${id}`);\n}\n\n// 更新\nexport function serviceUpdateTask(id: unknown, data?: object) {\n  return http.put(`${api.todayTask}/${id}`, data);\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 类型\nexport function serviceGetCapitalFlowType() {\n  return http.get(api.capitalFlowType, {\n    headers: { isLoading: true }\n  });\n}\n\nexport function serviceDeleteCapitalFlowType(id: string) {\n  return http.delete(`${api.capitalFlowType}/${id}`, {\n    headers: { successAlert: true }\n  });\n}\n\nexport function serviceUpdateCapitalFlowType(id: string, data: object) {\n  return http.put(`${api.capitalFlowType}/${id}`, data, {\n    headers: { successAlert: true }\n  });\n}\n\nexport function serviceCreateCapitalFlowType(data: object) {\n  return http.post(api.capitalFlowType, data, {\n    headers: { successAlert: true }\n  });\n}\n\n\n// 资金流动\nexport function serviceGetCapitalFlow(params?: object) {\n  return http.get(api.capitalFlow, { params });\n}\n\nexport function serviceDeleteCapitalFlow(id: string) {\n  return http.delete(`${api.capitalFlow}/${id}`, {\n    headers: { successAlert: true }\n  });\n}\n\nexport function serviceUpdateCapitalFlow(id: string, data: object) {\n  return http.put(`${api.capitalFlow}/${id}`, data, {\n    headers: { successAlert: true }\n  });\n}\n\nexport function serviceCreateCapitalFlow(data: object) {\n  return http.post(api.capitalFlow, data);\n}\n\nexport function serviceGetCapitalFlowPrice(params?: object) {\n  return http.get(api.getCapitalFlowPrice, { params });\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 新增\nexport function serviceCreateMemorandum(data: object) {\n  return http.post(api.memorandum, data, {\n    headers: { successAlert: true }\n  });\n}\n\n// 查询所有\nexport function serviceGetMemorandum(params?: object) {\n  return http.get(api.memorandum, {\n    params,\n    headers: { isLoading: true }\n  });\n}\n\n// 通过id查询\nexport function serviceGetMemorandumById(id: unknown) {\n  return http.get(`${api.memorandum}/${id}`, {\n    headers: { isLoading: true }\n  });\n}\n\n// 删除\nexport function serviceDeleteMemorandum(id: unknown) {\n  return http.delete(`${api.memorandum}/${id}`);\n}\n\n// 更新\nexport function serviceUpdateMemorandum(id: unknown, data: object) {\n  return http.put(`${api.memorandum}/${id}`, data, {\n    headers: { successAlert: true }\n  });\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 查询\nexport function serviceGetInnerMessage(params?: object) {\n  return http.get(api.innerMessage, {\n    params,\n    headers: {\n      errorAlert: false,\n      cancelRequest: false\n    }\n  });\n}\n\n// 标志已读\nexport function serviceUpdateInnerMessageHasRead(id: unknown) {\n  return http.put(`${api.innerMessage}/${id}`, null, {\n    headers: { successAlert: true }\n  });\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 创建\nexport function serviceCreateTodoList(data: object) {\n  return http.post(api.todoList, data);\n}\n\n// 查询\nexport function serviceGetTodoList(params?: object) {\n  return http.get(api.todoList, { params });\n}\n\n// 删除\nexport function serviceDeleteTodoList(id: unknown) {\n  return http.delete(`${api.todoList}/${id}`, {\n    headers: { successAlert: true }\n  });\n}\n\n// 更新\nexport function serviceUpdateTodoList(id: unknown, data?: object) {\n  return http.put(`${api.todoList}/${id}`, data);\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 获取后台首页面板数据\nexport function serviceGetPanelData(params?: object) {\n  return http.get(api.getPanelData, { params });\n}\n\n\n","import { Modal, message } from 'antd';\n\n\nconst CODE = 'qwertyuipasdfghjklxcvbnm13456789';\n\n/**\n * 计算百分比\n * @example\n * totalPercentage(8589934592, 225492992);  // => 98\n */\nexport function totalPercentage(totalmem: number, freemem: number) {\n  return Math.floor((totalmem - freemem) / totalmem * 100);\n}\n\n/**\n * 删除模态对话框\n * @return Promise\n */\nexport function modalConfirmDelete(object?: { [k: string]: any }) {\n  return new Promise(resolve => {\n    Modal.confirm({\n      title: '确定要删除吗？',\n      okType: 'danger',\n      onOk() {\n        resolve(true);\n      },\n      ...object\n    });\n  });\n}\n\n\n// 全屏浏览器\nexport function fullscreen() {\n  try {\n    const docElm = document.documentElement as any;\n    if (docElm.requestFullscreen) {\n      docElm.requestFullscreen();\n    } else if (docElm.webkitRequestFullScreen) {\n      docElm.webkitRequestFullScreen();\n    } else if (docElm.mozRequestFullScreen) {\n      docElm.mozRequestFullScreen();\n    } else if (docElm.msRequestFullscreen) {\n      docElm.msRequestFullscreen();\n    }\n  } catch {\n    message.warn('您所使用的浏览器不支持全屏');\n  }\n}\n\n// 退出全屏浏览器\nexport function exitFullscreen() {\n  try {\n    const doc = document as any;\n    if (doc.exitFullscreen) {\n      doc.exitFullscreen();\n    } else if (doc.mozCancelFullScreen) {\n      doc.mozCancelFullScreen();\n    } else if (doc.webkitCancelFullScreen) {\n      doc.webkitCancelFullScreen();\n    } else if (doc.msExitFullscreen) {\n      doc.msExitFullscreen();\n    }\n  } catch {\n    message.warn('您所使用的浏览器不支持退出全屏, 请按ESC');\n  }\n}\n\n// 随机字符串\nexport function randomCode(num = 4) {\n  let data = '';\n\n  for (let i = 0; i < num; i++) {\n    const random = Math.floor(Math.random() * CODE.length);\n    data += CODE[random];\n  }\n\n  return data;\n}\n","import { useState } from 'react';\n\ninterface InputProps {\n  value: any;\n  onChange(event: React.ChangeEvent<HTMLInputElement>): void\n}\n\n/**\n * Input onChange and useState\n * @param initialValue\n */\nexport function useFormInput(initialValue: any): InputProps {\n  const [value, setValue] = useState(initialValue);\n  function handleChange(event: React.ChangeEvent<HTMLInputElement & HTMLTextAreaElement>): void {\n    setValue(event.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  };\n}\n\n","/**\n * @file User reducers\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\n\nimport { USER } from '../constants';\nimport { LOCAL_STORAGE } from '@/constants';\n\nconst { LOGIN } = USER;\n\nexport interface UserInfoProps {\n  provider: string;\n  uid: number | undefined;\n  username: string;\n  password: string;\n  loginName: string;\n  avatarUrl: string;\n  email: string;\n  role: string;\n  token: string | undefined;\n  bio: string;\n  location: string;\n  createdAt: string;\n}\n\nexport interface UserState {\n  isLogin: boolean;\n  isLockScreen: boolean;\n  userInfo: UserInfoProps;\n}\n\nconst initialState: UserState = {\n  isLogin: false,\n  isLockScreen: false,\n  userInfo: {\n    provider: '', // github ?\n    uid: undefined, // 用户ID\n    createdAt: '', // 注册时间\n    bio: '', // 简介\n    username: '', // 昵称\n    password: '', // 经过MD5加密后的密码\n    loginName: '', // 登录名\n    avatarUrl: '', // 头像\n    email: '',\n    role: '',\n    token: undefined, // 登录凭证\n    location: ''\n  }\n};\n\nfunction user(state = initialState, action: any): UserState {\n  switch (action.type) {\n    case LOGIN:\n      const userInfo = action.userInfo;\n      if (userInfo?.token) {\n        state.isLogin = true;\n        window.localStorage.setItem(LOCAL_STORAGE.USER, JSON.stringify(userInfo));\n        window.localStorage.setItem(LOCAL_STORAGE.LOGIN_NAME, userInfo.loginName);\n      }\n      return { ...state, userInfo: action.userInfo };\n    default:\n      return state;\n  }\n}\n\nexport default user;\n","/**\n * @file System reducers\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\nimport _ from 'lodash';\nimport { SYSTEM } from '../constants';\n\nconst { INFO } = SYSTEM;\n\nexport interface SystemState {\n  info: {\n    mysqlVersion: string;\n    currentSystemTime: number;\n    freemem: number;\n    totalmem: number;\n    platform: string;\n    type: string;\n    hostname: string;\n    arch: string;\n    nodeVersion: string;\n    cpus: any[];\n  }\n}\n\nconst initialState: SystemState = {\n  info: {\n    mysqlVersion: '',\n    currentSystemTime: Date.now(),\n    freemem: 0,\n    totalmem: 0,\n    platform: '',\n    type: '',\n    hostname: '',\n    arch: '',\n    nodeVersion: '',\n    cpus: []\n  }\n};\n\nfunction system(state = initialState, action: any): SystemState {\n  switch (action.type) {\n    case INFO:\n      if (_.isEmpty(action.data)) {\n        return state;\n      }\n      action.data.arch = action.data.arch.slice(1);\n      return {\n        ...state,\n        info: action.data\n      };\n    default:\n      return state;\n  }\n}\n\nexport default system;\n","/**\n * @file Reducers Entry\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\n\nimport user from './user';\nimport system from './system';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n  user,\n  system\n});\n","/**\n * @file Store main entry.\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { UserState } from './reducers/user';\nimport { SystemState } from './reducers/system';\n\nexport interface StoreState {\n  user: UserState;\n  system: SystemState;\n}\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;\n","\nconst API = {\n  // 验证码\n  getCaptcha: '/api/captcha?code=',\n  // 账号密码登录\n  login: '/passport/local',\n  // 使用token登录\n  loginByToken: '/accessToken',\n  // 退出登录\n  logout: '/logout',\n  // 获取系统信息\n  getSystemInfo: '/system/info',\n  // 更新用户\n  updateUser: '/user/update',\n  // 获取用户配置\n  getUserConfig: '/userConfig',\n  // 提醒事项\n  reminder: '/reminder',\n  // 今日待办\n  todayTask: '/task',\n  // 资金流动类型\n  capitalFlowType: '/capitalFlowType',\n  // 资金流动\n  capitalFlow: '/capitalFlow',\n  // 获取资金流动金额\n  getCapitalFlowPrice: '/capitalFlow/price',\n  // 备忘录\n  memorandum: '/memorandum',\n  // 站内消息\n  innerMessage: '/innerMessage',\n  // 活动清单\n  todoList: '/todoList',\n  // 获取首页面板数据\n  getPanelData: '/panel'\n};\n\nexport default API;\n","import React from 'react';\nimport { Avatar as AvatarComponent } from 'antd';\nimport { AvatarProps } from 'antd/lib/avatar';\n\nfunction handleError() {\n  return true;\n}\n\nconst Avatar: React.FC<AvatarProps> = props => {\n  return (\n    <AvatarComponent {...props} onError={handleError} />\n  )\n};\n\nexport default Avatar;\n","module.exports = __webpack_public_path__ + \"static/media/no-data.ab7ce88c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b5b8d91e.png\";","import moment from 'moment';\n\ntype ns = number | string;\n\nexport const ONE_DAY_TIMESTAMP = 60 * 60 * 24 * 1000 - 1;\n\n// 获取当前月份总天数\nexport function getCurMonthTotalDay(): number {\n  return moment().daysInMonth();\n}\n\n// 获取当前月份的第一天日期\nexport function getCurMonthFirstDay(format: 'timestamp'): number;\nexport function getCurMonthFirstDay(format: string): string;\nexport function getCurMonthFirstDay(format: string = 'timestamp'): ns {\n  const cur = new Date();\n  cur.setDate(1);\n  cur.setHours(0, 0, 0);\n  return format === 'timestamp' ? cur.getTime() : moment(cur).format(format);\n}\n\n// 获取当前月份的最后一天日期\nexport function getCurMonthLastDay(format: 'timestamp'): number;\nexport function getCurMonthLastDay(format: string): string;\nexport function getCurMonthLastDay(format: string = 'timestamp'): ns {\n  const cur = new Date();\n  cur.setDate(getCurMonthTotalDay());\n  cur.setHours(23, 59, 59);\n  return format === 'timestamp' ? cur.getTime() : moment(cur).format(format);\n}\n\n// 判断传入时间戳是否小于今天时间戳\nexport function isLtTodayTimestamp (current: moment.Moment | null): boolean {\n  const todayTimestamp = new Date().setHours(0, 0, 0, 0);\n  if (current && current?.valueOf() > todayTimestamp) {\n    return false;\n  }\n  return true;\n}\n\n// 获取今天日期开始时间戳， 如：2019-07-05 00:00:00\nexport function getTodayStartTimestamp() {\n  return new Date().setHours(0, 0, 0, 0);\n}\n\n// 获取今天日期开始时间戳， 如：2019-07-05 23:59:59\nexport function getTodayEndTimestamp() {\n  return new Date().setHours(23, 59, 59);\n}\n\n// 根据日期获取开始时间戳\nexport function getStartTimestampByDate(date: any = Date.now()) {\n  return new Date(date).setHours(0, 0, 0, 0);\n}\n\n// 根据日期获取结束时间戳\nexport function getEndTimestampByDate(date: any = Date.now()) {\n  return new Date(date).setHours(23, 59, 59);\n}\n\n// 获取今天日期开始时间戳和结束时间戳\nexport function getTodayStartAndEndTimestamp(): [number, number] {\n  return [getTodayStartTimestamp(), getTodayEndTimestamp()];\n}\n\n// 判断是否是今天\nexport function isToday(date: any) {\n  try {\n    const parse = +new Date(date);\n    if (getTodayStartTimestamp() < parse && getTodayEndTimestamp() > parse) {\n      return true;\n    }\n  } catch {\n    return false;\n  }\n}\n\n// 获取今年第一天\nexport function getThisYearFirstDay() {\n  const now = new Date();\n  now.setMonth(0, 1);\n  now.setHours(0, 0, 0, 0);\n\n  return moment(now.getTime());\n}\n\n// 获取今年最后一天\nexport function getThisYearLastDay() {\n  return moment().endOf('year');\n}\n","\nconst spinHTML = '<div class=\"ant-spin ant-spin-spinning\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span></div>';\nlet containerEl: HTMLElement;\n\nfunction start() {\n  try {\n    if (document.querySelector('.spin-loading')) {\n      return;\n    }\n\n    containerEl = containerEl || document.getElementById('container') as HTMLElement;\n    const spinEl = document.createElement('div');\n    spinEl.className = 'spin-loading';\n    spinEl.innerHTML = spinHTML;\n    containerEl.appendChild(spinEl);\n  } catch {}\n}\n\nfunction done() {\n  try {\n    const spin = document.querySelector('.spin-loading') as any;\n    if (!spin) return;\n    spin.parentNode.removeChild(spin);\n  } catch {}\n}\n\nexport const spin = { start, done };\n","\nconst isProduction = process.env.NODE_ENV === 'production';\nconst isDevelopment = !isProduction;\n\nconst CONFIG = {\n  isProduction,\n  isDevelopment,\n  // 路由 basename\n  baseURL: '/',\n  // 网页标题\n  title: 'Tomato Work',\n  http: {\n    baseURL: '/api'\n  },\n  github: {\n    clientId: isProduction ? '789d87c19dd5ed1dc42e' : '489b39e1f91d934128c8',\n    // callbackURL 不可随意更改, 否则需要与服务端配置文件一同修改\n    callbackURL: `${window.location.origin}/api/passport/github/callback`,\n    repositoryUrl: 'https://github.com/xjh22222228/tomato-work',\n    bug: 'https://github.com/xjh22222228/tomato-work/issues'\n  }\n};\n\nexport default CONFIG;\n","\nexport const LOCAL_STORAGE = {\n  USER: 'USER',\n  SIDEBAR_COLLAPSED: 'SIDEBAR_COLLAPSED',\n  LOGIN_NAME: 'LOGIN_NAME',\n  LOCK_SCREEN: 'LOCK_SCREEN'\n};\n","import React from 'react';\nimport { HOME, SETTING } from '@/router/constants';\nimport {\n  HomeOutlined,\n  ClockCircleOutlined,\n  FileDoneOutlined,\n  ScheduleOutlined,\n  BarChartOutlined,\n  FormOutlined,\n  UserOutlined\n} from '@ant-design/icons';\n\nexport const HOME_SIDER_MENU_LIST = [\n  {\n    path: HOME.HOME_INDEX.path,\n    icon: <HomeOutlined />,\n    name: HOME.HOME_INDEX.name\n  },\n  {\n    path: HOME.REMINDER.path,\n    icon: <ClockCircleOutlined />,\n    name: HOME.REMINDER.name\n  },\n  {\n    path: HOME.TODO_LIST.path,\n    icon: <FileDoneOutlined />,\n    name: HOME.TODO_LIST.name,\n  },\n  {\n    path: HOME.TODAY_TASK.path,\n    icon: <ScheduleOutlined />,\n    name: HOME.TODAY_TASK.name\n  },\n  {\n    path: '',\n    icon: <BarChartOutlined />,\n    name: '财务管理',\n    children: [\n      {\n        path: HOME.CAPITAL_FLOW.path,\n        name: HOME.CAPITAL_FLOW.name,\n      },\n      {\n        path: HOME.CAPITAL_FLOW_TYPE.path,\n        name: HOME.CAPITAL_FLOW_TYPE.name,\n      }\n    ]\n  },\n  {\n    path: HOME.MEMORANDUM.path,\n    icon: <FormOutlined />,\n    name: '我的备忘',\n    children: [\n      {\n        path: HOME.MEMORANDUM.path,\n        name: HOME.MEMORANDUM.name,\n      },\n      {\n        path: HOME.MEMORANDUM_CREATE.path[0],\n        name: HOME.MEMORANDUM_CREATE.name,\n      }\n    ]\n  },\n  {\n    path: SETTING.BASE.path,\n    icon: <UserOutlined />,\n    name: SETTING.BASE.name\n  }\n];\n\nexport const SETTING_SIDER_MENU_LIST = [\n  {\n    path: SETTING.BASE.path,\n    name: SETTING.BASE.name\n  },\n  {\n    path: SETTING.INNER_MESSAGE.path,\n    name: SETTING.INNER_MESSAGE.name\n  },\n  {\n    path: SETTING.NOTIFICATION.path,\n    name: SETTING.NOTIFICATION.name\n  },\n  {\n    path: SETTING.ACCOUNT.path,\n    name: SETTING.ACCOUNT.name\n  },\n];\n","// 路由常量配置信息\n\nexport const SETTING = {\n  BASE: { name: '个人中心', path: '/home/setting/base' },\n\n  INNER_MESSAGE: { name: '消息中心', path: '/home/setting/innerMessage' },\n\n  NOTIFICATION: { name: '消息通知', path: '/home/setting/notification' },\n\n  ACCOUNT: { name: '账号设置', path: '/home/setting/account' },\n};\n\nexport const HOME = {\n  LOGIN: { name: '登录', path: ['/', '/login'] },\n\n  HOME: { name: '', path: '/home' },\n\n  HOME_INDEX: { name: '后台首页', path: '/home/index' },\n\n  REMINDER: { name: '提醒事项', path: '/home/reminder' },\n\n  SETTING_INDEX: { name: '个人中心', path: '/home/setting' },\n\n  TODAY_TASK: { name: '今日待办', path: '/home/todayTask' },\n\n  MEMORANDUM: { name: '备忘录列表', path: '/home/memorandum' },\n  MEMORANDUM_CREATE: { name: '备忘录创建', path: [\n    '/home/memorandum/create', '/home/memorandum/update/:id'\n  ] },\n  MEMORANDUM_DETAIL: { name: '*', path: '/home/memorandum/detail/:id' },\n\n  CAPITAL_FLOW: { name: '资金流动', path: '/home/capitalFlow' },\n  CAPITAL_FLOW_TYPE: { name: '创建类别', path: '/home/capitalFlow/type' },\n\n  TODO_LIST: { name: '活动清单', path: '/home/todoList' },\n\n  NO_MATCH: { name: '404 Not Found', path: '*' },\n};\n","import React from 'react';\nimport CONFIG from '@/config';\nimport qs from 'query-string';\nimport { Switch, Route, Redirect, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { IRouteProps } from '@/router/types';\nimport { connect } from 'react-redux';\nimport { StoreState } from '@/store/index';\nimport { HOME } from '@/router/constants';\n\ntype Props = IRouteProps & ReturnType<typeof mapStateToProps> & RouteComponentProps;\n\nconst PrivateRoute: React.FC<Props> = function ({\n  component: Component,\n  childrenRoutes,\n  isLogin,\n  location,\n  ...rest\n}) {\n\n  // 取消不是当前页面的所有http请求\n  if (Array.isArray(window.axiosCancelTokenStore)) {\n    window.axiosCancelTokenStore.forEach(store => {\n      if (store.pathname !== location.pathname) {\n        store.cancel();\n      }\n    });\n    window.axiosCancelTokenStore = [];\n  }\n\n  const { meta } = rest;\n  if (meta) {\n    if (meta.title) {\n      document.title = `${meta.title} - ${CONFIG.title}`;\n    } else {\n      document.title = CONFIG.title;\n    }\n  }\n\n  // 验证权限\n  const auth = function () {\n    if (meta?.requiresAuth) {\n      if (isLogin) {\n        return true;\n      }\n      return false;\n    }\n    return true;\n  }();\n\n  if (meta?.isLoginToHome && isLogin) {\n    const redirectUrl = qs.parse(location.search).redirectUrl as string;\n    const url = redirectUrl || HOME.HOME_INDEX.path;\n    return <Redirect to={url} />\n  }\n\n  return (\n    <Route render={props => {\n      return (\n        auth ? (\n          <Component {...props} {...rest}>\n            {Array.isArray(childrenRoutes) ? (\n              <Switch>\n                {childrenRoutes.map((route, idx: number) => (\n                  <PrivateRouteComponent {...route} key={idx} />\n                ))}\n              </Switch>\n            ) : null}\n          </Component>\n        ) : (\n          <Redirect to={{\n            pathname: '/',\n            search: `?redirectUrl=${props.location.pathname}`\n          }} />\n        )\n      )\n    }} />\n  )\n};\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    isLogin: state.user.isLogin\n  }\n};\n\nexport const PrivateRouteComponent = connect(mapStateToProps)(withRouter(PrivateRoute));\n\nexport default PrivateRouteComponent;\n","import React from 'react';\nimport './style.scss';\nimport CONFIG from '@/config';\n\nconst currentYear = new Date().getFullYear();\n\nconst Footer = () => {\n  return (\n    <footer className=\"global-footer\">\n      <div>\n        Copyright &copy; 2019-{currentYear} {CONFIG.title} -\n        <a href=\"https://github.com/xjh22222228\" target=\"_blank\" rel=\"noopener noreferrer\"> xiejiahe</a>\n      </div>\n    </footer>\n  )\n};\n\nexport default Footer;\n","import React, {\n  useState,\n  useEffect,\n} from 'react';\nimport './style.scss';\nimport Footer from '@/components/footer';\nimport qs from 'query-string';\nimport md5 from 'blueimp-md5';\nimport _ from 'lodash';\nimport api from '@/api';\nimport config from '@/config';\nimport { Button, Input, message, Popover } from 'antd';\nimport { useFormInput } from '@/hooks';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { DispatchProp, connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { githubAuthz, loginByToken, setUser } from '@/store/actions';\nimport { serviceLogin } from '@/services';\nimport { HOME } from '@/router/constants';\nimport { LOCAL_STORAGE } from '@/constants';\nimport { randomCode } from '@/utils';\nimport {\n  PictureOutlined,\n  LockOutlined,\n  UserOutlined,\n  GithubOutlined\n} from '@ant-design/icons';\n\n\ntype ThunkDispatchProps = ThunkDispatch<{}, {}, AnyAction>;\ntype LoginProps = {\n  dispatch: ThunkDispatchProps;\n} & DispatchProp & RouteComponentProps;\n\nconst PopoverContent = (\n  <div style={{ padding: '10px 20px 10px 20px' }}>\n    <div>本站不开放注册账号，首次登陆请使用GitHub</div>\n    <div>登陆后系统将自动注册账号, 密码为123456</div>\n  </div>\n);\n\nlet captcha = randomCode();\nconst LOGIN_NAME = window.localStorage.getItem(LOCAL_STORAGE.LOGIN_NAME) || '';\n\n\nfunction reloadCaptcha(e: any) {\n  captcha = randomCode();\n  const url = api.getCaptcha + captcha;\n  e.target.src = url;\n}\n\nconst Login: React.FC<LoginProps> = function ({\n  dispatch,\n  history,\n  location\n}) {\n  const loginName = useFormInput(config.isDevelopment ? 'test' : LOGIN_NAME);\n  const password = useFormInput(config.isDevelopment ? '123456' : '');\n  const code = useFormInput('');\n  const [loading, setLoading] = useState(false);\n  const [redirectUrl] = useState(() => {\n    const url = qs.parse(location.search).redirectUrl as string;\n    return url || HOME.HOME_INDEX.path;\n  });\n\n  const handleSubmit = () => {\n    const _loginName = loginName.value.trim();\n    const _password = password.value.trim();\n    const _code = code.value.trim();\n\n    try {\n      if (!_loginName) throw new Error('用户名不能为空');\n      if (!_password) throw new Error('密码不能为空');\n      if (_code !== captcha) throw new Error('验证码错误');\n\n      setLoading(true);\n      serviceLogin({\n        loginName: _loginName,\n        password: md5(_password),\n        code: _code\n      })\n        .then(res => {\n          setLoading(false);\n          if (res.data.success) {\n            dispatch(setUser(res.data.data.userInfo));\n            history.replace(redirectUrl);\n          }\n        })\n        .catch(_ => {\n          setLoading(false);\n        });\n    } catch (err) {\n      message.warn(err.message);\n    }\n  };\n\n  const githubHandler = () => {\n    setLoading(true);\n    githubAuthz();\n  };\n\n  useEffect(() => {\n    const query = qs.parse(location.search);\n    const { token, state } = query;\n\n    if (Number(state) === 0) {\n      message.error('登录失败，请重新登录');\n      return;\n    }\n\n    if (token) {\n      dispatch(loginByToken(token as string))\n      .then((res) => {\n        if (!_.isEmpty(res.userInfo)) {\n          history.replace(redirectUrl);\n        }\n      });\n    }\n  }, [history, location.search, dispatch, redirectUrl]);\n\n  return (\n    <section className=\"login-page\">\n      <a href={config.github.repositoryUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        <svg width=\"56\" height=\"56\" viewBox=\"0 0 250 250\" className=\"svg-wrapper\" aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" className=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\"></path></svg>\n      </a>\n\n      <div className=\"wrap\">\n        <div>\n          <div className=\"logo-wrap\">\n            <img src={require('@/assets/img/common/logo.png')} className=\"logo\" alt=\"\" />\n            <em>{config.title}</em>\n          </div>\n          <Input.Group>\n            <Input\n              {...loginName}\n              placeholder=\"用户名\"\n              prefix={<UserOutlined />}\n              maxLength={32}\n              autoComplete=\"off\"\n              onPressEnter={handleSubmit}\n            />\n            <Input\n              {...password}\n              placeholder=\"密码\"\n              prefix={<LockOutlined />}\n              maxLength={32}\n              type=\"password\"\n              autoComplete=\"off\"\n              onPressEnter={handleSubmit}\n            />\n            <Input\n              {...code}\n              placeholder=\"请输入验证码\"\n              prefix={<PictureOutlined />}\n              maxLength={4}\n              autoComplete=\"off\"\n              onPressEnter={handleSubmit}\n              suffix={\n                <img\n                  src={`${api.getCaptcha}${captcha}`}\n                  className=\"captcha\"\n                  onClick={reloadCaptcha}\n                  alt=\"\"\n                />\n              }\n            />\n          </Input.Group>\n          <Button\n            type=\"primary\"\n            style={{ marginTop: '20px' }}\n            size=\"large\"\n            loading={loading}\n            block\n            onClick={handleSubmit}\n          >\n            {loading ? '登 录 中...' : '登 录'}\n          </Button>\n          <div className=\"register\">\n            <Popover\n              content={PopoverContent}\n              trigger=\"hover\"\n              placement=\"bottomRight\"\n            >\n              <span>注册账号</span>\n            </Popover>\n          </div>\n          <Button\n            style={{ marginTop: '20px' }}\n            size=\"large\"\n            loading={loading}\n            block\n            icon={<GithubOutlined />}\n            onClick={githubHandler}\n          >\n            使用 Github 登录\n          </Button>\n        </div>\n      </div>\n      <Footer />\n    </section>\n  )\n};\n\nexport default connect()(Login);\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport './style.scss';\nimport bytes from 'bytes';\nimport moment from 'moment';\nimport CONFIG from '@/config';\nimport useKeepState from 'use-keep-state';\nimport { Row, Col, Card, Progress, Empty } from 'antd';\nimport { totalPercentage } from '@/utils';\nimport { serviceGetInnerMessage } from '@/services';\n\ninterface Props {\n  systemInfo: {\n    [propName: string]: any;\n  }\n}\n\ninterface State {\n  curSystemTime: string;\n  messageList: any[];\n  loading: boolean;\n}\n\nconst initialState: State = {\n  curSystemTime: '',\n  messageList: [],\n  loading: true\n};\n\nconst statusColor = (percentage: number) => {\n  if (percentage < 40) return '#52c41a';\n  if (percentage < 80) return '#ffa500';\n  return '#f50';\n};\nlet timer: any;\n\nconst System: React.FC<Props> = ({ systemInfo }) => {\n  const [state, setState] = useKeepState(initialState);\n  const memPercentage = useMemo(() => {\n    return totalPercentage(systemInfo.totalmem, systemInfo.freemem);\n  }, [systemInfo.totalmem, systemInfo.freemem]);\n\n  // 倒计时\n  const countdown = useCallback(() => {\n    clearTimeout(timer);\n    const timeDiff = systemInfo.currentSystemTime + (Date.now() - systemInfo.currentSystemTime);\n    setState({ curSystemTime: moment(timeDiff).format('YYYY-MM-DD HH:mm:ss') });\n    timer = setTimeout(() => {\n      countdown();\n    }, 1000);\n  }, [systemInfo.currentSystemTime, setState]);\n\n  useEffect(() => {\n    countdown();\n\n    return () => {\n      clearTimeout(timer);\n    }\n  }, [countdown]);\n\n  useEffect(() => {\n    serviceGetInnerMessage({ pageSize: 5 })\n    .then(res => {\n      if (res.data.success) {\n        setState({ loading: false, messageList: res.data.data.rows });\n      }\n    });\n  }, [setState]);\n\n  return (\n    <Row gutter={{ xs: 8, sm: 16, md: 24}} className=\"system-data\">\n      <Col xl={8} lg={12} md={12} sm={24} xs={24}>\n        <Card\n          title=\"系统参数\"\n          hoverable\n          loading={!systemInfo.nodeVersion}\n        >\n          <p className=\"item-text\">\n            <em>系统类型：</em>\n            {systemInfo.platform}{systemInfo.arch}\n          </p>\n          <p className=\"item-text\">\n            <em>Node版本：</em>\n            {systemInfo.nodeVersion}\n          </p>\n          <p className=\"item-text\">\n            <em>MySQL版本：</em>\n            {systemInfo.mysqlVersion}\n          </p>\n          <p className=\"item-text\">\n            <em>当前环境：</em>\n            {CONFIG.isProduction ? '生产环境' : '开发环境'}\n          </p>\n          <p className=\"item-text\">\n            <em>系统时间：</em>\n            {state.curSystemTime}\n          </p>\n        </Card>\n      </Col>\n      <Col xl={8} lg={12} md={12} sm={24} xs={24}>\n        <Card\n          title=\"我的消息\"\n          hoverable\n          loading={state.loading}\n        >\n          {state.messageList.length > 0 ? (\n            state.messageList.map((msg: any) => (\n              <p className=\"item-text\" key={msg.id}>\n                <em>{msg.content}</em>\n              </p>\n            ))\n          ) : (\n            <Empty />\n          )}\n        </Card>\n      </Col>\n      <Col xl={8} lg={12} md={12} sm={24} xs={24}>\n        <Card\n          title={`内存使用率(${bytes(systemInfo.totalmem)})`}\n          hoverable\n          className=\"mem\"\n        >\n          <Progress\n            type=\"circle\"\n            percent={memPercentage}\n            strokeColor={statusColor(memPercentage)}\n            format={percent => percent + '%'}\n          />\n          <div className=\"surplus\">剩余{bytes(systemInfo.freemem)}</div>\n        </Card>\n      </Col>\n    </Row>\n  )\n};\n\nexport default React.memo(System);\n","// https://ui.toast.com/tui-editor/\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './style.scss';\nimport Editor from 'tui-editor';\nimport { Input, Button, message } from 'antd';\nimport { RouteComponentProps, match } from 'react-router-dom';\nimport { HOME } from '@/router/constants';\nimport { defaultTitle } from '../constants';\nimport {\n  serviceCreateMemorandum,\n  serviceGetMemorandumById,\n  serviceUpdateMemorandum\n} from '@/services';\n\ninterface Props {\n  computedMatch: match<any>\n}\n\nlet editor: Editor;\n\nconst Create: React.FC<Props & RouteComponentProps> = ({ history, computedMatch }) => {\n  const [title, setTitle] = useState(defaultTitle);\n  const [loading, setLoading] = useState(false);\n\n  const handleActionButton = useCallback((buttonType: 0 | 1) => {\n    if (buttonType === 0) {\n      history.replace(HOME.MEMORANDUM.path);\n      return;\n    }\n\n    const id = computedMatch.params.id;\n\n    if (loading) return;\n\n    // 创建或更新\n    const params = {\n      markdown: editor.getValue(),\n      title\n    };\n    if (!params.markdown) {\n      message.warn('实体内容不能为空');\n      return;\n    }\n\n    setLoading(true);\n\n    (id ? serviceUpdateMemorandum(id, params) : serviceCreateMemorandum(params))\n    .then(res => {\n      if (res.data.success) {\n        history.replace(HOME.MEMORANDUM.path);\n      }\n    });\n  }, [history, title, loading, computedMatch]);\n\n  const init = useCallback(() => {\n    const id = computedMatch.params.id;\n\n    editor = new Editor({\n      el: document.querySelector('#edit-section') as HTMLElement,\n      initialEditType: 'markdown',\n      previewStyle: 'vertical',\n      usageStatistics: false\n    });\n\n    if (id) {\n      serviceGetMemorandumById(id)\n      .then(res => {\n        if (res.data.success) {\n          setTitle(res.data.data.title);\n          editor.setValue(res.data.data.markdown);\n        }\n      });\n    }\n  }, [computedMatch]);\n\n  useEffect(() => {\n    init();\n\n    return () => {\n      // 销毁实例\n      editor?.remove();\n    };\n  }, [init]);\n\n  return (\n    <div className=\"editor-page\">\n      <Input\n        className=\"input-title\"\n        placeholder={defaultTitle}\n        maxLength={50}\n        size=\"large\"\n        value={title}\n        onChange={e => setTitle(e.target.value)}\n        onBlur={() => (!title && setTitle(defaultTitle))}\n      />\n      <div id=\"edit-section\"></div>\n      <div className=\"button-group\">\n        <Button onClick={handleActionButton.bind(null, 0)}>取消</Button>\n        <Button\n          type=\"primary\"\n          onClick={handleActionButton.bind(null, 1)}\n          loading={loading}\n        >\n          提交\n        </Button>\n      </div>\n    </div>\n  )\n};\n\nexport default Create;\n","\nexport enum TypeNames {\n  收入 = 1,\n  支出 = 2\n}\n\nexport enum TypeColors {\n  '#108ee9' = 1,\n  '#f50' = 2\n}\n\nexport const TYPES = [\n  { name: '收入', value: 1, symbol: '+', color: '#666' },\n  { name: '支出', value: 2, symbol: '-', color: '#f50' }\n];\n\nexport const OPTION_TYPES = [\n  { name: '全部', value: '' },\n  ...TYPES\n];\n","import React from 'react';\nimport './style.scss';\nimport { Result, Button } from 'antd';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { ExceptionStatusType } from 'antd/lib/result'\n\ninterface Props {\n  status?: ExceptionStatusType\n}\n\nconst statusMap = {\n  403: {\n    title: '403',\n    subTitle: 'Sorry, you are not authorized to access this page.',\n  },\n  404: {\n    title: '404',\n    subTitle: 'Sorry, the page you visited does not exist.',\n  },\n  500: {\n    title: '500',\n    subTitle: 'Sorry, the server is wrong.',\n  }\n};\n\nconst NoMatch: React.FC<Props & RouteComponentProps> = function ({ history, status = '404' }) {\n  return (\n    <Result\n      status={status}\n      extra={<Button type=\"primary\" onClick={history.goBack}>Back</Button>}\n      {...statusMap[status]}\n    />\n  );\n};\n\nexport default withRouter(NoMatch);\n","import React from 'react';\nimport './style.scss';\nimport Exception from '@/components/exception';\n\nconst NoMatch = () => <div className=\"exception-wrapper\"><Exception /></div>\n\nexport default NoMatch;\n","import React, { useEffect, useState } from 'react';\nimport './style.scss';\nimport config from '@/config';\nimport { Layout, Menu } from 'antd';\nimport { withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport { HomeMainState } from '@/views/home/main-entry/index';\nimport { HOME_SIDER_MENU_LIST } from '@/constants';\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\ntype Props = HomeMainState & RouteComponentProps;\n\nconst Sidebar: React.FC<Props> = function ({ location, collapsed }) {\n  const [selectedKeys, setSelectedKeys] = useState('');\n  const [openKeys, setOpenKeys] = useState<string[]>([]);\n\n  function handleOpenChange(openKeys: any) {\n    setOpenKeys(openKeys);\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    const fragment = pathname.split('/').slice(0, 3);\n    const prefixPath = fragment.join('/');\n    if (fragment.length === 3) {\n      for (let i = 0; i < HOME_SIDER_MENU_LIST.length; i++) {\n        const menu = HOME_SIDER_MENU_LIST[i];\n        if (Array.isArray(menu.children)) {\n          const findIdx = menu.children.findIndex(menu => pathname === menu.path);\n          if (findIdx !== -1) {\n            setSelectedKeys(menu.children[findIdx].path);\n            setOpenKeys([menu.name]);\n            break;\n          }\n        }\n        if (menu.path.indexOf(prefixPath) !== -1) {\n          setSelectedKeys(menu.path);\n          break;\n        }\n      }\n    }\n  }, [location.pathname]);\n\n  return (\n    <Sider\n      trigger={null}\n      collapsible\n      collapsed={collapsed}\n      width={190}\n      className=\"sidebar\"\n    >\n      <div className=\"sider-menu-logo\">{config.title}</div>\n      <Menu\n        selectedKeys={[selectedKeys]}\n        openKeys={openKeys}\n        onOpenChange={handleOpenChange}\n        mode=\"inline\"\n        theme=\"dark\"\n      >\n        {HOME_SIDER_MENU_LIST.map(menu => {\n          if (Array.isArray(menu.children)) {\n            return (\n              <SubMenu\n                key={menu.name}\n                title={\n                  <>\n                    {menu.icon}\n                    <span>{menu.name}</span>\n                  </>\n                }\n              >\n                {menu.children.map(subItem => (\n                  <Menu.Item key={subItem.path}>\n                    <Link to={subItem.path}>{subItem.name}</Link>\n                  </Menu.Item>\n                ))}\n              </SubMenu>\n            )\n          }\n\n          return (\n            <Menu.Item key={menu.path}>\n              <Link to={menu.path}>\n                {menu.icon}\n                <span>{menu.name}</span>\n              </Link>\n            </Menu.Item>\n          )\n        })}\n      </Menu>\n    </Sider>\n  )\n};\n\nexport default withRouter(Sidebar);\n","import React, { useEffect, useState, useMemo } from 'react';\nimport './style.scss';\nimport Avatar from '@/components/avatar';\nimport moment from 'moment';\nimport config from '@/config';\nimport { Layout, Badge, Popover, Empty } from 'antd';\nimport { withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport { HomeMainState } from '@/views/home/main-entry/index';\nimport { connect } from 'react-redux';\nimport { StoreState } from '@/store';\nimport { logout } from '@/store/actions/user';\nimport { SETTING } from '@/router/constants';\nimport { serviceGetInnerMessage } from '@/services';\nimport { fullscreen, exitFullscreen } from '@/utils';\nimport {\n  PoweroffOutlined,\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  BellFilled,\n  BugFilled,\n  GithubOutlined,\n  FullscreenExitOutlined,\n  FullscreenOutlined\n} from '@ant-design/icons'\n\nconst { Header } = Layout;\nconst popoverList = [\n  { name: SETTING.BASE.name, path: SETTING.BASE.path },\n  { name: SETTING.NOTIFICATION.name, path: SETTING.NOTIFICATION.path },\n  { name: SETTING.ACCOUNT.name, path: SETTING.ACCOUNT.path }\n];\n\ntype Props = ReturnType<typeof mapStateToProps> & HomeMainState & RouteComponentProps;\n\nconst PopoverContent = (\n  <div className=\"popover-content\">\n  {popoverList.map(el => (\n    <Link to={el.path} key={el.name} className=\"ls\">{el.name}</Link>\n  ))}\n    <div className=\"ls sign-out\" onClick={() => logout()}>\n      <PoweroffOutlined style={{ fontSize: '14px', marginRight: '5px' }} />\n      退出\n    </div>\n  </div>\n);\n\nconst HomeHeader: React.FC<Props> = function ({\n  collapsed,\n  setCollapsed,\n  userInfo\n}) {\n  const [messageList, setMessageList] = useState([]);\n  const [unReadCount, setUnReadCount] = useState(0);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    serviceGetInnerMessage({ pageSize: 5 })\n    .then(res => {\n      if (res.data.success) {\n        let count = 0;\n        const data = res.data.data.rows.map((item: any) => {\n          item.createdAt = moment(item.createdAt).format('YYYY-MM-DD HH:mm');\n          if (!item.hasRead) {\n            count++;\n          }\n          return item;\n        });\n        setUnReadCount(count);\n        setMessageList(data);\n      }\n    });\n  }, []);\n\n  const MessageContent = useMemo(() => (\n    <div className=\"message-popover\">\n      <div className=\"msg-header item-block\">\n        <span className=\"left\">站内消息通知</span>\n        <Link className=\"right\" to={SETTING.NOTIFICATION.path}>消息接收管理</Link>\n      </div>\n      {messageList.length > 0 ? (\n        <>\n          {messageList.map((item: any) => (\n          <div className=\"item-block ls\" key={item.id}>\n            <div className=\"content\">{item.content}</div>\n            <div className=\"date\">{item.createdAt}</div>\n          </div>\n        ))}\n        <Link className=\"item-block ls\" to={SETTING.INNER_MESSAGE.path}>查看更多</Link>\n        </>\n      ) : (\n        <Empty style={{ padding: '20px 0' }} />\n      )}\n    </div>\n  ), [messageList]);\n\n  function handleFullscreen() {\n    setIsFullscreen(isFullscreen => {\n      isFullscreen ? exitFullscreen() : fullscreen();\n      return !isFullscreen;\n    });\n  }\n\n  return (\n    <Header>\n      <div className=\"left\">\n        {collapsed ? (\n          <MenuUnfoldOutlined\n            onClick={setCollapsed}\n            style={{ cursor: 'pointer', fontSize: '20px' }}\n          />\n        ) : (\n          <MenuFoldOutlined\n            onClick={setCollapsed}\n            style={{ cursor: 'pointer', fontSize: '20px' }}\n          />\n        )}\n      </div>\n      <ul className=\"right\">\n        <Popover content={MessageContent}>\n          <li>\n            <Badge dot={unReadCount > 0}>\n              <BellFilled />\n            </Badge>\n          </li>\n        </Popover>\n        <li onClick={handleFullscreen}>\n          {isFullscreen ? <FullscreenOutlined /> : <FullscreenExitOutlined />}\n        </li>\n        <li>\n          <a href={config.github.bug} target=\"_blank\" rel=\"noopener noreferrer\">\n            <BugFilled />\n          </a>\n        </li>\n        <li>\n          <a href={config.github.repositoryUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            <GithubOutlined />\n          </a>\n        </li>\n        <Popover\n          placement=\"bottomRight\"\n          content={PopoverContent}\n        >\n        <li>\n          <Avatar src={userInfo.avatarUrl} />\n          <span className=\"username\">{userInfo.username}</span>\n        </li>\n        </Popover>\n      </ul>\n    </Header>\n  )\n};\n\nconst mapStateToProps = ({ user }: StoreState) => {\n  return { userInfo: user.userInfo }\n};\n\nexport default connect(mapStateToProps)(withRouter(HomeHeader));\n","import React, { useState } from 'react';\nimport './style.scss';\nimport Sidebar from '@/components/sidebar';\nimport Header from '@/components/header';\nimport { Layout } from 'antd';\nimport { connect } from 'react-redux';\nimport { StoreState } from '@/store';\nimport { LOCAL_STORAGE } from '@/constants';\n\nconst { Content } = Layout;\nconst { SIDEBAR_COLLAPSED } = LOCAL_STORAGE;\n\nexport interface HomeMainState {\n  collapsed?: boolean;\n  setCollapsed?: () => void;\n}\n\nconst storageCollapsed = Number(window.localStorage.getItem(SIDEBAR_COLLAPSED) || true);\n\nconst HomeMain: React.FC = function (props) {\n  const [collapsed, setCollapsed] = useState(!storageCollapsed);\n\n  function handleToggleCollapsed() {\n    setCollapsed(!collapsed);\n    window.localStorage.setItem(\n      SIDEBAR_COLLAPSED,\n      Number(collapsed) + ''\n    );\n  }\n\n  return (\n    <section className=\"home-main\">\n      <Layout>\n        <Sidebar {...{ collapsed }} />\n        <Layout className=\"home-layout\">\n          <Header {...{ collapsed, setCollapsed: handleToggleCollapsed }} />\n          <Content id=\"container\">\n            {React.Children.map(props.children, child => child)}\n          </Content>\n        </Layout>\n      </Layout>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({ user }: StoreState) => {\n  return { userInfo: user.userInfo };\n}\n\nexport default connect(mapStateToProps)(HomeMain);\n","import React, { useCallback, useEffect } from 'react';\nimport moment from 'moment';\nimport useKeepState from 'use-keep-state';\nimport {\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  message\n} from 'antd';\nimport { serviceCreateReminder, serviceUpdateReminder } from '@/services';\nimport { isLtTodayTimestamp } from '@/utils';\n\nconst { TextArea } = Input;\nconst dateFormat = 'YYYY-MM-DD HH:mm:ss';\nconst defaultDate = moment(new Date(), dateFormat);\n\ntype Props = {\n  visible: boolean;\n  onCancel: () => void;\n  onSuccess: (res?: any) => void;\n  rowData?: { [propName: string]: any; };\n};\n\ninterface State {\n  confirmLoading: boolean;\n  dateMode: 'time' | 'date' | 'month' | 'year' | 'decade';\n  date: moment.Moment;\n  content: string;\n}\n\nconst initialState: State = {\n  confirmLoading: false,\n  dateMode: 'date',\n  date: defaultDate,\n  content: ''\n};\n\nconst CreateReminder: React.FC<Props> = function ({ visible, onCancel, onSuccess, rowData }) {\n  const [state, setState] = useKeepState(initialState);\n\n  const initParams = useCallback(() => {\n    if (!rowData) {\n      setState({ content: '' });\n    } else {\n      setState({\n        date: moment(rowData.date, dateFormat),\n        content: rowData.content\n      });\n    }\n  }, [setState, rowData]);\n\n  const handleSubmit = useCallback((e: React.MouseEvent | React.FormEvent) => {\n    e.preventDefault();\n    const params = {\n      date: state.date.valueOf(),\n      content: state.content.trim()\n    };\n\n    try {\n      if (!params.content) throw new Error('内容不能为空');\n    } catch (err) {\n      message.warn(err.message);\n      return;\n    }\n\n    setState({ confirmLoading: true });\n\n    (\n      !rowData\n        ? serviceCreateReminder(params)\n        : serviceUpdateReminder(rowData.id, params)\n    )\n    .then(res => {\n      if (res.data.success) {\n        onSuccess(res);\n      }\n    })\n    .finally(() => {\n      setState({ confirmLoading: false });\n    });\n\n  }, [state, setState, onSuccess, rowData]);\n\n  useEffect(() => {\n    initParams();\n  }, [visible, initParams]);\n\n  return (\n    <Modal\n      title=\"新增\"\n      visible={visible}\n      onOk={handleSubmit}\n      onCancel={onCancel}\n      confirmLoading={state.confirmLoading}\n    >\n      <Form >\n        <Form.Item label=\"提醒时间\">\n          <DatePicker\n            mode={state.dateMode}\n            showTime\n            allowClear={false}\n            value={state.date}\n            onPanelChange={(value, dateMode) => setState({ dateMode })}\n            onChange={date => setState({ date }) }\n            disabledDate={isLtTodayTimestamp}\n            style={{ width: '100%' }}\n          />\n        </Form.Item>\n        <Form.Item label=\"提醒内容\">\n          <TextArea\n            rows={3}\n            value={state.content}\n            onChange={e => setState({ content: e.target.value })}\n            maxLength={200}\n            placeholder=\"请输入内容\"\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nexport default React.memo(CreateReminder);\n","import React, { useEffect, useCallback, useRef } from 'react';\nimport Table from '@/components/table';\nimport moment from 'moment';\nimport CreateReminder from './components/create-reminder';\nimport useKeepState from 'use-keep-state';\nimport { connect } from 'react-redux';\nimport { DatePicker, Button, Select, Tag, Modal } from 'antd';\nimport { serviceGetReminder, serviceDeleteReminder } from '@/services';\nimport {\n  getThisYearLastDay,\n  modalConfirmDelete,\n  getThisYearFirstDay\n} from '@/utils';\n\nconst { RangePicker } = DatePicker;\nconst Option = Select.Option;\nconst dateFormat = 'YYYY-MM-DD';\nconst STATUS_TYPE: any = {\n  1: { color: '#f50', text: '待提醒' },\n  2: { color: '#87d068', text: '已提醒' }\n};\n\ninterface State {\n  date: moment.Moment[];\n  queryType: string;\n  modalVisible: boolean;\n  currentRow: { [propName: string]: any } | null;\n}\n\ntype Props = ReturnType<typeof mapStateToProps>;\n\nconst initialState: State = {\n  date: [],\n  queryType: '',\n  modalVisible: false,\n  currentRow: null\n};\n\nconst Reminder: React.FC<Props> = function({ userInfo }) {\n  const [state, setState] = useKeepState(initialState);\n  const tableRef = useRef<any>();\n  const tableColumns = [\n    { title: '状态', dataIndex: 'type', width: 100,\n      render: (row: any) => (\n        <Tag color={STATUS_TYPE[row].color}>{STATUS_TYPE[row].text}</Tag>\n      )\n    },\n    { title: '提醒时间', dataIndex: 'date', width: 220 },\n    { title: '提醒内容', dataIndex: 'content', className: 'word-break_break-all white-space_pre' },\n    { title: '操作', width: 180, align: 'right',\n      render: (row: any) => (\n        <>\n          <Button onClick={handleButton.bind(null, 0, row)}>编辑</Button>\n          <Button onClick={handleButton.bind(null, 1, row)}>删除</Button>\n        </>\n      )\n    }\n  ];\n\n  const initParams = function() {\n    const startDate = moment(getThisYearFirstDay(), dateFormat);\n    const endDate = moment(getThisYearLastDay(), dateFormat);\n    setState({\n      queryType: '',\n      date: [startDate, endDate]\n    });\n  };\n\n  function getReminder(params: any = {}) {\n    params.startDate = state.date[0].valueOf();\n    params.endDate = state.date[1].valueOf();\n\n    if (state.queryType !== '') {\n      params.type = state.queryType;\n    }\n\n    return serviceGetReminder(params).then(res => {\n      if (res.data.success) {\n        res.data.data.rows = res.data.data.rows.map((el: any, idx: number) => {\n          el.order = idx + 1;\n          el.date = moment(el.date).format('YYYY-MM-DD HH:mm:ss');\n          return el;\n        });\n      }\n      return res;\n    });\n  }\n\n  const handleButton = useCallback((type: number, rows: any) => {\n    // 编辑\n    if (type === 0) {\n      setState({ modalVisible: true, currentRow: rows });\n    } else {\n      modalConfirmDelete()\n      .then(() => {\n        serviceDeleteReminder(rows.id)\n        .then(res => {\n          if (res.data.success) {\n            tableRef.current.getTableData();\n          }\n        });\n      });\n    }\n  }, [setState]);\n\n  // modal成功新增回调函数\n  const handleModalOnSuccess = useCallback(() => {\n    setState({ modalVisible: false });\n    tableRef.current.getTableData();\n  }, [setState]);\n\n  useEffect(() => {\n    initParams();\n\n    if (!userInfo.email) {\n      Modal.warning({\n        title: '未检测到您的邮箱',\n        content: (\n          <>\n            请将您的GitHub邮箱设为公开，否则影响本功能的使用，\n            <a\n              href=\"https://github.com/settings/profile\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              前往设置\n            </a>\n          </>\n        ),\n      });\n    }\n  }, [userInfo.email]);\n\n  useEffect(() => {\n    if (state.date.length <= 0) return;\n    tableRef?.current?.getTableData();\n  }, [state.date, state.queryType]);\n\n  return (\n    <div className=\"reminder\">\n      <div className=\"query-panel\">\n        <span>查询类型：</span>\n        <Select\n          onChange={(value: string) => setState({ queryType: value })}\n          value={state.queryType}\n        >\n          <Option value=\"\">全部</Option>\n          <Option value=\"1\">待提醒</Option>\n          <Option value=\"2\">已提醒</Option>\n        </Select>\n        <span>日期：</span>\n        <RangePicker\n          format={dateFormat}\n          allowClear\n          value={state.date}\n          onChange={(date: any) => setState({ date })}\n        />\n        <Button type=\"primary\" onClick={() => tableRef.current.getTableData()}>查询</Button>\n        <Button onClick={() => setState({ modalVisible: true, currentRow: null })}>新增</Button>\n        <Button onClick={initParams}>重置</Button>\n      </div>\n      <Table\n        ref={tableRef}\n        getTableData={getReminder}\n        columns={tableColumns}\n        onDelete={serviceDeleteReminder}\n      />\n      <CreateReminder\n        visible={state.modalVisible}\n        rowData={state.currentRow}\n        onCancel={() => setState({ modalVisible: false })}\n        onSuccess={handleModalOnSuccess}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (store: any) => ({\n  userInfo: store.user.userInfo\n});\n\nexport default connect(mapStateToProps)(Reminder);\n","import React, { Suspense, useEffect, useState } from 'react';\nimport './style.scss';\nimport PrivateRoute from '@/components/private-route/index';\nimport { Layout, Menu } from 'antd';\nimport { Switch, Link, RouteComponentProps } from 'react-router-dom';\nimport { SETTING_SIDER_MENU_LIST } from '@/constants';\nimport { settingRoutes } from '@/router/routes';\n\nconst { Content, Sider } = Layout;\n\nconst SettingIndex: React.FC<RouteComponentProps> = function ({ location }) {\n  const [selectedKeys, setSelectedKeys] = useState('');\n\n  useEffect(() => {\n    for (let i = 0; i < SETTING_SIDER_MENU_LIST.length; i++) {\n      if (SETTING_SIDER_MENU_LIST[i].path === location.pathname) {\n        setSelectedKeys(SETTING_SIDER_MENU_LIST[i].path);\n        break;\n      }\n    }\n  }, [location.pathname])\n\n  return (\n    <Layout className=\"setting-page\">\n      <Sider width={170}>\n        <Menu\n          mode=\"inline\"\n          selectedKeys={[selectedKeys]}\n          style={{ height: '100%' }}\n        >\n          {SETTING_SIDER_MENU_LIST.map(menu => (\n            <Menu.Item key={menu.path}>\n              <Link to={menu.path}>{menu.name}</Link>\n            </Menu.Item>\n          ))}\n        </Menu>\n      </Sider>\n      <Content style={{ padding: '0 50px 0 30px' }}>\n        <Suspense fallback={null}>\n          <Switch>\n            {settingRoutes.map((route, idx) => (\n              <PrivateRoute {...route} key={idx} />\n            ))}\n          </Switch>\n        </Suspense>\n      </Content>\n    </Layout>\n  )\n};\n\nexport default SettingIndex;\n","import React, { useState, useEffect, useRef } from 'react';\nimport './style.scss';\nimport { Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { serviceGetPanelData } from '@/services';\nimport { HOME } from '@/router/constants';\nimport {\n  PropertySafetyFilled,\n  ScheduleFilled,\n  FileTextFilled,\n  AlertFilled\n} from '@ant-design/icons';\n\nconst PanelGroup = () => {\n  const isInit = useRef<boolean>(false);\n  const [state, setState] = useState([\n    {\n      title: '今日支出',\n      total: 0,\n      Icon: <PropertySafetyFilled className=\"icon\" />,\n      suffix: '￥',\n      path: HOME.CAPITAL_FLOW.path\n    },\n    {\n      title: '今日待办', total: 0,\n      Icon: <ScheduleFilled className=\"icon\" />,\n      path: HOME.TODAY_TASK.path\n    },\n    {\n      title: '活动清单',\n      total: 0,\n      Icon: <FileTextFilled className=\"icon\" />,\n      path: HOME.TODO_LIST.path\n    },\n    {\n      title: '提醒事项',\n      total: 0,\n      Icon: <AlertFilled className=\"icon\" />,\n      path: HOME.REMINDER.path\n    },\n  ]);\n\n  useEffect(() => {\n    if (isInit.current) return;\n\n    isInit.current = true;\n\n    serviceGetPanelData()\n    .then(res => {\n      if (res.data.success) {\n        const data = state.slice();\n        data[0].total = res.data.data.consumption;\n        data[1].total = res.data.data.todayTaskCount;\n        data[2].total = res.data.data.unfinishedTodoListCount;\n        data[3].total = res.data.data.reminderCount;\n        setState(data)\n      }\n    });\n  }, [state]);\n\n  return (\n    <Row gutter={{ xs: 8, sm: 16, md: 24}} className=\"panel-group\">\n      {state.map(item => (\n        <Col xl={6} lg={12} md={12} sm={24} xs={24} key={item.title}>\n          <Link to={item.path} className=\"block-item\">\n            {item.Icon}\n            <div className=\"data\">\n              <Statistic title={item.title} value={item.total} suffix={item.suffix} />\n            </div>\n          </Link>\n        </Col>\n      ))}\n    </Row>\n  )\n};\n\nexport default React.memo(PanelGroup);\n","import React, { useEffect, useState } from 'react';\nimport './style.scss';\nimport { Empty } from 'antd';\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Legend,\n} from 'bizcharts';\nimport { serviceGetCapitalFlowPrice } from '@/services';\n\nconst cols = {\n  date: {\n    range: [0, 1]\n  }\n};\n\nconst MoneyAccessChart = () => {\n  const [data, setData] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  useEffect(() => {\n    serviceGetCapitalFlowPrice()\n    .then(res => {\n      if (res.data.success) {\n        let price = 0;\n        const data = res.data.data.map((item: any) => {\n          item.date = item.date.slice(5);\n          item.price = Number(item.price);\n          price += item.price;\n          return item;\n        });\n\n        setData(data);\n        setTotalPrice(price);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"money-access\">\n      <h2 className=\"title\">过去7天资金流动</h2>\n      {(totalPrice > 0) ? (\n        <Chart height={400} data={data} scale={cols} forceFit>\n          <Legend />\n          <Axis\n            name=\"price\"\n            label={{ formatter: (val: string) => `${parseInt(val)}￥` }}\n          />\n          <Tooltip crosshairs={{ type: 'y' }} />\n          <Geom\n            type=\"line\"\n            position=\"date*price\"\n            size={2}\n            color=\"name\"\n            shape=\"smooth\"\n          />\n          <Geom\n            type=\"point\"\n            position=\"date*price\"\n            size={4}\n            shape=\"circle\"\n            color=\"name\"\n            style={{ stroke: '#fff', lineWidth: 1 }}\n          />\n        </Chart>\n      ) : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n    </div>\n  )\n};\n\nexport default React.memo(MoneyAccessChart);\n","import React, { useEffect } from 'react';\nimport PenelGroup from './components/penel-group';\nimport SystemInfo from './components/system-info';\nimport MoneyAccessChart from './components/money-access-chart';\nimport { DispatchProp, connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { getSystemInfo } from '@/store/actions';\nimport { StoreState } from '@/store';\n\nconst mapStateToProps = ({ system }: StoreState) => ({ system });\n\ntype ThunkDispatchProps = ThunkDispatch<{}, {}, AnyAction>;\ntype Props = DispatchProp & ReturnType<typeof mapStateToProps> & { dispatch: ThunkDispatchProps };\n\nconst HomeIndex: React.FC<Props> = function ({ system, dispatch: propDispatch }) {\n\n  useEffect(() => {\n    propDispatch(getSystemInfo());\n  }, [propDispatch]);\n\n  return (\n    <div className=\"home-index overflow-y_auto\">\n      <PenelGroup />\n      <SystemInfo systemInfo={system.info} />\n      <MoneyAccessChart />\n    </div>\n  )\n};\n\nexport default connect(mapStateToProps)(HomeIndex);\n","import React from 'react';\nimport { Button, Result } from 'antd';\nimport NoDataSvg from '@/assets/img/common/no-data.svg';\n\ninterface Props {\n  onClick(e: React.MouseEvent): void;\n  message?: string;\n}\n\nconst NoData: React.FC<Props> = ({ onClick, message = '暂无数据' }) => {\n  return (\n    <Result\n      className=\"no-data\"\n      icon={<img src={NoDataSvg} className=\"user-drag_none\" alt=\"no-data\" />}\n      title={message}\n      extra={<Button type=\"primary\" onClick={onClick}>现在创建</Button>}\n      status={'info'}\n      style={{ marginTop: '50px' }}\n    />\n  )\n};\n\nexport default React.memo(NoData);\n","import React, { useCallback } from 'react';\nimport './style.scss';\nimport moment from 'moment';\nimport { modalConfirmDelete } from '@/utils';\nimport { serviceDeleteTask, serviceUpdateTask } from '@/services';\nimport {\n  Card,\n  Button,\n  Rate\n} from 'antd';\n\ninterface Props {\n  data: { [key: string]: any },\n  reloadData(): void;\n}\n\nconst TaskItem: React.FC<Props> = ({ data, reloadData }) => {\n\n  // 0=删除, 1=开始/完成, 2=回退\n  const handleAction = useCallback(buttonType => {\n    if (buttonType === 0) {\n      modalConfirmDelete()\n      .then(() => {\n        serviceDeleteTask(data.id)\n        .then(res => {\n          if (res.data.success) {\n            reloadData();\n          }\n        });\n      });\n    } else {\n      serviceUpdateTask(data.id, {\n        rollback: buttonType === 2 && true\n      })\n      .then(res => {\n        if (res.data.success) {\n          reloadData();\n        }\n      });\n    }\n  }, [data, reloadData])\n\n  return (\n    <Card\n      title=\"我的待办\"\n      hoverable\n      className=\"task-component\"\n    >\n      <p className=\"content\">{data.content}</p>\n      <div className=\"level\">\n        <span>优先级别：</span>\n        <Rate value={data.count} disabled></Rate>\n        <p>创建时间: {moment(data.createdAt).format('HH:mm:ss')}</p>\n      </div>\n      <div className=\"button-wrapper\">\n        <Button\n          type=\"primary\"\n          danger\n          size=\"small\"\n          onClick={handleAction.bind(null, 0)}\n        >\n          删除\n        </Button>\n        {(data.type === 1) && (\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={handleAction.bind(null, 1)}\n          >\n            开始\n          </Button>\n        )}\n        {([2, 3].includes(data.type)) && (\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={handleAction.bind(null, 2)}\n          >\n            回退\n          </Button>\n        )}\n        {(data.type === 2) && (\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={handleAction.bind(null, 1)}\n          >\n            完成\n          </Button>\n        )}\n      </div>\n    </Card>\n  )\n};\n\nexport default React.memo(TaskItem);\n","import React, { useCallback } from 'react';\nimport moment from 'moment';\nimport useKeepState from 'use-keep-state';\nimport { isLtTodayTimestamp } from '@/utils';\nimport { serviceCreateTask } from '@/services';\nimport {\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  message,\n  Rate\n} from 'antd';\n\ntype Props = {\n  visible: boolean;\n  data?: object;\n  setParentState(state: any): void;\n  onSuccess: (res?: any) => void;\n};\n\nconst dateFormat = 'YYYY-MM-DD';\nconst { TextArea } = Input;\nconst initialState = {\n  confirmLoading: false,\n  content: '',\n  date: moment(new Date(), dateFormat),\n  count: 5\n};\n\nconst CreateTask: React.FC<Props> = function ({ visible, onSuccess, setParentState }) {\n  const [state, setState] = useKeepState(initialState);\n\n  const handleSubmitForm = useCallback(() => {\n    const params = {\n      date: state.date.valueOf(),\n      content: state.content.trim(),\n      count: state.count\n    };\n\n    if (!params.content) {\n      message.warn('内容不能为空');\n      return;\n    }\n\n    serviceCreateTask(params)\n      .then(res => {\n        if (res.data.success) {\n          onSuccess();\n        }\n      });\n  }, [state, onSuccess]);\n\n  return (\n    <Modal\n      title=\"新增\"\n      visible={visible}\n      onOk={handleSubmitForm}\n      onCancel={() => setParentState({ showCreateTaskModal: false })}\n      confirmLoading={state.confirmLoading}\n    >\n      <Form>\n        <Form.Item label=\"开始日期\">\n          <DatePicker\n            allowClear={false}\n            value={state.date}\n            onChange={date => setState({ date }) }\n            disabledDate={isLtTodayTimestamp}\n            style={{ width: '100%' }}\n          />\n        </Form.Item>\n        <Form.Item label=\"任务内容\">\n          <TextArea\n            rows={3}\n            value={state.content}\n            onChange={e => setState({ content: e.target.value })}\n            maxLength={200}\n            placeholder=\"请输入内容\"\n          />\n        </Form.Item>\n        <Form.Item label=\"优先级别\">\n          <Rate value={state.count} onChange={count => setState({ count })} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nexport default React.memo(CreateTask);\n","import React, { useCallback, useEffect } from 'react';\nimport './style.scss';\nimport useKeepState from 'use-keep-state';\nimport NoData from '@/components/no-data/index';\nimport TaskItem from './components/task-item';\nimport CreateTask from './components/create-task';\nimport moment from 'moment';\nimport { DatePicker, Button, Tag, Row, Col } from 'antd';\nimport { getStartTimestampByDate, getEndTimestampByDate } from '@/utils';\nimport { serviceGetTask } from '@/services';\n\nconst dateFormat = 'YYYY-MM-DD';\nconst datePickerValue = moment(new Date(getStartTimestampByDate()), dateFormat);\nconst TASK_TYPE: any = {\n  wait: { text: '待作业', color: 'orange' },\n  process: { text: '作业中', color: '#108ee9' },\n  finished: { text: '已完成', color: '#87d068' },\n  unfinished: { text: '未完成', color: '#f50' }\n};\n\ninterface State {\n  startDate: moment.Moment;\n  data: {\n    wait: any[];\n    process: any[];\n    finished: any[];\n    unfinished: any[];\n  };\n  showCreateTaskModal: boolean;\n}\n\nconst initialState: State = {\n  startDate: datePickerValue,\n  data: { wait: [], process: [], finished: [], unfinished: [] },\n  showCreateTaskModal: false\n};\n\nconst TodayTask = () => {\n  const [state, setState] = useKeepState(initialState);\n\n  const getTask = useCallback(() => {\n    const date = state.startDate.valueOf();\n    serviceGetTask({\n      startDate: getStartTimestampByDate(date),\n      endDate: getEndTimestampByDate(date)\n    })\n    .then(res => {\n      if (res.data.success) {\n        setState({ data: res.data.data });\n      }\n    });\n  }, [setState, state.startDate]);\n\n  const initParams = useCallback(() => {\n    setState({ startDate: datePickerValue });\n    getTask();\n  }, [setState, getTask]);\n\n  const handleOnSuccess = useCallback(() => {\n    setState({ showCreateTaskModal: false });\n    getTask();\n  }, [setState, getTask]);\n\n  useEffect(() => {\n    getTask();\n  }, [getTask]);\n\n  return (\n    <div className=\"today-task\">\n      <div className=\"query-panel\">\n        <span>查询日期：</span>\n        <DatePicker\n          format={dateFormat}\n          allowClear\n          value={state.startDate}\n          onChange={date => setState({ startDate: date })}\n        />\n        <Button type=\"primary\" onClick={getTask}>查询</Button>\n        <Button onClick={() => setState({ showCreateTaskModal: true })}>新增</Button>\n        <Button onClick={initParams}>重置</Button>\n      </div>\n      <div className=\"wrapper\">\n        {(\n          state.data.wait.length > 0 ||\n          state.data.process.length > 0 ||\n          state.data.finished.length > 0 ||\n          state.data.unfinished.length > 0\n        ) ? (\n          <Row gutter={24}>\n            {Object.keys(state.data).map((key: string) => (\n              <Col span={6} key={key}>\n                <div className=\"text-align_center\">\n                  <Tag color={TASK_TYPE[key].color}>{TASK_TYPE[key].text}</Tag>\n                </div>\n                {state.data[key].map((item: any) => (\n                  <TaskItem key={item.id} data={item} reloadData={getTask} />\n                ))}\n              </Col>\n            ))}\n          </Row>\n        ) : (\n          <NoData\n            message=\"还没有待办事项，是否马上创建？\"\n            onClick={() => setState({ showCreateTaskModal: true })}\n          />\n        )}\n      </div>\n      <CreateTask\n        visible={state.showCreateTaskModal}\n        onSuccess={handleOnSuccess}\n        setParentState={setState}\n      />\n    </div>\n  );\n};\n\nexport default TodayTask;\n","import React, { FC, useState, useEffect, useCallback } from 'react';\nimport './style.scss';\nimport moment from 'moment';\nimport NoData from '@/components/no-data/index';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Card, Col, Row, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { serviceGetMemorandum, serviceDeleteMemorandum } from '@/services';\nimport { defaultTitle } from '../constants';\nimport { modalConfirmDelete } from '@/utils';\n\nconst Memorandum: FC<RouteComponentProps> = ({ history }) => {\n  const [list, setList] = useState([]);\n\n  const handleButton = useCallback((\n    buttonType: 0 | 1 | 2,\n    item: any,\n    e: React.MouseEvent\n  ) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (buttonType === 0) {\n      modalConfirmDelete()\n      .then(() => {\n        serviceDeleteMemorandum(item.id)\n        .then(res => {\n          if (res.data.success) {\n            const index = list.findIndex((el: any) => el.title === item.title);\n            if (index !== -1) {\n              const copyList = [...list];\n              copyList.splice(index, 1);\n              setList(copyList);\n            }\n          }\n        });\n      });\n      return;\n    }\n\n    if (buttonType === 2) {\n      history.push('/home/memorandum/create');\n      return;\n    }\n\n    history.push(`/home/memorandum/update/${item.id}`);\n  }, [history, list]);\n\n  useEffect(() => {\n    serviceGetMemorandum()\n    .then(res => {\n      if (res.data.success) {\n        const data = res.data.data.map((item: any) => {\n          item.createdAt = moment(item.createdAt).format('YYYY/M/D HH:mm');\n          item.title = item.title || defaultTitle;\n          return item;\n        });\n        setList(data);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"memorandum\">\n      {(list.length > 0) ? (\n        <Row gutter={16} align=\"bottom\">\n          {list.map((item: any) => (\n            <Col span={8} key={item.id}>\n              <Link to={`/home/memorandum/detail/${item.id}`}>\n                <Card title={item.title} hoverable>\n                  {item.createdAt}\n                  <div\n                    className=\"content\"\n                    dangerouslySetInnerHTML={{ __html: item.html }}\n                  >\n                  </div>\n                  <div className=\"button-group\">\n                    <Button size=\"small\" onClick={handleButton.bind(null, 0, item)}>删除</Button>\n                    <Button size=\"small\" onClick={handleButton.bind(null, 1, item)}>编辑</Button>\n                  </div>\n                </Card>\n              </Link>\n            </Col>\n          ))}\n        </Row>\n      ) : (\n        <NoData\n          message=\"还没有备忘录，是否马上创建？\"\n          onClick={handleButton.bind(null, 2, null)}\n        />\n      )}\n    </div>\n  )\n};\n\nexport default Memorandum;\n","\nexport const defaultTitle = '无标题';\n","import React, { FC, useEffect, useState } from 'react';\nimport './style.scss';\nimport { match, Link, RouteComponentProps } from 'react-router-dom';\nimport { serviceGetMemorandumById } from '@/services';\nimport { defaultTitle } from '../constants';\nimport { LeftOutlined, EditOutlined } from '@ant-design/icons';\n\ninterface Props {\n  computedMatch: match<any>\n}\n\nconst Detail: FC<Props & RouteComponentProps> = ({ computedMatch, history }) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const id = computedMatch.params.id;\n\n  const goBack = function () {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    serviceGetMemorandumById(id)\n    .then(res => {\n      if (res.data.success) {\n        const title = res.data.data.title || defaultTitle;\n        document.title = title;\n        setTitle(title);\n        setContent(res.data.data.html);\n      }\n    });\n  }, [id]);\n\n  return (\n    <div className=\"memorandum-detail\">\n      <div className=\"tool-bar\">\n        <LeftOutlined className=\"icon-left\" onClick={goBack} />\n        <Link className=\"edit\" to={`/home/memorandum/update/${id}`}>\n          <EditOutlined title=\"编辑\" />\n        </Link>\n      </div>\n      <h1 className=\"title\">{ title }</h1>\n      <div\n        className=\"markdown-body tui-editor-contents\"\n        dangerouslySetInnerHTML={{ __html: content }}\n      >\n      </div>\n    </div>\n  )\n};\n\nexport default Detail;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport moment from 'moment';\nimport {\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  message,\n  Select\n} from 'antd';\nimport { serviceCreateCapitalFlow, serviceUpdateCapitalFlow } from '@/services';\nimport useKeepState from 'use-keep-state';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst dateFormat = 'YYYY-MM-DD HH:mm:ss';\nconst defaultDate = moment(new Date(), dateFormat);\n\ntype Props = {\n  visible: boolean;\n  onCancel: () => void;\n  onSuccess: (res?: any) => void;\n  rowData?: { [propName: string]: any; };\n  nameList: any[];\n};\n\ninterface State {\n  confirmLoading: boolean;\n  dateMode: 'time' | 'date' | 'month' | 'year' | 'decade';\n  date: moment.Moment;\n  remarks: string;\n  typeId: string;\n  price: string | number;\n}\n\nconst initialState: State = {\n  confirmLoading: false,\n  dateMode: 'date',\n  date: defaultDate,\n  remarks: '',\n  typeId: '',\n  price: ''\n};\n\nconst CreateReminder: React.FC<Props> = function ({\n  visible,\n  onCancel,\n  onSuccess,\n  rowData,\n  nameList\n}) {\n  const [state, setState] = useKeepState(initialState);\n  const initRef = useRef(false);\n\n  const initParams = useCallback(() => {\n    const params: any = {\n      remarks: '',\n      typeId: state.typeId || (nameList.length && nameList[0].id),\n      price: ''\n    };\n\n    if (rowData) {\n      params.date = moment(rowData.date, dateFormat);\n      params.remarks = rowData.remarks;\n      params.typeId = rowData.typeId;\n      params.price = rowData.price;\n    }\n    setState(params);\n  }, [setState, rowData, state.typeId, nameList]);\n\n  const handleSubmit = useCallback((e: React.MouseEvent | React.FormEvent) => {\n    e.preventDefault();\n    const params = {\n      date: state.date.valueOf(),\n      remarks: state.remarks.trim(),\n      typeId: state.typeId,\n      price: Number(state.price)\n    };\n\n    try {\n      if (!params.price || isNaN(params.price)) throw new Error('金额必须为数字');\n      if (!params.typeId) throw new Error('请选择名称');\n    } catch (err) {\n      message.warn(err.message);\n      return;\n    }\n\n    setState({ confirmLoading: true });\n\n    (\n      !rowData\n        ? serviceCreateCapitalFlow(params)\n        : serviceUpdateCapitalFlow(rowData.id, params)\n    )\n    .then(res => {\n      if (res.data.success) {\n        onSuccess(res);\n      }\n    })\n    .finally(() => {\n      setState({ confirmLoading: false });\n    });\n\n  }, [state, setState, onSuccess, rowData]);\n\n  useEffect(() => {\n    if (visible === initRef.current) return;\n    initRef.current = visible;\n    initParams();\n  }, [visible, initParams]);\n\n  return (\n    <Modal\n      title=\"新增\"\n      visible={visible}\n      onOk={handleSubmit}\n      onCancel={onCancel}\n      confirmLoading={state.confirmLoading}\n    >\n      <Form>\n        <Form.Item label=\"入账时间\">\n          <DatePicker\n            mode={state.dateMode}\n            showTime\n            allowClear={false}\n            value={state.date}\n            onPanelChange={(value, dateMode) => setState({ dateMode }) }\n            onChange={date => setState({ date }) }\n            style={{ width: '100%' }}\n          />\n        </Form.Item>\n        <Form.Item label=\"财务类型\">\n          <Select\n            onChange={(value: string) => setState({ typeId: value })}\n            value={state.typeId}\n          >\n            {nameList.map((item: any) => (\n              <Option value={item.id} key={item.id}>{item.optionName}</Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"收支金额\">\n          <Input\n            value={state.price}\n            onChange={e => setState({ price: e.target.value })}\n          />\n        </Form.Item>\n        <Form.Item label=\"备注信息\">\n          <TextArea\n            rows={5}\n            value={state.remarks}\n            onChange={e => setState({ remarks: e.target.value })}\n            maxLength={250}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nexport default React.memo(CreateReminder);\n","import React, { useEffect, useRef } from 'react';\nimport './style.scss';\nimport moment from 'moment';\nimport useKeepState from 'use-keep-state';\nimport Table from '@/components/table';\nimport CreateCapitalFlow from '../components/create-capital-flow';\nimport { DatePicker, Button, Select, Statistic, Input } from 'antd';\nimport {\n  getCurMonthFirstDay,\n  getCurMonthLastDay,\n  modalConfirmDelete,\n  ONE_DAY_TIMESTAMP\n} from '@/utils';\nimport {\n  serviceGetCapitalFlow,\n  serviceDeleteCapitalFlow,\n  serviceGetCapitalFlowType\n} from '@/services';\nimport { OPTION_TYPES, TypeNames, TYPES } from '../enum';\n\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\nconst Option = Select.Option;\nconst dateFormat = 'YYYY-MM-DD';\n\ninterface State {\n  date: moment.Moment[];\n  searchKeyword: string,\n  name: string;\n  type: string;\n  modalVisible: boolean;\n  currentRow: null | { [key: string]: any };\n  nameList: any[];\n  price: { consumption: number; income: number; available: number; };\n  sortedInfo: any;\n  filters: object;\n}\n\nconst initialState: State = {\n  date: [],\n  searchKeyword: '',\n  name: '',\n  type: '',\n  modalVisible: false,\n  currentRow: null,\n  nameList: [],\n  price: { consumption: 0, income: 0, available: 0 },\n  sortedInfo: null,\n  filters: {\n    price: [false]\n  }\n};\n\nconst Reminder: React.FC = function() {\n  const [state, setState] = useKeepState(initialState);\n  const tableRef = useRef<any>(null);\n\n  function initParams() {\n    const startDate = moment(getCurMonthFirstDay(dateFormat), dateFormat);\n    const endDate = moment(getCurMonthLastDay(dateFormat), dateFormat);\n    setState({\n      searchKeyword: '',\n      name: '',\n      date: [startDate, endDate],\n      sortedInfo: null\n    });\n  }\n\n  // 获取数据\n  function getCapitalFlow(params: { [k: string]: any }) {\n    params = {\n      ...params,\n      keyword: state.searchKeyword,\n      typeNameId: state.name,\n      type: state.type,\n      startDate: state.date[0].valueOf(),\n      endDate: state.date[1].valueOf() + ONE_DAY_TIMESTAMP\n    };\n\n    if (state.sortedInfo?.order) {\n      params.sort = `${state.sortedInfo.columnKey}-${state.sortedInfo.order.replace('end', '')}`;\n    }\n\n    return serviceGetCapitalFlow(params).then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n\n        res.data.data.rows = res.data.data.rows.map((el: any, idx: number) => {\n          el.order = idx + 1;\n          el.date = moment(el.date).format('YYYY-MM-DD HH:mm');\n          el.__price__ = TYPES[el.type - 1].symbol + el.price;\n          el.__color__ = TYPES[el.type - 1].color;\n\n          return el;\n        });\n\n        setState({\n          price: {\n            income: data.income,\n            consumption: data.consumption,\n            available: data.available\n          }\n        });\n      }\n      return res;\n    });\n  }\n\n  // 获取所有类型\n  function getCapitalFlowType() {\n    serviceGetCapitalFlowType()\n      .then(res => {\n        if (res.data.success) {\n          const data = res.data.data.map((item: any) => {\n            item.optionName = `${TypeNames[item.type]} - ${item.name}`;\n            return item;\n          }).sort((a: any, b: any) => a.type - b.type);\n          setState({ nameList: data });\n        }\n      });\n  }\n\n  function handleActionButton(type: number, row: any) {\n    // 编辑\n    if (type === 0) {\n      setState({ modalVisible: true, currentRow: row });\n    } else {\n      modalConfirmDelete().then(() => {\n        serviceDeleteCapitalFlow(row.id).then(res => {\n          if (res.data.success) {\n            tableRef.current.getTableData();\n          }\n        });\n      });\n    }\n  }\n\n  // 时间过滤\n  function onFilterDate(type: number) {\n    const [startDate] = state.date;\n    const date: moment.Moment[] = [\n      moment(moment().format(dateFormat), dateFormat),\n      moment(moment().format(dateFormat), dateFormat)\n    ];\n\n    switch (type) {\n      case 2:\n        const prevDay = moment(\n          moment()\n            .subtract(1, 'days')\n            .format(dateFormat), dateFormat\n        );\n        date[0] = prevDay;\n        date[1] = prevDay;\n        break;\n      case 3:\n        date[0] = moment(\n          moment()\n            .subtract(7, 'days')\n            .format(dateFormat),\n          dateFormat\n        );\n        date[1] = moment(new Date(), dateFormat);\n        break;\n      case 4:\n        date[0] = moment(\n          moment(startDate)\n            .subtract(1, 'month')\n            .startOf('month')\n            .format(dateFormat),\n          dateFormat\n        );\n        date[1] = moment(\n          moment(startDate)\n            .subtract(1, 'month')\n            .endOf('month')\n            .format(dateFormat),\n          dateFormat\n        );\n        break;\n      case 5:\n        date[0] = moment(\n          moment(startDate)\n            .add(1, 'month')\n            .startOf('month')\n            .format(dateFormat),\n          dateFormat\n        );\n        date[1] = moment(\n          moment(startDate)\n            .add(1, 'month')\n            .endOf('month')\n            .format(dateFormat),\n          dateFormat\n        );\n        break;\n    }\n\n    setState({ date });\n  }\n\n  function onTableChange(pagination: any, filters: any, sorter: any) {\n    setState({\n      sortedInfo: {\n        columnKey: sorter.columnKey,\n        order: sorter.order\n      },\n      filters\n    });\n  }\n\n  function handleModalOnSuccess() {\n    setState({ modalVisible: false });\n    tableRef.current.getTableData();\n  }\n\n  useEffect(() => {\n    initParams();\n    getCapitalFlowType();\n  }, []);\n\n  useEffect(() => {\n    if (state.date.length <= 0) return;\n    tableRef?.current?.getTableData();\n  }, [state.name, state.type, state.date]);\n\n  const tableColumns = [\n    {\n      title: '入账时间', dataIndex: 'date', width: 180, sorter: true,\n      sortOrder: state.sortedInfo?.columnKey === 'date' && state.sortedInfo.order\n    },\n    { title: '账务类型', dataIndex: 'name', width: 120 },\n    {\n      title: '收支金额（元）', width: 140, sorter: true, dataIndex: 'price',\n      sortOrder: state.sortedInfo?.columnKey === 'price' && state.sortedInfo.order,\n      filters: [\n        { text: '隐藏金额', value: false }\n      ],\n      defaultFilteredValue: [true],\n      render: (text: any, rowData: any) => (\n        <span style={{ color: rowData.__color__ }}>\n          {state.filters.price && state.filters.price[0] === true ? '******' : rowData.__price__}\n        </span>\n      )\n    },\n    {\n      title: '备注信息',\n      render: (rowData: any) => (\n        <p className=\"white-space_pre-wrap\">{rowData.remarks}</p>\n      )\n    },\n    {\n      title: '操作', width: 180, align: 'right',\n      render: (row: any) => (\n        <>\n          <Button onClick={handleActionButton.bind(null, 0, row)} size=\"small\">编辑</Button>\n          <Button onClick={handleActionButton.bind(null, 1, row)} size=\"small\">删除</Button>\n        </>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"capital-flow\">\n      <div className=\"query-panel\">\n        <span>账务类型：</span>\n        <Select\n          onChange={(value: string) => setState({ name: value })}\n          value={state.name}\n        >\n          <Option value=\"\">全部</Option>\n          {state.nameList.map((item: any) => (\n            <Option value={item.id} key={item.id}>{item.name}</Option>\n          ))}\n        </Select>\n          {!state.name && (\n            <>\n              <span>收支类别：</span>\n              <Select\n                onChange={(value: string) => setState({ type: value })}\n                value={state.type}\n              >\n              {OPTION_TYPES.map(item => (\n                <Option value={item.value} key={item.value}>{item.name}</Option>\n              ))}\n              </Select>\n            </>\n          )}\n        <Search\n          value={state.searchKeyword}\n          placeholder=\"试试搜索备注\"\n          maxLength={300}\n          onChange={e => setState({ searchKeyword: e.target.value })}\n          onSearch={() => tableRef.current.getTableData()}\n          style={{ width: 260, marginRight: '15px' }}\n        />\n        <Button type=\"primary\" onClick={tableRef.current?.getTableData}>查询</Button>\n        <Button onClick={() => setState({ modalVisible: true, currentRow: null })}>新增</Button>\n        <Button onClick={initParams}>重置</Button>\n        <div style={{ marginTop: '10px' }}>\n          <span>日期：</span>\n          <RangePicker\n            format={dateFormat}\n            allowClear\n            value={state.date}\n            style={{ width: '280px', marginRight: '10px' }}\n            onChange={(date: any) => setState({ date })}\n          />\n          <Button onClick={onFilterDate.bind(null, 1)}>今天</Button>\n          <Button onClick={onFilterDate.bind(null, 2)}>昨天</Button>\n          <Button onClick={onFilterDate.bind(null, 3)}>最近一周</Button>\n          <Button onClick={onFilterDate.bind(null, 4)}>上个月</Button>\n          <Button onClick={onFilterDate.bind(null, 5)}>下个月</Button>\n        </div>\n        <div className=\"poly\">\n          <div className=\"item-price\">\n            <em>收入：￥</em>\n            <Statistic value={state.price.income} precision={2} />\n          </div>\n          <div className=\"item-price\">\n            <em>支出：￥</em>\n            <Statistic value={state.price.consumption} precision={2} />\n          </div>\n          <div className=\"item-price\">\n            <em>实际收入：￥</em>\n            <Statistic value={state.price.available} precision={2} />\n          </div>\n        </div>\n      </div>\n      <Table\n        ref={tableRef}\n        getTableData={getCapitalFlow}\n        columns={tableColumns}\n        onTableChange={onTableChange}\n        onDelete={serviceDeleteCapitalFlow}\n      />\n      <CreateCapitalFlow\n        visible={state.modalVisible}\n        rowData={state.currentRow}\n        nameList={state.nameList}\n        onCancel={() => setState({ modalVisible: false })}\n        onSuccess={handleModalOnSuccess}\n      />\n    </div>\n  )\n}\n\nexport default Reminder;\n","import React, { useCallback, useEffect } from 'react';\nimport {\n  Modal,\n  Form,\n  Input,\n  message,\n  Select\n} from 'antd';\nimport { serviceCreateCapitalFlowType, serviceUpdateCapitalFlowType } from '@/services';\nimport { TYPES } from '../../enum';\nimport useKeepState from 'use-keep-state';\n\ntype Props = {\n  visible: boolean;\n  onSuccess: (res?: any) => void;\n  onCancel: () => void;\n  rowData: null | { [propName: string]: any; }\n};\n\nconst { Option } = Select;\nconst defaultType = TYPES.length ? TYPES[0].value : null;\nconst initialState = {\n  confirmLoading: false,\n  name: '',\n  type: defaultType\n};\n\nconst CreateTask: React.FC<Props> = function ({\n  visible,\n  rowData,\n  onCancel,\n  onSuccess\n}) {\n  const [state, setState] = useKeepState(initialState);\n\n  const handleSubmitForm = useCallback(e => {\n    e.preventDefault();\n\n    const name = state.name.trim();\n    const params = { type: state.type, name };\n\n    if (!name) {\n      message.warn('名称不能为空');\n      return;\n    }\n\n    setState({ confirmLoading: true });\n\n    (rowData\n      ? serviceUpdateCapitalFlowType(rowData.id, params)\n        : serviceCreateCapitalFlowType(params)\n    )\n    .then(res => {\n      if (res.data.success) {\n        onSuccess(res.data.data);\n      }\n    })\n    .finally(() => {\n      setState({ confirmLoading: false });\n    });\n  }, [state, rowData, onSuccess, setState]);\n\n  useEffect(() => {\n    // 每次rowData改变重新赋值\n    if (rowData) {\n      setState({\n        name: rowData.name,\n        type: rowData.type\n      });\n    } else {\n      setState({\n        name: '',\n        type: defaultType\n      });\n    }\n  }, [rowData, setState]);\n\n  return (\n    <Modal\n      title=\"新增类别\"\n      visible={visible}\n      onOk={handleSubmitForm}\n      onCancel={onCancel}\n      confirmLoading={state.confirmLoading}\n    >\n      <Form>\n        <Form.Item label=\"名称\">\n          <Input\n            value={state.name}\n            onChange={e => setState({ name: e.target.value })}\n            maxLength={20}\n            placeholder=\"请输入名称\"\n          />\n        </Form.Item>\n        <Form.Item label=\"类型\">\n          <Select\n            value={state.type}\n            onChange={(value: any) => setState({ type: value })}\n          >\n          {TYPES.map(item => (\n            <Option value={item.value} key={item.value}>{item.name}</Option>\n          ))}\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nexport default React.memo(CreateTask);\n","import React, { useEffect } from 'react';\nimport './style.scss';\nimport moment from 'moment';\nimport useKeepState from 'use-keep-state';\nimport CreateType from '../components/create-type/index';\nimport { Table, Button, Tag, message } from 'antd';\nimport {\n  serviceGetCapitalFlowType,\n  serviceDeleteCapitalFlowType\n} from '@/services';\nimport { TypeNames, TypeColors } from '../enum';\n\nconst initialState = {\n  modalVisible: false,\n  selectedRowKeys: [],\n  loading: false,\n  data: [],\n  rowData: null\n};\n\nconst Type = () => {\n  const [state, setState] = useKeepState(initialState);\n  const tableColumns = [\n    { title: '账务类型', dataIndex: 'name' },\n    { title: '收支类别', render: (rowData: any) => (\n      <Tag color={rowData.color}>{rowData.typeName}</Tag>\n    ) },\n    { title: '创建时间', dataIndex: 'createdAt' },\n    { title: '操作', render: (rowData: any) => (\n      <Button onClick={handleEdit.bind(null, rowData)}>编辑</Button>\n    ) },\n  ];\n\n  const onSelectChange = function(selectedRowKeys: any) {\n    setState({ selectedRowKeys });\n  };\n\n  function getCapitalFlowType() {\n    serviceGetCapitalFlowType()\n      .then(res => {\n        if (res.data.success) {\n          const handleData = res.data.data.map((item: any) => {\n            item.typeName = TypeNames[item.type];\n            item.color = TypeColors[item.type];\n            item.createdAt = moment(item.createdAt).format('YYYY-MM-DD hh:mm');\n            return item;\n          });\n          setState({ data: handleData });\n        }\n      });\n  }\n\n  function deleteCapitalFlowType() {\n    const ids = state.selectedRowKeys.join();\n    if (!ids) return;\n    serviceDeleteCapitalFlowType(ids)\n      .then(res => {\n        if (res.data.success) {\n          getCapitalFlowType();\n        }\n      });\n  }\n\n  function handleOnSuccess() {\n    setState({ modalVisible: false });\n    getCapitalFlowType();\n  }\n\n  function handleAdd() {\n    if (state.data.length >= 100) {\n      message.warn('类型超出100条');\n      return;\n    }\n    setState({\n      modalVisible: true,\n      rowData: null\n    });\n  }\n\n  function handleEdit(rowData: any) {\n    setState({\n      modalVisible: true,\n      rowData\n    });\n  }\n\n  useEffect(() => {\n    getCapitalFlowType();\n  }, []);\n\n  const rowSelection = {\n    selectedRowKeys: state.selectedRowKeys,\n    onChange: onSelectChange,\n  };\n\n  return (\n    <div className=\"capital-flow-type\">\n      <div className=\"button-group\">\n        <Button type=\"primary\" danger onClick={deleteCapitalFlowType}>删除</Button>\n        <Button type=\"primary\" onClick={handleAdd}>新增</Button>\n      </div>\n      <Table\n        rowSelection={rowSelection}\n        columns={tableColumns}\n        dataSource={state.data}\n        pagination={false}\n        rowKey=\"id\"\n      />\n      <CreateType\n        visible={state.modalVisible}\n        rowData={state.rowData}\n        onCancel={() => setState({ modalVisible: false })}\n        onSuccess={handleOnSuccess}\n      />\n    </div>\n  )\n};\n\nexport default Type;\n","import React, { useCallback, useEffect } from 'react';\nimport useKeepState from 'use-keep-state';\nimport { serviceCreateTodoList, serviceUpdateTodoList } from '@/services';\nimport {\n  Modal,\n  Form,\n  Input,\n  message,\n} from 'antd';\n\ntype Props = {\n  visible: boolean;\n  rowData?: { [propName: string]: any; } | null;\n  setParentState(state: any): void;\n  onSuccess: (res?: any) => void;\n};\n\nconst { TextArea } = Input;\nconst initialState = {\n  confirmLoading: false,\n  content: '',\n};\n\nconst CreateTodo: React.FC<Props> = function ({\n  visible,\n  onSuccess,\n  setParentState,\n  rowData\n}) {\n  const [state, setState] = useKeepState(initialState);\n\n  const handleSubmitForm = useCallback(() => {\n    const params = {\n      content: state.content.trim(),\n    };\n\n    if (!params.content) {\n      message.warn('内容不能为空');\n      return;\n    }\n\n    (\n      !rowData\n        ? serviceCreateTodoList(params)\n          : serviceUpdateTodoList(rowData.id, params)\n    )\n    .then(res => {\n      if (res.data.success) {\n        onSuccess();\n      }\n    });\n  }, [state, onSuccess, rowData]);\n\n  useEffect(() => {\n    setState({\n      content: rowData ? rowData.content : ''\n    });\n  }, [rowData, setState]);\n\n  return (\n    <Modal\n      title=\"新增\"\n      visible={visible}\n      onOk={handleSubmitForm}\n      onCancel={() => setParentState({ showCreateTodoModal: false })}\n      confirmLoading={state.confirmLoading}\n    >\n      <Form>\n        <Form.Item label=\"活动内容\">\n          <TextArea\n            rows={3}\n            value={state.content}\n            onChange={e => setState({ content: e.target.value })}\n            maxLength={250}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nexport default React.memo(CreateTodo);\n","\nexport const STATUS: any = {\n  1: { text: '进行中', color: 'volcano' },\n  2: { text: '已完成', color: '#2db7f5' }\n};\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport moment from 'moment';\nimport useKeepState from 'use-keep-state';\nimport Table from '@/components/table';\nimport CreateTodo from '../components/create-todo';\nimport { serviceGetTodoList, serviceDeleteTodoList, serviceUpdateTodoList } from '@/services';\nimport { STATUS } from '../constants';\nimport { DatePicker, Button, Tag } from 'antd';\nimport {\n  getThisYearFirstDay,\n  getCurMonthLastDay,\n  modalConfirmDelete,\n  ONE_DAY_TIMESTAMP\n} from '@/utils';\n\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'YYYY-MM-DD';\n\ninterface State {\n  date: moment.Moment[];\n  showCreateTodoModal: boolean;\n  currentRowData: { [key: string]: any; } | null;\n}\n\nconst initialState: State = {\n  date: [],\n  showCreateTodoModal: false,\n  currentRowData: null\n};\n\nconst TodoList = () => {\n  const [state, setState] = useKeepState(initialState);\n  const tableRef = useRef<any>();\n  const tableColumns = [\n    { title: '状态', dataIndex: 'status', width: 90, render: (status: number) => (\n      <Tag color={STATUS[status].color}>{STATUS[status].text}</Tag>\n    )},\n    { title: '创建时间', dataIndex: 'createdAt', width: 170 },\n    { title: '活动内容', dataIndex: 'content', className: 'word-break_break-all' },\n    { title: '操作', width: 250, align: 'right',\n      render: (row: any) => (\n        <>\n          <Button onClick={handleActionButton.bind(null, 0, row)}>编辑</Button>\n          <Button onClick={handleActionButton.bind(null, 1, row)}>删除</Button>\n          <Button\n            onClick={handleActionButton.bind(null, 2, row)}\n            disabled={row.status === 2}\n          >\n            完成\n          </Button>\n        </>\n      )\n    }\n  ];\n\n  function getData() {\n    tableRef.current.getTableData();\n  }\n\n  const getTodoList = useCallback((params?: any) => {\n    params.startDate = state.date[0].valueOf();\n    params.endDate = state.date[1].valueOf() + ONE_DAY_TIMESTAMP;\n\n    return serviceGetTodoList(params).then(res => {\n      res.data.data.rows.map((item: any) => {\n        item.createdAt = moment(item.createdAt).format('YYYY-MM-DD HH:mm');\n        return item;\n      });\n      return res;\n    })\n  }, [state.date]);\n\n  const initParams = useCallback(() => {\n    const startDate = moment(getThisYearFirstDay(), dateFormat);\n    const endDate = moment(getCurMonthLastDay(dateFormat), dateFormat);\n    setState({ date: [startDate, endDate] });\n  }, [setState]);\n\n  const handleOnSuccess = useCallback(() => {\n    setState({ showCreateTodoModal: false });\n    tableRef.current.getTableData();\n  }, [setState]);\n\n  const handleActionButton = useCallback((buttonType: number, row: any) => {\n    switch (buttonType) {\n      // 编辑\n      case 0:\n        setState({ showCreateTodoModal: true, currentRowData: row });\n        break;\n      // 删除\n      case 1:\n        modalConfirmDelete()\n        .then(() => {\n          serviceDeleteTodoList(row.id)\n          .then(res => {\n            if (res.data.success) {\n              tableRef.current.getTableData();\n            }\n          });\n        });\n        break;\n      // 状态\n      case 2:\n        serviceUpdateTodoList(row.id, { status: 2 })\n        .then(res => {\n          if (res.data.success) {\n            tableRef.current.getTableData();\n          }\n        });\n        break;\n      default:\n    }\n  }, [setState]);\n\n  useEffect(() => {\n    initParams();\n  }, [initParams]);\n\n  useEffect(() => {\n    if (state.date.length <= 0) return;\n    tableRef?.current?.getTableData();\n  }, [state.date]);\n\n  return (\n    <div className=\"today-task\">\n      <div className=\"query-panel\">\n        <span>查询日期：</span>\n        <RangePicker\n          format={dateFormat}\n          allowClear\n          value={state.date}\n          onChange={(date: any) => setState({ date })}\n        />\n        <Button type=\"primary\" onClick={getData}>查询</Button>\n        <Button onClick={() => setState({\n          showCreateTodoModal: true,\n          currentRowData: null\n        })}>新增</Button>\n        <Button onClick={initParams}>重置</Button>\n      </div>\n      <Table\n        ref={tableRef}\n        getTableData={getTodoList}\n        columns={tableColumns}\n        onDelete={serviceDeleteTodoList}\n      />\n      <CreateTodo\n        visible={state.showCreateTodoModal}\n        onSuccess={handleOnSuccess}\n        setParentState={setState}\n        rowData={state.currentRowData}\n      />\n    </div>\n  );\n};\n\nexport default TodoList;\n","import { lazy } from 'react';\nimport { IRouteProps } from '@/router/types';\nimport { HOME, SETTING } from './constants';\nimport Login from '@/views/login/index';\nimport NoMatch from '@/views/exception/no-match';\nimport MainEntry from '@/views/home/main-entry';\nimport Reminder from '@/views/home/reminder';\nimport SettingIndex from '@/views/home/setting/index';\nimport HomeIndex from '@/views/home/index';\nimport TodayTask from '@/views/home/today-task';\nimport Memorandum from '@/views/home/memorandum/index';\nimport MemorandumCreate from '@/views/home/memorandum/create';\nimport MemorandumDetail from '@/views/home/memorandum/detail';\nimport CapitalFlow from '@/views/home/capital-flow/index';\nimport CapitalFlowType from '@/views/home/capital-flow/type';\nimport TodoList from '@/views/home/todo-list/index';\n\nconst routesMap: Array<IRouteProps> = [\n  {\n    path: HOME.LOGIN.path,\n    exact: true,\n    component: Login,\n    meta: {\n      // 当前页面是否需要登录状态\n      requiresAuth: false,\n      // 网页标题\n      title: HOME.LOGIN.name,\n      // 如果当前登录状态跳转到后台首页\n      isLoginToHome: true\n    }\n  },\n  {\n    path: HOME.HOME.path,\n    component: MainEntry,\n    meta: {\n      requiresAuth: true,\n    },\n    childrenRoutes: [\n      {\n        path: HOME.HOME_INDEX.path,\n        component: HomeIndex,\n        exact: true,\n        meta: {\n          title: HOME.HOME_INDEX.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.REMINDER.path,\n        component: Reminder,\n        exact: true,\n        meta: {\n          title: HOME.REMINDER.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.SETTING_INDEX.path,\n        component: SettingIndex,\n        meta: {\n          title: HOME.SETTING_INDEX.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.TODAY_TASK.path,\n        component: TodayTask,\n        meta: {\n          title: HOME.TODAY_TASK.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.MEMORANDUM.path,\n        component: Memorandum,\n        exact: true,\n        meta: {\n          title: HOME.MEMORANDUM.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.MEMORANDUM_CREATE.path,\n        component: MemorandumCreate,\n        exact: true,\n        meta: {\n          title: HOME.MEMORANDUM_CREATE.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.MEMORANDUM_DETAIL.path,\n        component: MemorandumDetail,\n        exact: true,\n        meta: {\n          title: HOME.MEMORANDUM_DETAIL.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.CAPITAL_FLOW.path,\n        component: CapitalFlow,\n        exact: true,\n        meta: {\n          title: HOME.CAPITAL_FLOW.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.CAPITAL_FLOW_TYPE.path,\n        component: CapitalFlowType,\n        exact: true,\n        meta: {\n          title: HOME.CAPITAL_FLOW_TYPE.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.TODO_LIST.path,\n        component: TodoList,\n        exact: true,\n        meta: {\n          title: HOME.TODO_LIST.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.NO_MATCH.path,\n        component: NoMatch,\n        meta: {\n          requiresAuth: true,\n          title: HOME.NO_MATCH.name\n        }\n      },\n    ]\n  },\n  {\n    path: HOME.NO_MATCH.path,\n    component: NoMatch,\n    meta: {\n      requiresAuth: false,\n      title: HOME.NO_MATCH.name\n    }\n  },\n];\n\nconst Base = lazy(() => import('@/views/home/setting/base'));\nconst InnerMessage = lazy(() => import('@/views/home/setting/inner-message'));\nconst Notification = lazy(() => import('@/views/home/setting/notification'));\nconst Account = lazy(() => import('@/views/home/setting/account'));\n\nexport const settingRoutes: Array<IRouteProps> = [\n  {\n    path: SETTING.BASE.path,\n    component: Base,\n    meta: {\n      requiresAuth: true,\n      title: SETTING.BASE.name\n    }\n  },\n  {\n    path: SETTING.INNER_MESSAGE.path,\n    component: InnerMessage,\n    meta: {\n      requiresAuth: true,\n      title: SETTING.INNER_MESSAGE.name\n    }\n  },\n  {\n    path: SETTING.NOTIFICATION.path,\n    component: Notification,\n    meta: {\n      requiresAuth: true,\n      title: SETTING.NOTIFICATION.name\n    }\n  },\n  {\n    path: SETTING.ACCOUNT.path,\n    component: Account,\n    meta: {\n      requiresAuth: true,\n      title: SETTING.ACCOUNT.name\n    }\n  },\n];\n\nexport default routesMap;\n","import React from 'react';\nimport PrivateRoute from '@/components/private-route';\nimport CONFIG from '@/config';\nimport routesMap from './routes';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { DispatchProp, connect } from 'react-redux';\nimport { validateLocalStatus } from '@/store/actions/user';\n\nconst Routes: React.FC<DispatchProp> = function ({ dispatch }) {\n  dispatch(validateLocalStatus());\n\n  return (\n    <Router basename={CONFIG.baseURL}>\n      <Switch>\n        {routesMap.map((route, idx) => (\n          <PrivateRoute {...route} key={idx} />\n        ))}\n      </Switch>\n    </Router>\n  )\n};\n\nexport default connect()(Routes);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/global.scss';\nimport Routes from './router';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport store from '@/store';\n\nmoment.locale('zh-cn');\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <ConfigProvider locale={zh_CN}>\n        <Routes />\n      </ConfigProvider>\n    </Provider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('tomato-work-root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/**\n * @file Define action type constants\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\n\nexport const USER: any = {\n  LOGIN: 'LOGIN',\n  LOGOUT: 'LOGOUT',\n};\n\nexport const SYSTEM: any = {\n  INFO: 'INFO'\n};\n","/**\n * @file System Action Creator\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\n\nimport { SYSTEM } from '../constants';\nimport { serviceGetSystemInfo } from '@/services';\nimport { Dispatch } from 'redux';\n\nconst { INFO } = SYSTEM;\n\nexport function setSystemInfo(data: any = {}) {\n  return { type: INFO, data };\n}\n\n/**\n * 获取系统信息\n */\nexport function getSystemInfo() {\n  return function (dispatch: Dispatch, getState: () => any) {\n    const { system: { info } } = getState();\n\n    if (info.nodeVersion) {\n      return dispatch(setSystemInfo());\n    }\n\n    return serviceGetSystemInfo().then((res: any) => {\n      if (res.data.success) {\n        const data = res.data.data;\n        return dispatch(setSystemInfo(data));\n      }\n      return dispatch(setSystemInfo());\n    });\n  }\n}\n"],"sourceRoot":""}