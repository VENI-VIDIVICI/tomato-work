{"version":3,"sources":["store/actions/user.ts","components/table/action-panel.tsx","components/table/index.tsx","utils/helper.ts","hooks/index.ts","utils/http.ts","services/user.ts","services/system.ts","services/reminder.ts","services/todayTask.ts","services/capitalFlow.ts","services/memorandum.ts","services/innerMessage.ts","services/todoList.ts","services/common.ts","store/reducers/user.ts","store/reducers/system.ts","store/reducers/index.ts","store/index.ts","components/avatar/index.tsx","api/index.ts","assets/img/common/no-data.svg","assets/img/common/logo.png","utils/date.ts","utils/spin.ts","config/index.ts","constants/storage.ts","constants/menu.tsx","components/private-route/index.tsx","components/footer/index.tsx","views/login/index.tsx","views/home/index/components/system-info/index.tsx","views/home/memorandum/create/index.tsx","views/home/capital-flow/enum.tsx","components/exception/index.tsx","views/exception/no-match/index.tsx","components/sidebar/index.tsx","components/header/index.tsx","views/home/main-entry/index.tsx","views/home/reminder/components/create-reminder/index.tsx","views/home/reminder/index.tsx","views/home/setting/index/index.tsx","views/home/index/components/penel-group/index.tsx","views/home/index/components/money-access-chart/index.tsx","views/home/index/index.tsx","components/no-data/index.tsx","views/home/today-task/components/task-item/index.tsx","views/home/today-task/components/create-task/index.tsx","views/home/today-task/index.tsx","views/home/memorandum/index/index.tsx","views/home/memorandum/constants.ts","views/home/memorandum/detail/index.tsx","views/home/capital-flow/components/create-capital-flow/index.tsx","views/home/capital-flow/index/index.tsx","views/home/capital-flow/components/create-type/index.tsx","views/home/capital-flow/type/index.tsx","views/home/todo-list/components/create-todo/index.tsx","views/home/todo-list/constants.tsx","views/home/todo-list/index/index.tsx","router/routes.ts","router/index.tsx","serviceWorker.ts","index.tsx","router/constants.ts","store/constants/index.ts","store/actions/system.ts"],"names":["LOGIN","USER","setUser","userInfo","createdAt","moment","format","type","loginByToken","token","dispatch","serviceLoginByToken","then","res","data","success","logout","serviceLogout","finally","localStorageWhiteList","LOCAL_STORAGE","LOGIN_NAME","localStorageLen","window","localStorage","length","allLocalStorageKey","i","key","push","forEach","keyName","indexOf","removeItem","sessionStorage","clear","location","reload","githubAuthz","url","config","github","callbackURL","clientId","replace","validateLocalStatus","JSON","parse","getItem","_","isPlainObject","ActionPanel","selectedRowKeys","onDelete","onAdd","isShowPanel","disabled","className","onClick","icon","PlusOutlined","danger","modalConfirmDelete","title","DeleteOutlined","initialState","tableHeight","tableDataSource","isLoading","pagination","pageNo","pageSize","showSizeChanger","total","pageSizeOptions","TableFC","rowSelection","getTableData","onTableChange","tableRef","forwardedRef","props","showRowSelection","useKeepState","state","setState","getData","current","count","rows","useEffect","setTimeout","tableEl","document","querySelector","clientHeight","onChange","Fragment","join","rowKey","loading","dataSource","scroll","y","showHeader","filters","sorter","size","forwardedTable","React","forwardRef","ref","memo","CODE","totalPercentage","totalmem","freemem","Math","floor","object","Promise","resolve","Modal","confirm","okType","onOk","fullscreen","docElm","documentElement","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","message","warn","exitFullscreen","doc","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","randomCode","num","random","useFormInput","initialValue","useState","value","setValue","event","target","exiting","CancelToken","axios","handleError","error","isCancel","response","status","statusText","httpInstance","create","timeout","baseURL","CONFIG","http","defaults","headers","common","successAlert","errorAlert","Object","setPrototypeOf","interceptors","request","use","method","userState","store","getState","user","axiosCancelTokenStore","idx","cancelRequest","cancel","splice","cancelToken","pathname","spin","start","FormData","append","assign","reject","done","msg","errorCode","serviceLogin","post","api","login","get","params","serviceUpdateUser","updateUser","serviceGetUserConfig","getUserConfig","serviceUpdateUserConfig","put","serviceGetSystemInfo","getSystemInfo","serviceCreateReminder","reminder","serviceGetReminder","serviceDeleteReminder","id","delete","serviceUpdateReminder","serviceCreateTask","todayTask","serviceGetTask","serviceDeleteTask","serviceUpdateTask","serviceGetCapitalFlowType","capitalFlowType","serviceDeleteCapitalFlowType","serviceUpdateCapitalFlowType","serviceCreateCapitalFlowType","serviceGetCapitalFlow","capitalFlow","serviceDeleteCapitalFlow","serviceUpdateCapitalFlow","serviceCreateCapitalFlow","serviceGetCapitalFlowPrice","getCapitalFlowPrice","serviceCreateMemorandum","memorandum","serviceGetMemorandum","serviceGetMemorandumById","serviceDeleteMemorandum","serviceUpdateMemorandum","serviceGetInnerMessage","innerMessage","serviceUpdateInnerMessageHasRead","serviceCreateTodoList","todoList","serviceGetTodoList","serviceDeleteTodoList","serviceUpdateTodoList","serviceGetPanelData","getPanelData","isLogin","isLockScreen","provider","uid","undefined","bio","username","password","loginName","avatarUrl","email","role","action","setItem","stringify","INFO","SYSTEM","info","mysqlVersion","currentSystemTime","Date","now","platform","hostname","arch","nodeVersion","cpus","system","isEmpty","slice","combineReducers","createStore","rootReducer","applyMiddleware","thunk","Avatar","onError","API","getCaptcha","module","exports","ONE_DAY_TIMESTAMP","getCurMonthTotalDay","daysInMonth","getCurMonthFirstDay","cur","setDate","setHours","getTime","getCurMonthLastDay","isLtTodayTimestamp","todayTimestamp","valueOf","getStartTimestampByDate","date","getEndTimestampByDate","getThisYearFirstDay","setMonth","getThisYearLastDay","endOf","containerEl","getElementById","spinEl","createElement","innerHTML","appendChild","parentNode","removeChild","isProduction","process","isDevelopment","origin","repositoryUrl","bug","SIDEBAR_COLLAPSED","LOCK_SCREEN","HOME_SIDER_MENU_LIST","path","HOME","HOME_INDEX","HomeOutlined","name","REMINDER","ClockCircleOutlined","TODO_LIST","FileDoneOutlined","TODAY_TASK","ScheduleOutlined","BarChartOutlined","children","CAPITAL_FLOW","CAPITAL_FLOW_TYPE","MEMORANDUM","FormOutlined","MEMORANDUM_CREATE","SETTING","BASE","UserOutlined","SETTING_SIDER_MENU_LIST","INNER_MESSAGE","NOTIFICATION","ACCOUNT","PrivateRouteComponent","connect","withRouter","Component","component","childrenRoutes","rest","Array","isArray","meta","auth","requiresAuth","isLoginToHome","qs","search","redirectUrl","to","render","map","route","currentYear","getFullYear","Footer","href","rel","PopoverContent","style","padding","captcha","reloadCaptcha","e","src","timer","editor","TypeNames","TypeColors","history","code","setLoading","handleSubmit","_loginName","trim","_password","_code","Error","md5","catch","err","query","Number","width","height","viewBox","aria-hidden","d","fill","require","alt","Group","placeholder","prefix","maxLength","autoComplete","onPressEnter","LockOutlined","PictureOutlined","suffix","marginTop","block","content","trigger","placement","GithubOutlined","statusMap","403","subTitle","404","500","extra","goBack","NoMatch","Sider","Layout","SubMenu","Menu","collapsed","selectedKeys","setSelectedKeys","openKeys","setOpenKeys","fragment","split","prefixPath","menu","findIdx","findIndex","collapsible","onOpenChange","mode","theme","subItem","Item","Header","popoverList","el","PoweroffOutlined","fontSize","marginRight","setCollapsed","messageList","setMessageList","unReadCount","setUnReadCount","isFullscreen","setIsFullscreen","item","hasRead","MessageContent","useMemo","MenuUnfoldOutlined","cursor","MenuFoldOutlined","dot","BellFilled","FullscreenOutlined","FullscreenExitOutlined","BugFilled","Content","storageCollapsed","Children","child","TextArea","Input","confirmLoading","dateMode","visible","onCancel","onSuccess","rowData","initParams","useCallback","preventDefault","label","showTime","allowClear","onPanelChange","disabledDate","RangePicker","DatePicker","Option","Select","STATUS_TYPE","1","color","text","2","queryType","modalVisible","currentRow","useRef","tableColumns","dataIndex","row","align","handleButton","bind","startDate","endDate","handleModalOnSuccess","warning","order","columns","SettingIndex","fallback","settingRoutes","isInit","Icon","PropertySafetyFilled","ScheduleFilled","FileTextFilled","AlertFilled","consumption","todayTaskCount","unfinishedTodoListCount","reminderCount","gutter","xs","sm","md","xl","lg","curSystemTime","percentage","systemInfo","memPercentage","countdown","clearTimeout","timeDiff","hoverable","bytes","percent","strokeColor","cols","range","setData","totalPrice","setTotalPrice","price","scale","forceFit","formatter","val","parseInt","crosshairs","position","shape","stroke","lineWidth","image","Empty","PRESENTED_IMAGE_SIMPLE","propDispatch","NoDataSvg","reloadData","handleAction","buttonType","rollback","includes","setParentState","handleSubmitForm","showCreateTaskModal","datePickerValue","TASK_TYPE","wait","finished","unfinished","TodayTask","getTask","handleOnSuccess","keys","span","Memorandum","list","setList","stopPropagation","index","copyList","dangerouslySetInnerHTML","__html","html","Create","computedMatch","setTitle","handleActionButton","markdown","getValue","init","Editor","initialEditType","previewStyle","usageStatistics","remove","onBlur","Detail","setContent","LeftOutlined","EditOutlined","remarks","typeId","nameList","initRef","isNaN","optionName","TYPES","symbol","OPTION_TYPES","Search","searchKeyword","income","available","sortedInfo","Reminder","onFilterDate","prevDay","subtract","startOf","add","sort","a","b","sortOrder","field","defaultFilteredValue","__color__","__price__","onSearch","precision","keyword","typeNameId","defaultType","Type","typeName","handleEdit","getCapitalFlowType","handleData","ids","showCreateTodoModal","STATUS","currentRowData","TodoList","getTodoList","routesMap","exact","Login","MainEntry","HomeIndex","SETTING_INDEX","MemorandumCreate","MEMORANDUM_DETAIL","MemorandumDetail","CapitalFlow","CapitalFlowType","NO_MATCH","Base","lazy","InnerMessage","Notification","Account","basename","Boolean","match","locale","ReactDOM","zh_CN","navigator","serviceWorker","ready","registration","unregister","console","LOGOUT","setSystemInfo"],"mappings":"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","file":"static/js/main.442ce334.chunk.js","sourcesContent":["/**\n * @file User Action Creator\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\nimport config from '@/config';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { USER } from '../constants';\nimport { LOCAL_STORAGE } from '@/constants';\nimport { serviceLoginByToken, serviceLogout } from '@/services';\nimport { Dispatch } from 'redux';\n\nconst { LOGIN } = USER;\n\nexport function setUser(userInfo: any = {}) {\n  if (userInfo.createdAt) {\n    userInfo.createdAt = moment(userInfo.createdAt).format('YYYY-MM-DD');\n  }\n  return {\n    type: LOGIN,\n    userInfo: userInfo\n  };\n}\n\n/**\n * 使用token进行登录\n */\nexport function loginByToken(token: string) {\n  return function (dispatch: Dispatch) {\n    return serviceLoginByToken(token).then((res: any) => {\n      if (res.data.success) {\n        const userInfo = res.data.data.userInfo;\n        return dispatch(setUser(userInfo));\n      }\n      return dispatch(setUser());\n    });\n  }\n}\n\n/**\n * 注销登录\n */\nexport function logout() {\n  serviceLogout()\n  .finally(() => {\n    const localStorageWhiteList = [LOCAL_STORAGE.LOGIN_NAME];\n    const localStorageLen = window.localStorage.length;\n    const allLocalStorageKey: string[] = [];\n\n    for (let i = 0; i < localStorageLen; i++) {\n      const key = window.localStorage.key(i) as string;\n      allLocalStorageKey.push(key);\n    }\n\n    allLocalStorageKey.forEach(keyName => {\n      if (localStorageWhiteList.indexOf(keyName) === -1) {\n        window.localStorage.removeItem(keyName);\n      }\n    });\n    window.sessionStorage.clear();\n    window.location.reload(true);\n  });\n}\n\n/**\n * Github Auth\n */\nexport function githubAuthz() {\n  const url = `https://github.com/login/oauth/authorize?response_type=code&redirect_uri=${config.github.callbackURL}&client_id=${config.github.clientId}`;\n  window.location.replace(url);\n}\n\n/**\n * 验证本地登录状态\n */\nexport function validateLocalStatus() {\n  let userInfo = {};\n  try {\n    userInfo = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE.USER) as string);\n    if (!_.isPlainObject(userInfo)) {\n      userInfo = {};\n    }\n  } catch {}\n  return setUser(userInfo);\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { modalConfirmDelete } from '@/utils/helper';\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\n\ninterface Props {\n  onDelete?: () => void;\n  onAdd?: () => void;\n  selectedRowKeys: string[];\n}\n\nconst ActionPanel: React.FC<Props> = function({\n  selectedRowKeys,\n  onDelete,\n  onAdd\n}) {\n  const isShowPanel = onDelete || onAdd;\n  const disabled = selectedRowKeys.length <= 0;\n\n  function handleDelete() {\n    modalConfirmDelete({\n      title: '确定要删除选中'\n    }).then(() => {\n      onDelete && onDelete();\n    });\n  }\n\n  return isShowPanel ? (\n    <div className=\"table-action-panel\">\n      {onAdd && (\n        <Button\n          type=\"primary\"\n          onClick={onAdd}\n          icon={<PlusOutlined />}\n        >\n          新增\n        </Button>\n      )}\n\n      {onDelete && (\n        <Button\n          type=\"primary\"\n          danger\n          onClick={handleDelete}\n          disabled={disabled}\n          icon={<DeleteOutlined />}\n        >\n          批量删除\n        </Button>\n      )}\n    </div>\n  ) : null\n};\n\nexport default ActionPanel;\n","/**\n * @author xiejiahe <xjh22222228@gmail.com>\n * @example:\n * <Table\n *   // 配置ref用于调用父组件方法获取数据\n *   ref={tableRef}\n *\n *   // getData 接口函数获取数据，必须返回一个axios Promise 同时处理好数据\n *   getTableData={getData}\n *\n *   columns={tableColumns}\n * />\n */\n\nimport React, { FC, useEffect } from 'react';\nimport './style.scss';\nimport { Table } from 'antd';\nimport { TableProps } from 'rc-table/lib/Table';\nimport { AxiosPromise } from 'axios';\nimport useKeepState from 'use-keep-state';\nimport ActionPanel from './action-panel';\n\ninterface Props {\n  getTableData: (data: any) => AxiosPromise;\n  onTableChange?: (pagination: any, filters: any, sorter: any) => void;\n  onDelete?: (id: string) => AxiosPromise;\n  onAdd?: () => void;\n  [key: string]: any;\n}\n\ninterface State {\n  tableHeight: number;\n  tableDataSource: any[];\n  isLoading: boolean;\n  pagination: {\n    [key: string]: any;\n  },\n  selectedRowKeys: string[]\n}\n\nconst DEFAULT_PAGE_SIZE = 50;\nconst initialState: State = {\n  tableHeight: 0,\n  tableDataSource: [],\n  isLoading: false,\n  pagination: {\n    pageNo: 1,\n    pageSize: DEFAULT_PAGE_SIZE,\n    showSizeChanger: true,\n    total: 0,\n    pageSizeOptions: ['30', '50', '70', '100', '200']\n  },\n  selectedRowKeys: []\n};\n\nconst TableFC: FC<Props & TableProps<unknown>> = ({\n  getTableData,\n  onTableChange,\n  onDelete,\n  onAdd,\n  forwardedRef: tableRef,\n  ...props\n}) => {\n  let rowSelection;\n  const showRowSelection = onDelete;\n  const [state, setState] = useKeepState(initialState);\n\n  function getData() {\n    setState({ isLoading: true });\n    const { pageNo, pageSize } = tableRef.current;\n    // 调用父组件函数获取数据\n    getTableData({\n      pageNo: pageNo - 1,\n      pageSize: pageSize\n    })\n      .then(res => {\n        if (res.data.success) {\n          setState({\n            pagination: {\n              ...state.pagination,\n              total: res.data.data.count,\n              pageSize\n            },\n            tableDataSource: res.data.data.rows\n          });\n        }\n      })\n      .finally(() => {\n        setState({ isLoading: false });\n      });\n  }\n\n  function onChange(pagination: any, filters: any, sorter: any) {\n    const pageNo = pagination.current;\n    const pageSize = pagination.pageSize;\n    setState({\n      pagination: {\n        ...state.pagination,\n        pageNo,\n        pageSize\n      }\n    });\n    tableRef.current.pageNo = pageNo;\n    tableRef.current.pageSize = pageSize;\n    getData();\n    onTableChange && onTableChange(pagination, filters, sorter);\n  }\n\n  useEffect(() => {\n    if (!tableRef.current) {\n      tableRef.current = {};\n    }\n    // 新增方法给父组件调用\n    tableRef.current.getTableData = getData;\n  });\n\n  useEffect(() => {\n    tableRef.current.pageNo = 1;\n    tableRef.current.pageSize = DEFAULT_PAGE_SIZE;\n  }, [tableRef]);\n\n  useEffect(() => {\n    // 设置表格的高度\n    setTimeout(() => {\n      const tableEl = document.querySelector('.ant-table-wrapper');\n      if (tableEl) {\n        setState({ tableHeight: tableEl.clientHeight - 120 });\n      }\n    }, 0);\n  }, [setState]);\n\n  function handleDelete() {\n    if (!onDelete) return null;\n    const selectedRowKeys = state.selectedRowKeys.join(',');\n    onDelete(selectedRowKeys)\n      .then(res => {\n        if (res.data.success) {\n          setState({ selectedRowKeys: [] });\n          getData();\n        }\n      });\n  }\n\n  if (showRowSelection) {\n    rowSelection = {\n      onChange(selectedRowKeys: string[]) {\n        setState({ selectedRowKeys });\n      }\n    };\n  }\n\n  return (\n    <React.Fragment>\n      <ActionPanel\n        selectedRowKeys={state.selectedRowKeys}\n        onDelete={onDelete && handleDelete}\n        onAdd={onAdd}\n      />\n\n      <Table\n        {...props as any}\n        rowKey=\"id\"\n        loading={state.isLoading}\n        dataSource={state.tableDataSource}\n        scroll={{ y: state.tableHeight + 'px' }}\n        showHeader={state.tableDataSource.length}\n        onChange={onChange}\n        rowSelection={rowSelection}\n        pagination={{\n          ...state.pagination,\n          size: 'small'\n        }}\n      />\n    </React.Fragment>\n  )\n};\n\nconst forwardedTable = React.forwardRef((props: any, ref) => (\n  <TableFC {...props} forwardedRef={ref} />\n));\n\nexport default React.memo(forwardedTable);\n","import { Modal, message } from 'antd';\n\n\nconst CODE = 'qwertyuipasdfghjklxcvbnm13456789';\n\n/**\n * 计算百分比\n * @example\n * totalPercentage(8589934592, 225492992);  // => 98\n */\nexport function totalPercentage(totalmem: number, freemem: number) {\n  return Math.floor((totalmem - freemem) / totalmem * 100);\n}\n\n/**\n * 删除模态对话框\n * @return Promise\n */\nexport function modalConfirmDelete(object?: { [k: string]: any }) {\n  return new Promise(resolve => {\n    Modal.confirm({\n      title: '确定要删除吗？',\n      okType: 'danger',\n      onOk() {\n        resolve(true);\n      },\n      ...object\n    });\n  });\n}\n\n\n// 全屏浏览器\nexport function fullscreen() {\n  try {\n    const docElm = document.documentElement as any;\n    if (docElm.requestFullscreen) {\n      docElm.requestFullscreen();\n    } else if (docElm.webkitRequestFullScreen) {\n      docElm.webkitRequestFullScreen();\n    } else if (docElm.mozRequestFullScreen) {\n      docElm.mozRequestFullScreen();\n    } else if (docElm.msRequestFullscreen) {\n      docElm.msRequestFullscreen();\n    }\n  } catch {\n    message.warn('您所使用的浏览器不支持全屏');\n  }\n}\n\n// 退出全屏浏览器\nexport function exitFullscreen() {\n  try {\n    const doc = document as any;\n    if (doc.exitFullscreen) {\n      doc.exitFullscreen();\n    } else if (doc.mozCancelFullScreen) {\n      doc.mozCancelFullScreen();\n    } else if (doc.webkitCancelFullScreen) {\n      doc.webkitCancelFullScreen();\n    } else if (doc.msExitFullscreen) {\n      doc.msExitFullscreen();\n    }\n  } catch {\n    message.warn('您所使用的浏览器不支持退出全屏, 请按ESC');\n  }\n}\n\n// 随机字符串\nexport function randomCode(num = 4) {\n  let data = '';\n\n  for (let i = 0; i < num; i++) {\n    const random = Math.floor(Math.random() * CODE.length);\n    data += CODE[random];\n  }\n\n  return data;\n}\n","import { useState } from 'react';\n\ninterface InputProps {\n  value: any;\n  onChange(event: React.ChangeEvent<HTMLInputElement>): void\n}\n\n/**\n * Input onChange and useState\n * @param initialValue\n */\nexport function useFormInput(initialValue: any): InputProps {\n  const [value, setValue] = useState(initialValue);\n  function handleChange(event: React.ChangeEvent<HTMLInputElement & HTMLTextAreaElement>): void {\n    setValue(event.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  };\n}\n\n","import axios from 'axios';\nimport CONFIG from '@/config';\nimport store from '@/store';\nimport { message } from 'antd';\nimport { logout } from '@/store/actions';\nimport { spin } from '@/utils';\n\nlet exiting = false;\nconst CancelToken = axios.CancelToken;\n\nfunction handleError(error: any): Promise<any> | undefined {\n  if (axios.isCancel(error)) {\n\n  } else {\n    const response = error.response;\n    message.error(`${response.status} ${response.statusText}`);\n  }\n  return void 0;\n}\n\nconst httpInstance = axios.create({\n  timeout: 60000,\n  baseURL: CONFIG.http.baseURL\n});\n\nhttpInstance.defaults.headers.common.isLoading = true;\nhttpInstance.defaults.headers.common.successAlert = false;\nhttpInstance.defaults.headers.common.errorAlert = true;\nObject.setPrototypeOf(httpInstance, axios);\n\nhttpInstance.interceptors.request.use(function (config) {\n  const method = config.method;\n  const url = config.url;\n  const userState = store.getState().user.userInfo;\n\n  // 取消重复请求\n  window.axiosCancelTokenStore.forEach((store, idx) => {\n    if (\n      config.headers.cancelRequest !== false &&\n      store.url === url &&\n      store.method === method\n    ) {\n      store.cancel();\n      window.axiosCancelTokenStore.splice(idx, 1);\n    }\n  });\n\n  config.headers.token = userState.token;\n  config.cancelToken = new CancelToken(cancel => {\n    window.axiosCancelTokenStore.push({\n      pathname: window.location.pathname,\n      method,\n      url,\n      cancel\n    });\n  });\n\n  const data: { [k: string]: any } = {};\n\n  if (config.headers.isLoading) {\n    spin.start();\n  }\n\n  if (method === 'post' || method === 'put') {\n    if (config.data instanceof FormData) {\n      for (let key in data) {\n        config.data.append(key, data[key])\n      }\n    } else {\n      config.data = Object.assign(data, config.data);\n    }\n  }\n\n  return config;\n}, function (error) {\n  return (handleError(error) as any) || Promise.reject(error);\n});\n\n\nhttpInstance.interceptors.response.use(function (res) {\n  if (res.config.headers.isLoading) {\n    spin.done();\n  }\n\n  if (!res.data.success && res.config.headers.errorAlert) {\n    message.warn(res.data.msg ?? '服务器出小差');\n  }\n\n  if (res.data.success && res.config.headers.successAlert) {\n    message.success(res.data.msg ?? 'success');\n  }\n\n  if (res.data.errorCode === 401 && !exiting) {\n    exiting = true;\n    setTimeout(logout, 2000);\n  }\n  return res;\n}, function (error) {\n  return (handleError(error) as any) || Promise.reject(error);\n});\n\nexport default httpInstance;\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 通过账号密码登录\nexport function serviceLogin(data: object) {\n  return http.post(api.login, data);\n}\n\n// 通过token登录\nexport function serviceLoginByToken(token: string) {\n  return http.get(api.loginByToken, {\n    params: { token }\n  });\n}\n\n// 退出登录\nexport function serviceLogout() {\n  return http.get(api.logout);\n}\n\n// 更新用户信息\nexport function serviceUpdateUser(data: object) {\n  return http.post(api.updateUser, data, {\n    headers: { successAlert: true }\n  });\n}\n\n// 获取用户配置信息\nexport function serviceGetUserConfig() {\n  return http.get(api.getUserConfig);\n}\n\n// 更新用户配置信息\nexport function serviceUpdateUserConfig(data: object) {\n  return http.put(api.getUserConfig, data, {\n    headers: { successAlert: true }\n  });\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 获取系统信息\nexport function serviceGetSystemInfo() {\n  return http.get(api.getSystemInfo);\n}\n\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 新增\nexport function serviceCreateReminder(data: object) {\n  return http.post(api.reminder, data, {\n    headers: { successAlert: true }\n  });\n}\n\n// 查询\nexport function serviceGetReminder(params?: object) {\n  return http.get(api.reminder, { params });\n}\n\n// 删除\nexport function serviceDeleteReminder(id: unknown) {\n  return http.delete(`${api.reminder}/${id}`, {\n    headers: { successAlert: true }\n  });\n}\n\n// 更新\nexport function serviceUpdateReminder(id: unknown, data: object) {\n  return http.put(`${api.reminder}/${id}`, data, {\n    headers: { successAlert: true }\n  });\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 创建\nexport function serviceCreateTask(data: object) {\n  return http.post(api.todayTask, data, {\n    headers: { successAlert: true }\n  });\n}\n\n// 查询\nexport function serviceGetTask(params?: object) {\n  return http.get(api.todayTask, {\n    params,\n    headers: { isLoading: true }\n  });\n}\n\n// 删除\nexport function serviceDeleteTask(id: unknown) {\n  return http.delete(`${api.todayTask}/${id}`);\n}\n\n// 更新\nexport function serviceUpdateTask(id: unknown, data?: object) {\n  return http.put(`${api.todayTask}/${id}`, data);\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 类型\nexport function serviceGetCapitalFlowType() {\n  return http.get(api.capitalFlowType, {\n    headers: { isLoading: true }\n  });\n}\n\nexport function serviceDeleteCapitalFlowType(id: string) {\n  return http.delete(`${api.capitalFlowType}/${id}`, {\n    headers: { successAlert: true }\n  });\n}\n\nexport function serviceUpdateCapitalFlowType(id: string, data: object) {\n  return http.put(`${api.capitalFlowType}/${id}`, data, {\n    headers: { successAlert: true }\n  });\n}\n\nexport function serviceCreateCapitalFlowType(data: object) {\n  return http.post(api.capitalFlowType, data, {\n    headers: { successAlert: true }\n  });\n}\n\n\n// 资金流动\nexport function serviceGetCapitalFlow(params?: object) {\n  return http.get(api.capitalFlow, { params });\n}\n\nexport function serviceDeleteCapitalFlow(id: string) {\n  return http.delete(`${api.capitalFlow}/${id}`, {\n    headers: { successAlert: true }\n  });\n}\n\nexport function serviceUpdateCapitalFlow(id: string, data: object) {\n  return http.put(`${api.capitalFlow}/${id}`, data, {\n    headers: { successAlert: true }\n  });\n}\n\nexport function serviceCreateCapitalFlow(data: object) {\n  return http.post(api.capitalFlow, data);\n}\n\nexport function serviceGetCapitalFlowPrice(params?: object) {\n  return http.get(api.getCapitalFlowPrice, { params });\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 新增\nexport function serviceCreateMemorandum(data: object) {\n  return http.post(api.memorandum, data, {\n    headers: { successAlert: true }\n  });\n}\n\n// 查询所有\nexport function serviceGetMemorandum(params?: object) {\n  return http.get(api.memorandum, {\n    params,\n    headers: { isLoading: true }\n  });\n}\n\n// 通过id查询\nexport function serviceGetMemorandumById(id: unknown) {\n  return http.get(`${api.memorandum}/${id}`, {\n    headers: { isLoading: true }\n  });\n}\n\n// 删除\nexport function serviceDeleteMemorandum(id: unknown) {\n  return http.delete(`${api.memorandum}/${id}`);\n}\n\n// 更新\nexport function serviceUpdateMemorandum(id: unknown, data: object) {\n  return http.put(`${api.memorandum}/${id}`, data, {\n    headers: { successAlert: true }\n  });\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 查询\nexport function serviceGetInnerMessage(params?: object) {\n  return http.get(api.innerMessage, {\n    params,\n    headers: {\n      errorAlert: false,\n      cancelRequest: false\n    }\n  });\n}\n\n// 标志已读\nexport function serviceUpdateInnerMessageHasRead(id: unknown) {\n  return http.put(`${api.innerMessage}/${id}`, null, {\n    headers: { successAlert: true }\n  });\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 创建\nexport function serviceCreateTodoList(data: object) {\n  return http.post(api.todoList, data);\n}\n\n// 查询\nexport function serviceGetTodoList(params?: object) {\n  return http.get(api.todoList, { params });\n}\n\n// 删除\nexport function serviceDeleteTodoList(id: unknown) {\n  return http.delete(`${api.todoList}/${id}`, {\n    headers: { successAlert: true }\n  });\n}\n\n// 更新\nexport function serviceUpdateTodoList(id: unknown, data?: object) {\n  return http.put(`${api.todoList}/${id}`, data);\n}\n","import http from '@/utils/http';\nimport api from '@/api';\n\n// 获取后台首页面板数据\nexport function serviceGetPanelData(params?: object) {\n  return http.get(api.getPanelData, { params });\n}\n\n\n","/**\n * @file User reducers\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\n\nimport { USER } from '../constants';\nimport { LOCAL_STORAGE } from '@/constants';\n\nconst { LOGIN } = USER;\n\nexport interface UserInfoProps {\n  provider: string;\n  uid: number | undefined;\n  username: string;\n  password: string;\n  loginName: string;\n  avatarUrl: string;\n  email: string;\n  role: string;\n  token: string | undefined;\n  bio: string;\n  location: string;\n  createdAt: string;\n}\n\nexport interface UserState {\n  isLogin: boolean;\n  isLockScreen: boolean;\n  userInfo: UserInfoProps;\n}\n\nconst initialState: UserState = {\n  isLogin: false,\n  isLockScreen: false,\n  userInfo: {\n    provider: '', // github ?\n    uid: undefined, // 用户ID\n    createdAt: '', // 注册时间\n    bio: '', // 简介\n    username: '', // 昵称\n    password: '', // 经过MD5加密后的密码\n    loginName: '', // 登录名\n    avatarUrl: '', // 头像\n    email: '',\n    role: '',\n    token: undefined, // 登录凭证\n    location: ''\n  }\n};\n\nfunction user(state = initialState, action: any): UserState {\n  switch (action.type) {\n    case LOGIN:\n      const userInfo = action.userInfo;\n      if (userInfo?.token) {\n        state.isLogin = true;\n        window.localStorage.setItem(LOCAL_STORAGE.USER, JSON.stringify(userInfo));\n        window.localStorage.setItem(LOCAL_STORAGE.LOGIN_NAME, userInfo.loginName);\n      }\n      return { ...state, userInfo: action.userInfo };\n    default:\n      return state;\n  }\n}\n\nexport default user;\n","/**\n * @file System reducers\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\nimport _ from 'lodash';\nimport { SYSTEM } from '../constants';\n\nconst { INFO } = SYSTEM;\n\nexport interface SystemState {\n  info: {\n    mysqlVersion: string;\n    currentSystemTime: number;\n    freemem: number;\n    totalmem: number;\n    platform: string;\n    type: string;\n    hostname: string;\n    arch: string;\n    nodeVersion: string;\n    cpus: any[];\n  }\n}\n\nconst initialState: SystemState = {\n  info: {\n    mysqlVersion: '',\n    currentSystemTime: Date.now(),\n    freemem: 0,\n    totalmem: 0,\n    platform: '',\n    type: '',\n    hostname: '',\n    arch: '',\n    nodeVersion: '',\n    cpus: []\n  }\n};\n\nfunction system(state = initialState, action: any): SystemState {\n  switch (action.type) {\n    case INFO:\n      if (_.isEmpty(action.data)) {\n        return state;\n      }\n      action.data.arch = action.data.arch.slice(1);\n      return {\n        ...state,\n        info: action.data\n      };\n    default:\n      return state;\n  }\n}\n\nexport default system;\n","/**\n * @file Reducers Entry\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\n\nimport user from './user';\nimport system from './system';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n  user,\n  system\n});\n","/**\n * @file Store main entry.\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport { UserState } from './reducers/user';\nimport { SystemState } from './reducers/system';\n\nexport interface StoreState {\n  user: UserState;\n  system: SystemState;\n}\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;\n","import React from 'react';\nimport { Avatar as AvatarComponent } from 'antd';\nimport { AvatarProps } from 'antd/lib/avatar';\n\nfunction handleError() {\n  return true;\n}\n\nconst Avatar: React.FC<AvatarProps> = props => {\n  return (\n    <AvatarComponent {...props} onError={handleError} />\n  )\n};\n\nexport default Avatar;\n","\nconst API = {\n  // 验证码\n  getCaptcha: '/api/captcha?code=',\n  // 账号密码登录\n  login: '/passport/local',\n  // 使用token登录\n  loginByToken: '/accessToken',\n  // 退出登录\n  logout: '/logout',\n  // 获取系统信息\n  getSystemInfo: '/system/info',\n  // 更新用户\n  updateUser: '/user/update',\n  // 获取用户配置\n  getUserConfig: '/userConfig',\n  // 提醒事项\n  reminder: '/reminder',\n  // 今日待办\n  todayTask: '/task',\n  // 资金流动类型\n  capitalFlowType: '/capitalFlowType',\n  // 资金流动\n  capitalFlow: '/capitalFlow',\n  // 获取资金流动金额\n  getCapitalFlowPrice: '/capitalFlow/price',\n  // 备忘录\n  memorandum: '/memorandum',\n  // 站内消息\n  innerMessage: '/innerMessage',\n  // 活动清单\n  todoList: '/todoList',\n  // 获取首页面板数据\n  getPanelData: '/panel'\n};\n\nexport default API;\n","module.exports = __webpack_public_path__ + \"static/media/no-data.ab7ce88c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b5b8d91e.png\";","import moment from 'moment';\n\ntype ns = number | string;\n\nexport const ONE_DAY_TIMESTAMP = 60 * 60 * 24 * 1000 - 1;\n\n// 获取当前月份总天数\nexport function getCurMonthTotalDay(): number {\n  return moment().daysInMonth();\n}\n\n// 获取当前月份的第一天日期\nexport function getCurMonthFirstDay(format: 'timestamp'): number;\nexport function getCurMonthFirstDay(format: string): string;\nexport function getCurMonthFirstDay(format: string = 'timestamp'): ns {\n  const cur = new Date();\n  cur.setDate(1);\n  cur.setHours(0, 0, 0);\n  return format === 'timestamp' ? cur.getTime() : moment(cur).format(format);\n}\n\n// 获取当前月份的最后一天日期\nexport function getCurMonthLastDay(format: 'timestamp'): number;\nexport function getCurMonthLastDay(format: string): string;\nexport function getCurMonthLastDay(format: string = 'timestamp'): ns {\n  const cur = new Date();\n  cur.setDate(getCurMonthTotalDay());\n  cur.setHours(23, 59, 59);\n  return format === 'timestamp' ? cur.getTime() : moment(cur).format(format);\n}\n\n// 判断传入时间戳是否小于今天时间戳\nexport function isLtTodayTimestamp (current: moment.Moment | null): boolean {\n  const todayTimestamp = new Date().setHours(0, 0, 0, 0);\n  if (current && current?.valueOf() > todayTimestamp) {\n    return false;\n  }\n  return true;\n}\n\n// 获取今天日期开始时间戳， 如：2019-07-05 00:00:00\nexport function getTodayStartTimestamp() {\n  return new Date().setHours(0, 0, 0, 0);\n}\n\n// 获取今天日期开始时间戳， 如：2019-07-05 23:59:59\nexport function getTodayEndTimestamp() {\n  return new Date().setHours(23, 59, 59);\n}\n\n// 根据日期获取开始时间戳\nexport function getStartTimestampByDate(date: any = Date.now()) {\n  return new Date(date).setHours(0, 0, 0, 0);\n}\n\n// 根据日期获取结束时间戳\nexport function getEndTimestampByDate(date: any = Date.now()) {\n  return new Date(date).setHours(23, 59, 59);\n}\n\n// 获取今天日期开始时间戳和结束时间戳\nexport function getTodayStartAndEndTimestamp(): [number, number] {\n  return [getTodayStartTimestamp(), getTodayEndTimestamp()];\n}\n\n// 判断是否是今天\nexport function isToday(date: any) {\n  try {\n    const parse = +new Date(date);\n    if (getTodayStartTimestamp() < parse && getTodayEndTimestamp() > parse) {\n      return true;\n    }\n  } catch {\n    return false;\n  }\n}\n\n// 获取今年第一天\nexport function getThisYearFirstDay() {\n  const now = new Date();\n  now.setMonth(0, 1);\n  now.setHours(0, 0, 0, 0);\n\n  return moment(now.getTime());\n}\n\n// 获取今年最后一天\nexport function getThisYearLastDay() {\n  return moment().endOf('year');\n}\n","\nconst spinHTML = '<div class=\"ant-spin ant-spin-spinning\"><span class=\"ant-spin-dot ant-spin-dot-spin\"><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i><i class=\"ant-spin-dot-item\"></i></span></div>';\nlet containerEl: HTMLElement;\n\nfunction start() {\n  try {\n    if (document.querySelector('.spin-loading')) {\n      return;\n    }\n\n    containerEl = containerEl || document.getElementById('container') as HTMLElement;\n    const spinEl = document.createElement('div');\n    spinEl.className = 'spin-loading';\n    spinEl.innerHTML = spinHTML;\n    containerEl.appendChild(spinEl);\n  } catch {}\n}\n\nfunction done() {\n  try {\n    const spin = document.querySelector('.spin-loading') as any;\n    if (!spin) return;\n    spin.parentNode.removeChild(spin);\n  } catch {}\n}\n\nexport const spin = { start, done };\n","\nconst isProduction = process.env.NODE_ENV === 'production';\nconst isDevelopment = !isProduction;\n\nconst CONFIG = {\n  isProduction,\n  isDevelopment,\n  // 路由 basename\n  baseURL: '/',\n  // 网页标题\n  title: 'Tomato Work',\n  http: {\n    baseURL: '/api'\n  },\n  github: {\n    clientId: isProduction ? '789d87c19dd5ed1dc42e' : '489b39e1f91d934128c8',\n    // callbackURL 不可随意更改, 否则需要与服务端配置文件一同修改\n    callbackURL: `${window.location.origin}/api/passport/github/callback`,\n    repositoryUrl: 'https://github.com/xjh22222228/tomato-work',\n    bug: 'https://github.com/xjh22222228/tomato-work/issues'\n  }\n};\n\nexport default CONFIG;\n","\nexport const LOCAL_STORAGE = {\n  USER: 'USER',\n  SIDEBAR_COLLAPSED: 'SIDEBAR_COLLAPSED',\n  LOGIN_NAME: 'LOGIN_NAME',\n  LOCK_SCREEN: 'LOCK_SCREEN'\n};\n","import React from 'react';\nimport { HOME, SETTING } from '@/router/constants';\nimport {\n  HomeOutlined,\n  ClockCircleOutlined,\n  FileDoneOutlined,\n  ScheduleOutlined,\n  BarChartOutlined,\n  FormOutlined,\n  UserOutlined\n} from '@ant-design/icons';\n\nexport const HOME_SIDER_MENU_LIST = [\n  {\n    path: HOME.HOME_INDEX.path,\n    icon: <HomeOutlined />,\n    name: HOME.HOME_INDEX.name\n  },\n  {\n    path: HOME.REMINDER.path,\n    icon: <ClockCircleOutlined />,\n    name: HOME.REMINDER.name\n  },\n  {\n    path: HOME.TODO_LIST.path,\n    icon: <FileDoneOutlined />,\n    name: HOME.TODO_LIST.name,\n  },\n  {\n    path: HOME.TODAY_TASK.path,\n    icon: <ScheduleOutlined />,\n    name: HOME.TODAY_TASK.name\n  },\n  {\n    path: '',\n    icon: <BarChartOutlined />,\n    name: '财务管理',\n    children: [\n      {\n        path: HOME.CAPITAL_FLOW.path,\n        name: HOME.CAPITAL_FLOW.name,\n      },\n      {\n        path: HOME.CAPITAL_FLOW_TYPE.path,\n        name: HOME.CAPITAL_FLOW_TYPE.name,\n      }\n    ]\n  },\n  {\n    path: HOME.MEMORANDUM.path,\n    icon: <FormOutlined />,\n    name: '我的备忘',\n    children: [\n      {\n        path: HOME.MEMORANDUM.path,\n        name: HOME.MEMORANDUM.name,\n      },\n      {\n        path: HOME.MEMORANDUM_CREATE.path[0],\n        name: HOME.MEMORANDUM_CREATE.name,\n      }\n    ]\n  },\n  {\n    path: SETTING.BASE.path,\n    icon: <UserOutlined />,\n    name: SETTING.BASE.name\n  }\n];\n\nexport const SETTING_SIDER_MENU_LIST = [\n  {\n    path: SETTING.BASE.path,\n    name: SETTING.BASE.name\n  },\n  {\n    path: SETTING.INNER_MESSAGE.path,\n    name: SETTING.INNER_MESSAGE.name\n  },\n  {\n    path: SETTING.NOTIFICATION.path,\n    name: SETTING.NOTIFICATION.name\n  },\n  {\n    path: SETTING.ACCOUNT.path,\n    name: SETTING.ACCOUNT.name\n  },\n];\n","import React from 'react';\nimport CONFIG from '@/config';\nimport qs from 'query-string';\nimport { Switch, Route, Redirect, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { IRouteProps } from '@/router/types';\nimport { connect } from 'react-redux';\nimport { StoreState } from '@/store/index';\nimport { HOME } from '@/router/constants';\n\ntype Props = IRouteProps & ReturnType<typeof mapStateToProps> & RouteComponentProps;\n\nconst PrivateRoute: React.FC<Props> = function ({\n  component: Component,\n  childrenRoutes,\n  isLogin,\n  location,\n  ...rest\n}) {\n\n  // 取消不是当前页面的所有http请求\n  if (Array.isArray(window.axiosCancelTokenStore)) {\n    window.axiosCancelTokenStore.forEach(store => {\n      if (store.pathname !== location.pathname) {\n        store.cancel();\n      }\n    });\n    window.axiosCancelTokenStore = [];\n  }\n\n  const { meta } = rest;\n  if (meta) {\n    if (meta.title) {\n      document.title = `${meta.title} - ${CONFIG.title}`;\n    } else {\n      document.title = CONFIG.title;\n    }\n  }\n\n  // 验证权限\n  const auth = function () {\n    if (meta?.requiresAuth) {\n      if (isLogin) {\n        return true;\n      }\n      return false;\n    }\n    return true;\n  }();\n\n  if (meta?.isLoginToHome && isLogin) {\n    const redirectUrl = qs.parse(location.search).redirectUrl as string;\n    const url = redirectUrl || HOME.HOME_INDEX.path;\n    return <Redirect to={url} />\n  }\n\n  return (\n    <Route render={props => {\n      return (\n        auth ? (\n          <Component {...props} {...rest}>\n            {Array.isArray(childrenRoutes) ? (\n              <Switch>\n                {childrenRoutes.map((route, idx: number) => (\n                  <PrivateRouteComponent {...route} key={idx} />\n                ))}\n              </Switch>\n            ) : null}\n          </Component>\n        ) : (\n          <Redirect to={{\n            pathname: '/',\n            search: `?redirectUrl=${props.location.pathname}`\n          }} />\n        )\n      )\n    }} />\n  )\n};\n\nconst mapStateToProps = (state: StoreState) => {\n  return {\n    isLogin: state.user.isLogin\n  }\n};\n\nexport const PrivateRouteComponent = connect(mapStateToProps)(withRouter(PrivateRoute));\n\nexport default PrivateRouteComponent;\n","import React from 'react';\nimport './style.scss';\nimport CONFIG from '@/config';\n\nconst currentYear = new Date().getFullYear();\n\nconst Footer = () => {\n  return (\n    <footer className=\"global-footer\">\n      <div>\n        Copyright &copy; 2019-{currentYear} {CONFIG.title} -\n        <a href=\"https://github.com/xjh22222228\" target=\"_blank\" rel=\"noopener noreferrer\"> xiejiahe</a>\n      </div>\n    </footer>\n  )\n};\n\nexport default Footer;\n","import React, {\n  useState,\n  useEffect,\n} from 'react';\nimport './style.scss';\nimport Footer from '@/components/footer';\nimport qs from 'query-string';\nimport md5 from 'blueimp-md5';\nimport _ from 'lodash';\nimport api from '@/api';\nimport config from '@/config';\nimport { Button, Input, message, Popover } from 'antd';\nimport { useFormInput } from '@/hooks';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { DispatchProp, connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { githubAuthz, loginByToken, setUser } from '@/store/actions';\nimport { serviceLogin } from '@/services';\nimport { HOME } from '@/router/constants';\nimport { LOCAL_STORAGE } from '@/constants';\nimport { randomCode } from '@/utils';\nimport {\n  PictureOutlined,\n  LockOutlined,\n  UserOutlined,\n  GithubOutlined\n} from '@ant-design/icons';\n\n\ntype ThunkDispatchProps = ThunkDispatch<{}, {}, AnyAction>;\ntype LoginProps = {\n  dispatch: ThunkDispatchProps;\n} & DispatchProp & RouteComponentProps;\n\nconst PopoverContent = (\n  <div style={{ padding: '10px 20px 10px 20px' }}>\n    <div>本站不开放注册账号，首次登陆请使用GitHub</div>\n    <div>登陆后系统将自动注册账号, 密码为123456</div>\n  </div>\n);\n\nlet captcha = randomCode();\nconst LOGIN_NAME = window.localStorage.getItem(LOCAL_STORAGE.LOGIN_NAME) || '';\n\n\nfunction reloadCaptcha(e: any) {\n  captcha = randomCode();\n  const url = api.getCaptcha + captcha;\n  e.target.src = url;\n}\n\nconst Login: React.FC<LoginProps> = function ({\n  dispatch,\n  history,\n  location\n}) {\n  const loginName = useFormInput(config.isDevelopment ? 'test' : LOGIN_NAME);\n  const password = useFormInput(config.isDevelopment ? '123456' : '');\n  const code = useFormInput('');\n  const [loading, setLoading] = useState(false);\n  const [redirectUrl] = useState(() => {\n    const url = qs.parse(location.search).redirectUrl as string;\n    return url || HOME.HOME_INDEX.path;\n  });\n\n  const handleSubmit = () => {\n    const _loginName = loginName.value.trim();\n    const _password = password.value.trim();\n    const _code = code.value.trim();\n\n    try {\n      if (!_loginName) throw new Error('用户名不能为空');\n      if (!_password) throw new Error('密码不能为空');\n      if (_code !== captcha) throw new Error('验证码错误');\n\n      setLoading(true);\n      serviceLogin({\n        loginName: _loginName,\n        password: md5(_password),\n        code: _code\n      })\n        .then(res => {\n          setLoading(false);\n          if (res.data.success) {\n            dispatch(setUser(res.data.data.userInfo));\n            history.replace(redirectUrl);\n          }\n        })\n        .catch(_ => {\n          setLoading(false);\n        });\n    } catch (err) {\n      message.warn(err.message);\n    }\n  };\n\n  const githubHandler = () => {\n    setLoading(true);\n    githubAuthz();\n  };\n\n  useEffect(() => {\n    const query = qs.parse(location.search);\n    const { token, state } = query;\n\n    if (Number(state) === 0) {\n      message.error('登录失败，请重新登录');\n      return;\n    }\n\n    if (token) {\n      dispatch(loginByToken(token as string))\n      .then((res) => {\n        if (!_.isEmpty(res.userInfo)) {\n          history.replace(redirectUrl);\n        }\n      });\n    }\n  }, [history, location.search, dispatch, redirectUrl]);\n\n  return (\n    <section className=\"login-page\">\n      <a href={config.github.repositoryUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        <svg width=\"56\" height=\"56\" viewBox=\"0 0 250 250\" className=\"svg-wrapper\" aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" className=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\"></path></svg>\n      </a>\n\n      <div className=\"wrap\">\n        <div>\n          <div className=\"logo-wrap\">\n            <img src={require('@/assets/img/common/logo.png')} className=\"logo\" alt=\"\" />\n            <em>{config.title}</em>\n          </div>\n          <Input.Group>\n            <Input\n              {...loginName}\n              placeholder=\"用户名\"\n              prefix={<UserOutlined />}\n              maxLength={32}\n              autoComplete=\"off\"\n              onPressEnter={handleSubmit}\n            />\n            <Input\n              {...password}\n              placeholder=\"密码\"\n              prefix={<LockOutlined />}\n              maxLength={32}\n              type=\"password\"\n              autoComplete=\"off\"\n              onPressEnter={handleSubmit}\n            />\n            <Input\n              {...code}\n              placeholder=\"请输入验证码\"\n              prefix={<PictureOutlined />}\n              maxLength={4}\n              autoComplete=\"off\"\n              onPressEnter={handleSubmit}\n              suffix={\n                <img\n                  src={`${api.getCaptcha}${captcha}`}\n                  className=\"captcha\"\n                  onClick={reloadCaptcha}\n                  alt=\"\"\n                />\n              }\n            />\n          </Input.Group>\n          <Button\n            type=\"primary\"\n            style={{ marginTop: '20px' }}\n            size=\"large\"\n            loading={loading}\n            block\n            onClick={handleSubmit}\n          >\n            {loading ? '登 录 中...' : '登 录'}\n          </Button>\n          <div className=\"register\">\n            <Popover\n              content={PopoverContent}\n              trigger=\"hover\"\n              placement=\"bottomRight\"\n            >\n              <span>注册账号</span>\n            </Popover>\n          </div>\n          <Button\n            style={{ marginTop: '20px' }}\n            size=\"large\"\n            loading={loading}\n            block\n            icon={<GithubOutlined />}\n            onClick={githubHandler}\n          >\n            使用 Github 登录\n          </Button>\n        </div>\n      </div>\n      <Footer />\n    </section>\n  )\n};\n\nexport default connect()(Login);\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport './style.scss';\nimport bytes from 'bytes';\nimport moment from 'moment';\nimport CONFIG from '@/config';\nimport useKeepState from 'use-keep-state';\nimport { Row, Col, Card, Progress, Empty } from 'antd';\nimport { totalPercentage } from '@/utils';\nimport { serviceGetInnerMessage } from '@/services';\n\ninterface Props {\n  systemInfo: {\n    [propName: string]: any;\n  }\n}\n\ninterface State {\n  curSystemTime: string;\n  messageList: any[];\n  loading: boolean;\n}\n\nconst initialState: State = {\n  curSystemTime: '',\n  messageList: [],\n  loading: true\n};\n\nconst statusColor = (percentage: number) => {\n  if (percentage < 40) return '#52c41a';\n  if (percentage < 80) return '#ffa500';\n  return '#f50';\n};\nlet timer: any;\n\nconst System: React.FC<Props> = ({ systemInfo }) => {\n  const [state, setState] = useKeepState(initialState);\n  const memPercentage = useMemo(() => {\n    return totalPercentage(systemInfo.totalmem, systemInfo.freemem);\n  }, [systemInfo.totalmem, systemInfo.freemem]);\n\n  // 倒计时\n  const countdown = useCallback(() => {\n    clearTimeout(timer);\n    const timeDiff = systemInfo.currentSystemTime + (Date.now() - systemInfo.currentSystemTime);\n    setState({ curSystemTime: moment(timeDiff).format('YYYY-MM-DD HH:mm:ss') });\n    timer = setTimeout(() => {\n      countdown();\n    }, 1000);\n  }, [systemInfo.currentSystemTime, setState]);\n\n  useEffect(() => {\n    countdown();\n\n    return () => {\n      clearTimeout(timer);\n    }\n  }, [countdown]);\n\n  useEffect(() => {\n    serviceGetInnerMessage({ pageSize: 5 })\n    .then(res => {\n      if (res.data.success) {\n        setState({ loading: false, messageList: res.data.data.rows });\n      }\n    });\n  }, [setState]);\n\n  return (\n    <Row gutter={{ xs: 8, sm: 16, md: 24}} className=\"system-data\">\n      <Col xl={8} lg={12} md={12} sm={24} xs={24}>\n        <Card\n          title=\"系统参数\"\n          hoverable\n          loading={!systemInfo.nodeVersion}\n        >\n          <p className=\"item-text\">\n            <em>系统类型：</em>\n            {systemInfo.platform}{systemInfo.arch}\n          </p>\n          <p className=\"item-text\">\n            <em>Node版本：</em>\n            {systemInfo.nodeVersion}\n          </p>\n          <p className=\"item-text\">\n            <em>MySQL版本：</em>\n            {systemInfo.mysqlVersion}\n          </p>\n          <p className=\"item-text\">\n            <em>当前环境：</em>\n            {CONFIG.isProduction ? '生产环境' : '开发环境'}\n          </p>\n          <p className=\"item-text\">\n            <em>系统时间：</em>\n            {state.curSystemTime}\n          </p>\n        </Card>\n      </Col>\n      <Col xl={8} lg={12} md={12} sm={24} xs={24}>\n        <Card\n          title=\"我的消息\"\n          hoverable\n          loading={state.loading}\n        >\n          {state.messageList.length > 0 ? (\n            state.messageList.map((msg: any) => (\n              <p className=\"item-text\" key={msg.id}>\n                <em>{msg.content}</em>\n              </p>\n            ))\n          ) : (\n            <Empty />\n          )}\n        </Card>\n      </Col>\n      <Col xl={8} lg={12} md={12} sm={24} xs={24}>\n        <Card\n          title={`内存使用率(${bytes(systemInfo.totalmem)})`}\n          hoverable\n          className=\"mem\"\n        >\n          <Progress\n            type=\"circle\"\n            percent={memPercentage}\n            strokeColor={statusColor(memPercentage)}\n            format={percent => percent + '%'}\n          />\n          <div className=\"surplus\">剩余{bytes(systemInfo.freemem)}</div>\n        </Card>\n      </Col>\n    </Row>\n  )\n};\n\nexport default React.memo(System);\n","// https://ui.toast.com/tui-editor/\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './style.scss';\nimport Editor from 'tui-editor';\nimport { Input, Button, message } from 'antd';\nimport { RouteComponentProps, match } from 'react-router-dom';\nimport { HOME } from '@/router/constants';\nimport { defaultTitle } from '../constants';\nimport {\n  serviceCreateMemorandum,\n  serviceGetMemorandumById,\n  serviceUpdateMemorandum\n} from '@/services';\n\ninterface Props {\n  computedMatch: match<any>\n}\n\nlet editor: Editor;\n\nconst Create: React.FC<Props & RouteComponentProps> = ({ history, computedMatch }) => {\n  const [title, setTitle] = useState(defaultTitle);\n  const [loading, setLoading] = useState(false);\n\n  const handleActionButton = useCallback((buttonType: 0 | 1) => {\n    if (buttonType === 0) {\n      history.replace(HOME.MEMORANDUM.path);\n      return;\n    }\n\n    const id = computedMatch.params.id;\n\n    if (loading) return;\n\n    // 创建或更新\n    const params = {\n      markdown: editor.getValue(),\n      title\n    };\n    if (!params.markdown) {\n      message.warn('实体内容不能为空');\n      return;\n    }\n\n    setLoading(true);\n\n    (id ? serviceUpdateMemorandum(id, params) : serviceCreateMemorandum(params))\n    .then(res => {\n      if (res.data.success) {\n        history.replace(HOME.MEMORANDUM.path);\n      }\n    });\n  }, [history, title, loading, computedMatch]);\n\n  const init = useCallback(() => {\n    const id = computedMatch.params.id;\n\n    editor = new Editor({\n      el: document.querySelector('#edit-section') as HTMLElement,\n      initialEditType: 'markdown',\n      previewStyle: 'vertical',\n      usageStatistics: false\n    });\n\n    if (id) {\n      serviceGetMemorandumById(id)\n      .then(res => {\n        if (res.data.success) {\n          setTitle(res.data.data.title);\n          editor.setValue(res.data.data.markdown);\n        }\n      });\n    }\n  }, [computedMatch]);\n\n  useEffect(() => {\n    init();\n\n    return () => {\n      // 销毁实例\n      editor?.remove();\n    };\n  }, [init]);\n\n  return (\n    <div className=\"editor-page\">\n      <Input\n        className=\"input-title\"\n        placeholder={defaultTitle}\n        maxLength={50}\n        size=\"large\"\n        value={title}\n        onChange={e => setTitle(e.target.value)}\n        onBlur={() => (!title && setTitle(defaultTitle))}\n      />\n      <div id=\"edit-section\"></div>\n      <div className=\"button-group\">\n        <Button onClick={handleActionButton.bind(null, 0)}>取消</Button>\n        <Button\n          type=\"primary\"\n          onClick={handleActionButton.bind(null, 1)}\n          loading={loading}\n        >\n          提交\n        </Button>\n      </div>\n    </div>\n  )\n};\n\nexport default Create;\n","\nexport enum TypeNames {\n  收入 = 1,\n  支出 = 2\n}\n\nexport enum TypeColors {\n  '#108ee9' = 1,\n  '#f50' = 2\n}\n\nexport const TYPES = [\n  { name: '收入', value: 1, symbol: '+', color: '#666' },\n  { name: '支出', value: 2, symbol: '-', color: '#f50' }\n];\n\nexport const OPTION_TYPES = [\n  { name: '全部', value: '' },\n  ...TYPES\n];\n","import React from 'react';\nimport './style.scss';\nimport { Result, Button } from 'antd';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { ExceptionStatusType } from 'antd/lib/result'\n\ninterface Props {\n  status?: ExceptionStatusType\n}\n\nconst statusMap = {\n  403: {\n    title: '403',\n    subTitle: 'Sorry, you are not authorized to access this page.',\n  },\n  404: {\n    title: '404',\n    subTitle: 'Sorry, the page you visited does not exist.',\n  },\n  500: {\n    title: '500',\n    subTitle: 'Sorry, the server is wrong.',\n  }\n};\n\nconst NoMatch: React.FC<Props & RouteComponentProps> = function ({ history, status = '404' }) {\n  return (\n    <Result\n      status={status}\n      extra={<Button type=\"primary\" onClick={history.goBack}>Back</Button>}\n      {...statusMap[status]}\n    />\n  );\n};\n\nexport default withRouter(NoMatch);\n","import React from 'react';\nimport './style.scss';\nimport Exception from '@/components/exception';\n\nconst NoMatch = () => <div className=\"exception-wrapper\"><Exception /></div>\n\nexport default NoMatch;\n","import React, { useEffect, useState } from 'react';\nimport './style.scss';\nimport config from '@/config';\nimport { Layout, Menu } from 'antd';\nimport { withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport { HomeMainState } from '@/views/home/main-entry/index';\nimport { HOME_SIDER_MENU_LIST } from '@/constants';\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\ntype Props = HomeMainState & RouteComponentProps;\n\nconst Sidebar: React.FC<Props> = function ({ location, collapsed }) {\n  const [selectedKeys, setSelectedKeys] = useState('');\n  const [openKeys, setOpenKeys] = useState<string[]>([]);\n\n  function handleOpenChange(openKeys: any) {\n    setOpenKeys(openKeys);\n  }\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    const fragment = pathname.split('/').slice(0, 3);\n    const prefixPath = fragment.join('/');\n    if (fragment.length === 3) {\n      for (let i = 0; i < HOME_SIDER_MENU_LIST.length; i++) {\n        const menu = HOME_SIDER_MENU_LIST[i];\n        if (Array.isArray(menu.children)) {\n          const findIdx = menu.children.findIndex(menu => pathname === menu.path);\n          if (findIdx !== -1) {\n            setSelectedKeys(menu.children[findIdx].path);\n            setOpenKeys([menu.name]);\n            break;\n          }\n        }\n        if (menu.path.indexOf(prefixPath) !== -1) {\n          setSelectedKeys(menu.path);\n          break;\n        }\n      }\n    }\n  }, [location.pathname]);\n\n  return (\n    <Sider\n      trigger={null}\n      collapsible\n      collapsed={collapsed}\n      width={190}\n      className=\"sidebar\"\n    >\n      <div className=\"sider-menu-logo\">{config.title}</div>\n      <Menu\n        selectedKeys={[selectedKeys]}\n        openKeys={openKeys}\n        onOpenChange={handleOpenChange}\n        mode=\"inline\"\n        theme=\"dark\"\n      >\n        {HOME_SIDER_MENU_LIST.map(menu => {\n          if (Array.isArray(menu.children)) {\n            return (\n              <SubMenu\n                key={menu.name}\n                title={\n                  <>\n                    {menu.icon}\n                    <span>{menu.name}</span>\n                  </>\n                }\n              >\n                {menu.children.map(subItem => (\n                  <Menu.Item key={subItem.path}>\n                    <Link to={subItem.path}>{subItem.name}</Link>\n                  </Menu.Item>\n                ))}\n              </SubMenu>\n            )\n          }\n\n          return (\n            <Menu.Item key={menu.path}>\n              <Link to={menu.path}>\n                {menu.icon}\n                <span>{menu.name}</span>\n              </Link>\n            </Menu.Item>\n          )\n        })}\n      </Menu>\n    </Sider>\n  )\n};\n\nexport default withRouter(Sidebar);\n","import React, { useEffect, useState, useMemo } from 'react';\nimport './style.scss';\nimport Avatar from '@/components/avatar';\nimport moment from 'moment';\nimport config from '@/config';\nimport { Layout, Badge, Popover, Empty } from 'antd';\nimport { withRouter, RouteComponentProps, Link } from 'react-router-dom';\nimport { HomeMainState } from '@/views/home/main-entry/index';\nimport { connect } from 'react-redux';\nimport { StoreState } from '@/store';\nimport { logout } from '@/store/actions/user';\nimport { SETTING } from '@/router/constants';\nimport { serviceGetInnerMessage } from '@/services';\nimport { fullscreen, exitFullscreen } from '@/utils';\nimport {\n  PoweroffOutlined,\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  BellFilled,\n  BugFilled,\n  GithubOutlined,\n  FullscreenExitOutlined,\n  FullscreenOutlined\n} from '@ant-design/icons'\n\nconst { Header } = Layout;\nconst popoverList = [\n  { name: SETTING.BASE.name, path: SETTING.BASE.path },\n  { name: SETTING.NOTIFICATION.name, path: SETTING.NOTIFICATION.path },\n  { name: SETTING.ACCOUNT.name, path: SETTING.ACCOUNT.path }\n];\n\ntype Props = ReturnType<typeof mapStateToProps> & HomeMainState & RouteComponentProps;\n\nconst PopoverContent = (\n  <div className=\"popover-content\">\n  {popoverList.map(el => (\n    <Link to={el.path} key={el.name} className=\"ls\">{el.name}</Link>\n  ))}\n    <div className=\"ls sign-out\" onClick={() => logout()}>\n      <PoweroffOutlined style={{ fontSize: '14px', marginRight: '5px' }} />\n      退出\n    </div>\n  </div>\n);\n\nconst HomeHeader: React.FC<Props> = function ({\n  collapsed,\n  setCollapsed,\n  userInfo\n}) {\n  const [messageList, setMessageList] = useState([]);\n  const [unReadCount, setUnReadCount] = useState(0);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    serviceGetInnerMessage({ pageSize: 5 })\n    .then(res => {\n      if (res.data.success) {\n        let count = 0;\n        const data = res.data.data.rows.map((item: any) => {\n          item.createdAt = moment(item.createdAt).format('YYYY-MM-DD HH:mm');\n          if (!item.hasRead) {\n            count++;\n          }\n          return item;\n        });\n        setUnReadCount(count);\n        setMessageList(data);\n      }\n    });\n  }, []);\n\n  const MessageContent = useMemo(() => (\n    <div className=\"message-popover\">\n      <div className=\"msg-header item-block\">\n        <span className=\"left\">站内消息通知</span>\n        <Link className=\"right\" to={SETTING.NOTIFICATION.path}>消息接收管理</Link>\n      </div>\n      {messageList.length > 0 ? (\n        <>\n          {messageList.map((item: any) => (\n          <div className=\"item-block ls\" key={item.id}>\n            <div className=\"content\">{item.content}</div>\n            <div className=\"date\">{item.createdAt}</div>\n          </div>\n        ))}\n        <Link className=\"item-block ls\" to={SETTING.INNER_MESSAGE.path}>查看更多</Link>\n        </>\n      ) : (\n        <Empty style={{ padding: '20px 0' }} />\n      )}\n    </div>\n  ), [messageList]);\n\n  function handleFullscreen() {\n    setIsFullscreen(isFullscreen => {\n      isFullscreen ? exitFullscreen() : fullscreen();\n      return !isFullscreen;\n    });\n  }\n\n  return (\n    <Header>\n      <div className=\"left\">\n        {collapsed ? (\n          <MenuUnfoldOutlined\n            onClick={setCollapsed}\n            style={{ cursor: 'pointer', fontSize: '20px' }}\n          />\n        ) : (\n          <MenuFoldOutlined\n            onClick={setCollapsed}\n            style={{ cursor: 'pointer', fontSize: '20px' }}\n          />\n        )}\n      </div>\n      <ul className=\"right\">\n        <Popover content={MessageContent}>\n          <li>\n            <Badge dot={unReadCount > 0}>\n              <BellFilled />\n            </Badge>\n          </li>\n        </Popover>\n        <li onClick={handleFullscreen}>\n          {isFullscreen ? <FullscreenOutlined /> : <FullscreenExitOutlined />}\n        </li>\n        <li>\n          <a href={config.github.bug} target=\"_blank\" rel=\"noopener noreferrer\">\n            <BugFilled />\n          </a>\n        </li>\n        <li>\n          <a href={config.github.repositoryUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            <GithubOutlined />\n          </a>\n        </li>\n        <Popover\n          placement=\"bottomRight\"\n          content={PopoverContent}\n        >\n        <li>\n          <Avatar src={userInfo.avatarUrl} />\n          <span className=\"username\">{userInfo.username}</span>\n        </li>\n        </Popover>\n      </ul>\n    </Header>\n  )\n};\n\nconst mapStateToProps = ({ user }: StoreState) => {\n  return { userInfo: user.userInfo }\n};\n\nexport default connect(mapStateToProps)(withRouter(HomeHeader));\n","import React, { useState } from 'react';\nimport './style.scss';\nimport Sidebar from '@/components/sidebar';\nimport Header from '@/components/header';\nimport { Layout } from 'antd';\nimport { connect } from 'react-redux';\nimport { StoreState } from '@/store';\nimport { LOCAL_STORAGE } from '@/constants';\n\nconst { Content } = Layout;\nconst { SIDEBAR_COLLAPSED } = LOCAL_STORAGE;\n\nexport interface HomeMainState {\n  collapsed?: boolean;\n  setCollapsed?: () => void;\n}\n\nconst storageCollapsed = Number(window.localStorage.getItem(SIDEBAR_COLLAPSED) || true);\n\nconst HomeMain: React.FC = function (props) {\n  const [collapsed, setCollapsed] = useState(!storageCollapsed);\n\n  function handleToggleCollapsed() {\n    setCollapsed(!collapsed);\n    window.localStorage.setItem(\n      SIDEBAR_COLLAPSED,\n      Number(collapsed) + ''\n    );\n  }\n\n  return (\n    <section className=\"home-main\">\n      <Layout>\n        <Sidebar {...{ collapsed }} />\n        <Layout className=\"home-layout\">\n          <Header {...{ collapsed, setCollapsed: handleToggleCollapsed }} />\n          <Content id=\"container\">\n            {React.Children.map(props.children, child => child)}\n          </Content>\n        </Layout>\n      </Layout>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({ user }: StoreState) => {\n  return { userInfo: user.userInfo };\n}\n\nexport default connect(mapStateToProps)(HomeMain);\n","import React, { useCallback, useEffect } from 'react';\nimport moment from 'moment';\nimport useKeepState from 'use-keep-state';\nimport {\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  message\n} from 'antd';\nimport { serviceCreateReminder, serviceUpdateReminder } from '@/services';\nimport { isLtTodayTimestamp } from '@/utils';\n\nconst { TextArea } = Input;\nconst dateFormat = 'YYYY-MM-DD HH:mm:ss';\nconst defaultDate = moment(new Date(), dateFormat);\n\ntype Props = {\n  visible: boolean;\n  onCancel: () => void;\n  onSuccess: (res?: any) => void;\n  rowData?: { [propName: string]: any; };\n};\n\ninterface State {\n  confirmLoading: boolean;\n  dateMode: 'time' | 'date' | 'month' | 'year' | 'decade';\n  date: moment.Moment;\n  content: string;\n}\n\nconst initialState: State = {\n  confirmLoading: false,\n  dateMode: 'date',\n  date: defaultDate,\n  content: ''\n};\n\nconst CreateReminder: React.FC<Props> = function ({ visible, onCancel, onSuccess, rowData }) {\n  const [state, setState] = useKeepState(initialState);\n\n  const initParams = useCallback(() => {\n    if (!rowData) {\n      setState({ content: '' });\n    } else {\n      setState({\n        date: moment(rowData.date, dateFormat),\n        content: rowData.content\n      });\n    }\n  }, [setState, rowData]);\n\n  const handleSubmit = useCallback((e: React.MouseEvent | React.FormEvent) => {\n    e.preventDefault();\n    const params = {\n      date: state.date.valueOf(),\n      content: state.content.trim()\n    };\n\n    try {\n      if (!params.content) throw new Error('内容不能为空');\n    } catch (err) {\n      message.warn(err.message);\n      return;\n    }\n\n    setState({ confirmLoading: true });\n\n    (\n      !rowData\n        ? serviceCreateReminder(params)\n        : serviceUpdateReminder(rowData.id, params)\n    )\n    .then(res => {\n      if (res.data.success) {\n        onSuccess(res);\n      }\n    })\n    .finally(() => {\n      setState({ confirmLoading: false });\n    });\n\n  }, [state, setState, onSuccess, rowData]);\n\n  useEffect(() => {\n    initParams();\n  }, [visible, initParams]);\n\n  return (\n    <Modal\n      title=\"新增\"\n      visible={visible}\n      onOk={handleSubmit}\n      onCancel={onCancel}\n      confirmLoading={state.confirmLoading}\n    >\n      <Form >\n        <Form.Item label=\"提醒时间\">\n          <DatePicker\n            mode={state.dateMode}\n            showTime\n            allowClear={false}\n            value={state.date}\n            onPanelChange={(value, dateMode) => setState({ dateMode })}\n            onChange={date => setState({ date }) }\n            disabledDate={isLtTodayTimestamp}\n            style={{ width: '100%' }}\n          />\n        </Form.Item>\n        <Form.Item label=\"提醒内容\">\n          <TextArea\n            rows={3}\n            value={state.content}\n            onChange={e => setState({ content: e.target.value })}\n            maxLength={200}\n            placeholder=\"请输入内容\"\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nexport default React.memo(CreateReminder);\n","import React, { useEffect, useCallback, useRef } from 'react';\nimport Table from '@/components/table';\nimport moment from 'moment';\nimport CreateReminder from './components/create-reminder';\nimport useKeepState from 'use-keep-state';\nimport { connect } from 'react-redux';\nimport { DatePicker, Button, Select, Tag, Modal } from 'antd';\nimport { serviceGetReminder, serviceDeleteReminder } from '@/services';\nimport {\n  getThisYearLastDay,\n  modalConfirmDelete,\n  getThisYearFirstDay\n} from '@/utils';\n\nconst { RangePicker } = DatePicker;\nconst Option = Select.Option;\nconst dateFormat = 'YYYY-MM-DD';\nconst STATUS_TYPE: any = {\n  1: { color: '#f50', text: '待提醒' },\n  2: { color: '#87d068', text: '已提醒' }\n};\n\ninterface State {\n  date: moment.Moment[];\n  queryType: string;\n  modalVisible: boolean;\n  currentRow: { [propName: string]: any } | null;\n}\n\ntype Props = ReturnType<typeof mapStateToProps>;\n\nconst initialState: State = {\n  date: [],\n  queryType: '',\n  modalVisible: false,\n  currentRow: null\n};\n\nconst Reminder: React.FC<Props> = function({ userInfo }) {\n  const [state, setState] = useKeepState(initialState);\n  const tableRef = useRef<any>();\n  const tableColumns = [\n    { title: '状态', dataIndex: 'type', width: 100,\n      render: (row: any) => (\n        <Tag color={STATUS_TYPE[row].color}>{STATUS_TYPE[row].text}</Tag>\n      )\n    },\n    { title: '提醒时间', dataIndex: 'date', width: 220 },\n    { title: '提醒内容', dataIndex: 'content', className: 'word-break_break-all white-space_pre' },\n    { title: '操作', width: 180, align: 'right',\n      render: (row: any) => (\n        <>\n          <Button onClick={handleButton.bind(null, 0, row)}>编辑</Button>\n          <Button onClick={handleButton.bind(null, 1, row)}>删除</Button>\n        </>\n      )\n    }\n  ];\n\n  const initParams = function() {\n    const startDate = moment(getThisYearFirstDay(), dateFormat);\n    const endDate = moment(getThisYearLastDay(), dateFormat);\n    setState({\n      queryType: '',\n      date: [startDate, endDate]\n    });\n  };\n\n  function getReminder(params: any = {}) {\n    params.startDate = state.date[0].valueOf();\n    params.endDate = state.date[1].valueOf();\n\n    if (state.queryType !== '') {\n      params.type = state.queryType;\n    }\n\n    return serviceGetReminder(params).then(res => {\n      if (res.data.success) {\n        res.data.data.rows = res.data.data.rows.map((el: any, idx: number) => {\n          el.order = idx + 1;\n          el.date = moment(el.date).format('YYYY-MM-DD HH:mm:ss');\n          return el;\n        });\n      }\n      return res;\n    });\n  }\n\n  const handleButton = useCallback((type: number, rows: any) => {\n    // 编辑\n    if (type === 0) {\n      setState({ modalVisible: true, currentRow: rows });\n    } else {\n      modalConfirmDelete()\n      .then(() => {\n        serviceDeleteReminder(rows.id)\n        .then(res => {\n          if (res.data.success) {\n            tableRef.current.getTableData();\n          }\n        });\n      });\n    }\n  }, [setState]);\n\n  // modal成功新增回调函数\n  const handleModalOnSuccess = useCallback(() => {\n    setState({ modalVisible: false });\n    tableRef.current.getTableData();\n  }, [setState]);\n\n  useEffect(() => {\n    initParams();\n\n    if (!userInfo.email) {\n      Modal.warning({\n        title: '未检测到您的邮箱',\n        content: (\n          <>\n            请将您的GitHub邮箱设为公开，否则影响本功能的使用，\n            <a\n              href=\"https://github.com/settings/profile\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              前往设置\n            </a>\n          </>\n        ),\n      });\n    }\n  }, [userInfo.email]);\n\n  useEffect(() => {\n    if (state.date.length <= 0) return;\n    tableRef?.current?.getTableData();\n  }, [state.date, state.queryType]);\n\n  return (\n    <div className=\"reminder\">\n      <div className=\"query-panel\">\n        <span>查询类型：</span>\n        <Select\n          onChange={(value: string) => setState({ queryType: value })}\n          value={state.queryType}\n        >\n          <Option value=\"\">全部</Option>\n          <Option value=\"1\">待提醒</Option>\n          <Option value=\"2\">已提醒</Option>\n        </Select>\n        <span>日期：</span>\n        <RangePicker\n          format={dateFormat}\n          allowClear\n          value={state.date}\n          onChange={(date: any) => setState({ date })}\n        />\n        <Button type=\"primary\" onClick={() => tableRef.current.getTableData()}>查询</Button>\n        <Button onClick={initParams}>重置</Button>\n      </div>\n      <Table\n        ref={tableRef}\n        getTableData={getReminder}\n        columns={tableColumns}\n        onDelete={serviceDeleteReminder}\n        onAdd={() => setState({ modalVisible: true, currentRow: null })}\n      />\n      <CreateReminder\n        visible={state.modalVisible}\n        rowData={state.currentRow}\n        onCancel={() => setState({ modalVisible: false })}\n        onSuccess={handleModalOnSuccess}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (store: any) => ({\n  userInfo: store.user.userInfo\n});\n\nexport default connect(mapStateToProps)(Reminder);\n","import React, { Suspense, useEffect, useState } from 'react';\nimport './style.scss';\nimport PrivateRoute from '@/components/private-route/index';\nimport { Layout, Menu } from 'antd';\nimport { Switch, Link, RouteComponentProps } from 'react-router-dom';\nimport { SETTING_SIDER_MENU_LIST } from '@/constants';\nimport { settingRoutes } from '@/router/routes';\n\nconst { Content, Sider } = Layout;\n\nconst SettingIndex: React.FC<RouteComponentProps> = function ({ location }) {\n  const [selectedKeys, setSelectedKeys] = useState('');\n\n  useEffect(() => {\n    for (let i = 0; i < SETTING_SIDER_MENU_LIST.length; i++) {\n      if (SETTING_SIDER_MENU_LIST[i].path === location.pathname) {\n        setSelectedKeys(SETTING_SIDER_MENU_LIST[i].path);\n        break;\n      }\n    }\n  }, [location.pathname])\n\n  return (\n    <Layout className=\"setting-page\">\n      <Sider width={170}>\n        <Menu\n          mode=\"inline\"\n          selectedKeys={[selectedKeys]}\n          style={{ height: '100%' }}\n        >\n          {SETTING_SIDER_MENU_LIST.map(menu => (\n            <Menu.Item key={menu.path}>\n              <Link to={menu.path}>{menu.name}</Link>\n            </Menu.Item>\n          ))}\n        </Menu>\n      </Sider>\n      <Content style={{ padding: '0 50px 0 30px' }}>\n        <Suspense fallback={null}>\n          <Switch>\n            {settingRoutes.map((route, idx) => (\n              <PrivateRoute {...route} key={idx} />\n            ))}\n          </Switch>\n        </Suspense>\n      </Content>\n    </Layout>\n  )\n};\n\nexport default SettingIndex;\n","import React, { useState, useEffect, useRef } from 'react';\nimport './style.scss';\nimport { Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { serviceGetPanelData } from '@/services';\nimport { HOME } from '@/router/constants';\nimport {\n  PropertySafetyFilled,\n  ScheduleFilled,\n  FileTextFilled,\n  AlertFilled\n} from '@ant-design/icons';\n\nconst PanelGroup = () => {\n  const isInit = useRef<boolean>(false);\n  const [state, setState] = useState([\n    {\n      title: '今日支出',\n      total: 0,\n      Icon: <PropertySafetyFilled className=\"icon\" />,\n      suffix: '￥',\n      path: HOME.CAPITAL_FLOW.path\n    },\n    {\n      title: '今日待办', total: 0,\n      Icon: <ScheduleFilled className=\"icon\" />,\n      path: HOME.TODAY_TASK.path\n    },\n    {\n      title: '活动清单',\n      total: 0,\n      Icon: <FileTextFilled className=\"icon\" />,\n      path: HOME.TODO_LIST.path\n    },\n    {\n      title: '提醒事项',\n      total: 0,\n      Icon: <AlertFilled className=\"icon\" />,\n      path: HOME.REMINDER.path\n    },\n  ]);\n\n  useEffect(() => {\n    if (isInit.current) return;\n\n    isInit.current = true;\n\n    serviceGetPanelData()\n    .then(res => {\n      if (res.data.success) {\n        const data = state.slice();\n        data[0].total = res.data.data.consumption;\n        data[1].total = res.data.data.todayTaskCount;\n        data[2].total = res.data.data.unfinishedTodoListCount;\n        data[3].total = res.data.data.reminderCount;\n        setState(data)\n      }\n    });\n  }, [state]);\n\n  return (\n    <Row gutter={{ xs: 8, sm: 16, md: 24}} className=\"panel-group\">\n      {state.map(item => (\n        <Col xl={6} lg={12} md={12} sm={24} xs={24} key={item.title}>\n          <Link to={item.path} className=\"block-item\">\n            {item.Icon}\n            <div className=\"data\">\n              <Statistic title={item.title} value={item.total} suffix={item.suffix} />\n            </div>\n          </Link>\n        </Col>\n      ))}\n    </Row>\n  )\n};\n\nexport default React.memo(PanelGroup);\n","import React, { useEffect, useState } from 'react';\nimport './style.scss';\nimport { Empty } from 'antd';\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Legend,\n} from 'bizcharts';\nimport { serviceGetCapitalFlowPrice } from '@/services';\n\nconst cols = {\n  date: {\n    range: [0, 1]\n  }\n};\n\nconst MoneyAccessChart = () => {\n  const [data, setData] = useState([]);\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  useEffect(() => {\n    serviceGetCapitalFlowPrice()\n    .then(res => {\n      if (res.data.success) {\n        let price = 0;\n        const data = res.data.data.map((item: any) => {\n          item.date = item.date.slice(5);\n          item.price = Number(item.price);\n          price += item.price;\n          return item;\n        });\n\n        setData(data);\n        setTotalPrice(price);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"money-access\">\n      <h2 className=\"title\">过去7天资金流动</h2>\n      {(totalPrice > 0) ? (\n        <Chart height={400} data={data} scale={cols} forceFit>\n          <Legend />\n          <Axis\n            name=\"price\"\n            label={{ formatter: (val: string) => `${parseInt(val)}￥` }}\n          />\n          <Tooltip crosshairs={{ type: 'y' }} />\n          <Geom\n            type=\"line\"\n            position=\"date*price\"\n            size={2}\n            color=\"name\"\n            shape=\"smooth\"\n          />\n          <Geom\n            type=\"point\"\n            position=\"date*price\"\n            size={4}\n            shape=\"circle\"\n            color=\"name\"\n            style={{ stroke: '#fff', lineWidth: 1 }}\n          />\n        </Chart>\n      ) : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n    </div>\n  )\n};\n\nexport default React.memo(MoneyAccessChart);\n","import React, { useEffect } from 'react';\nimport PenelGroup from './components/penel-group';\nimport SystemInfo from './components/system-info';\nimport MoneyAccessChart from './components/money-access-chart';\nimport { DispatchProp, connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { getSystemInfo } from '@/store/actions';\nimport { StoreState } from '@/store';\n\nconst mapStateToProps = ({ system }: StoreState) => ({ system });\n\ntype ThunkDispatchProps = ThunkDispatch<{}, {}, AnyAction>;\ntype Props = DispatchProp & ReturnType<typeof mapStateToProps> & { dispatch: ThunkDispatchProps };\n\nconst HomeIndex: React.FC<Props> = function ({ system, dispatch: propDispatch }) {\n\n  useEffect(() => {\n    propDispatch(getSystemInfo());\n  }, [propDispatch]);\n\n  return (\n    <div className=\"home-index overflow-y_auto\">\n      <PenelGroup />\n      <SystemInfo systemInfo={system.info} />\n      <MoneyAccessChart />\n    </div>\n  )\n};\n\nexport default connect(mapStateToProps)(HomeIndex);\n","import React from 'react';\nimport { Button, Result } from 'antd';\nimport NoDataSvg from '@/assets/img/common/no-data.svg';\n\ninterface Props {\n  onClick(e: React.MouseEvent): void;\n  message?: string;\n}\n\nconst NoData: React.FC<Props> = ({ onClick, message = '暂无数据' }) => {\n  return (\n    <Result\n      className=\"no-data\"\n      icon={<img src={NoDataSvg} className=\"user-drag_none\" alt=\"no-data\" />}\n      title={message}\n      extra={<Button type=\"primary\" onClick={onClick}>现在创建</Button>}\n      status={'info'}\n      style={{ marginTop: '50px' }}\n    />\n  )\n};\n\nexport default React.memo(NoData);\n","import React, { useCallback } from 'react';\nimport './style.scss';\nimport moment from 'moment';\nimport { modalConfirmDelete } from '@/utils';\nimport { serviceDeleteTask, serviceUpdateTask } from '@/services';\nimport {\n  Card,\n  Button,\n  Rate\n} from 'antd';\n\ninterface Props {\n  data: { [key: string]: any },\n  reloadData(): void;\n}\n\nconst TaskItem: React.FC<Props> = ({ data, reloadData }) => {\n\n  // 0=删除, 1=开始/完成, 2=回退\n  const handleAction = useCallback(buttonType => {\n    if (buttonType === 0) {\n      modalConfirmDelete()\n      .then(() => {\n        serviceDeleteTask(data.id)\n        .then(res => {\n          if (res.data.success) {\n            reloadData();\n          }\n        });\n      });\n    } else {\n      serviceUpdateTask(data.id, {\n        rollback: buttonType === 2 && true\n      })\n      .then(res => {\n        if (res.data.success) {\n          reloadData();\n        }\n      });\n    }\n  }, [data, reloadData])\n\n  return (\n    <Card\n      title=\"我的待办\"\n      hoverable\n      className=\"task-component\"\n    >\n      <p className=\"content\">{data.content}</p>\n      <div className=\"level\">\n        <span>优先级别：</span>\n        <Rate value={data.count} disabled></Rate>\n        <p>创建时间: {moment(data.createdAt).format('HH:mm:ss')}</p>\n      </div>\n      <div className=\"button-wrapper\">\n        <Button\n          type=\"primary\"\n          danger\n          size=\"small\"\n          onClick={handleAction.bind(null, 0)}\n        >\n          删除\n        </Button>\n        {(data.type === 1) && (\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={handleAction.bind(null, 1)}\n          >\n            开始\n          </Button>\n        )}\n        {([2, 3].includes(data.type)) && (\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={handleAction.bind(null, 2)}\n          >\n            回退\n          </Button>\n        )}\n        {(data.type === 2) && (\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={handleAction.bind(null, 1)}\n          >\n            完成\n          </Button>\n        )}\n      </div>\n    </Card>\n  )\n};\n\nexport default React.memo(TaskItem);\n","import React, { useCallback } from 'react';\nimport moment from 'moment';\nimport useKeepState from 'use-keep-state';\nimport { isLtTodayTimestamp } from '@/utils';\nimport { serviceCreateTask } from '@/services';\nimport {\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  message,\n  Rate\n} from 'antd';\n\ntype Props = {\n  visible: boolean;\n  data?: object;\n  setParentState(state: any): void;\n  onSuccess: (res?: any) => void;\n};\n\nconst dateFormat = 'YYYY-MM-DD';\nconst { TextArea } = Input;\nconst initialState = {\n  confirmLoading: false,\n  content: '',\n  date: moment(new Date(), dateFormat),\n  count: 5\n};\n\nconst CreateTask: React.FC<Props> = function ({ visible, onSuccess, setParentState }) {\n  const [state, setState] = useKeepState(initialState);\n\n  const handleSubmitForm = useCallback(() => {\n    const params = {\n      date: state.date.valueOf(),\n      content: state.content.trim(),\n      count: state.count\n    };\n\n    if (!params.content) {\n      message.warn('内容不能为空');\n      return;\n    }\n\n    serviceCreateTask(params)\n      .then(res => {\n        if (res.data.success) {\n          onSuccess();\n        }\n      });\n  }, [state, onSuccess]);\n\n  return (\n    <Modal\n      title=\"新增\"\n      visible={visible}\n      onOk={handleSubmitForm}\n      onCancel={() => setParentState({ showCreateTaskModal: false })}\n      confirmLoading={state.confirmLoading}\n    >\n      <Form>\n        <Form.Item label=\"开始日期\">\n          <DatePicker\n            allowClear={false}\n            value={state.date}\n            onChange={date => setState({ date }) }\n            disabledDate={isLtTodayTimestamp}\n            style={{ width: '100%' }}\n          />\n        </Form.Item>\n        <Form.Item label=\"任务内容\">\n          <TextArea\n            rows={3}\n            value={state.content}\n            onChange={e => setState({ content: e.target.value })}\n            maxLength={200}\n            placeholder=\"请输入内容\"\n          />\n        </Form.Item>\n        <Form.Item label=\"优先级别\">\n          <Rate value={state.count} onChange={count => setState({ count })} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nexport default React.memo(CreateTask);\n","import React, { useCallback, useEffect } from 'react';\nimport './style.scss';\nimport useKeepState from 'use-keep-state';\nimport NoData from '@/components/no-data/index';\nimport TaskItem from './components/task-item';\nimport CreateTask from './components/create-task';\nimport moment from 'moment';\nimport { DatePicker, Button, Tag, Row, Col } from 'antd';\nimport { getStartTimestampByDate, getEndTimestampByDate } from '@/utils';\nimport { serviceGetTask } from '@/services';\n\nconst dateFormat = 'YYYY-MM-DD';\nconst datePickerValue = moment(new Date(getStartTimestampByDate()), dateFormat);\nconst TASK_TYPE: any = {\n  wait: { text: '待作业', color: 'orange' },\n  process: { text: '作业中', color: '#108ee9' },\n  finished: { text: '已完成', color: '#87d068' },\n  unfinished: { text: '未完成', color: '#f50' }\n};\n\ninterface State {\n  startDate: moment.Moment;\n  data: {\n    wait: any[];\n    process: any[];\n    finished: any[];\n    unfinished: any[];\n  };\n  showCreateTaskModal: boolean;\n}\n\nconst initialState: State = {\n  startDate: datePickerValue,\n  data: { wait: [], process: [], finished: [], unfinished: [] },\n  showCreateTaskModal: false\n};\n\nconst TodayTask = () => {\n  const [state, setState] = useKeepState(initialState);\n\n  const getTask = useCallback(() => {\n    const date = state.startDate.valueOf();\n    serviceGetTask({\n      startDate: getStartTimestampByDate(date),\n      endDate: getEndTimestampByDate(date)\n    })\n    .then(res => {\n      if (res.data.success) {\n        setState({ data: res.data.data });\n      }\n    });\n  }, [setState, state.startDate]);\n\n  const initParams = useCallback(() => {\n    setState({ startDate: datePickerValue });\n    getTask();\n  }, [setState, getTask]);\n\n  const handleOnSuccess = useCallback(() => {\n    setState({ showCreateTaskModal: false });\n    getTask();\n  }, [setState, getTask]);\n\n  useEffect(() => {\n    getTask();\n  }, [getTask]);\n\n  return (\n    <div className=\"today-task\">\n      <div className=\"query-panel\">\n        <span>查询日期：</span>\n        <DatePicker\n          format={dateFormat}\n          allowClear\n          value={state.startDate}\n          onChange={date => setState({ startDate: date })}\n        />\n        <Button type=\"primary\" onClick={getTask}>查询</Button>\n        <Button onClick={() => setState({ showCreateTaskModal: true })}>新增</Button>\n        <Button onClick={initParams}>重置</Button>\n      </div>\n      <div className=\"wrapper\">\n        {(\n          state.data.wait.length > 0 ||\n          state.data.process.length > 0 ||\n          state.data.finished.length > 0 ||\n          state.data.unfinished.length > 0\n        ) ? (\n          <Row gutter={24}>\n            {Object.keys(state.data).map((key: string) => (\n              <Col span={6} key={key}>\n                <div className=\"text-align_center\">\n                  <Tag color={TASK_TYPE[key].color}>{TASK_TYPE[key].text}</Tag>\n                </div>\n                {state.data[key].map((item: any) => (\n                  <TaskItem key={item.id} data={item} reloadData={getTask} />\n                ))}\n              </Col>\n            ))}\n          </Row>\n        ) : (\n          <NoData\n            message=\"还没有待办事项，是否马上创建？\"\n            onClick={() => setState({ showCreateTaskModal: true })}\n          />\n        )}\n      </div>\n      <CreateTask\n        visible={state.showCreateTaskModal}\n        onSuccess={handleOnSuccess}\n        setParentState={setState}\n      />\n    </div>\n  );\n};\n\nexport default TodayTask;\n","import React, { FC, useState, useEffect, useCallback } from 'react';\nimport './style.scss';\nimport moment from 'moment';\nimport NoData from '@/components/no-data/index';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Card, Col, Row, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { serviceGetMemorandum, serviceDeleteMemorandum } from '@/services';\nimport { defaultTitle } from '../constants';\nimport { modalConfirmDelete } from '@/utils';\n\nconst Memorandum: FC<RouteComponentProps> = ({ history }) => {\n  const [list, setList] = useState([]);\n\n  const handleButton = useCallback((\n    buttonType: 0 | 1 | 2,\n    item: any,\n    e: React.MouseEvent\n  ) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (buttonType === 0) {\n      modalConfirmDelete()\n      .then(() => {\n        serviceDeleteMemorandum(item.id)\n        .then(res => {\n          if (res.data.success) {\n            const index = list.findIndex((el: any) => el.title === item.title);\n            if (index !== -1) {\n              const copyList = [...list];\n              copyList.splice(index, 1);\n              setList(copyList);\n            }\n          }\n        });\n      });\n      return;\n    }\n\n    if (buttonType === 2) {\n      history.push('/home/memorandum/create');\n      return;\n    }\n\n    history.push(`/home/memorandum/update/${item.id}`);\n  }, [history, list]);\n\n  useEffect(() => {\n    serviceGetMemorandum()\n    .then(res => {\n      if (res.data.success) {\n        const data = res.data.data.map((item: any) => {\n          item.createdAt = moment(item.createdAt).format('YYYY/M/D HH:mm');\n          item.title = item.title || defaultTitle;\n          return item;\n        });\n        setList(data);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"memorandum\">\n      {(list.length > 0) ? (\n        <Row gutter={16} align=\"bottom\">\n          {list.map((item: any) => (\n            <Col span={8} key={item.id}>\n              <Link to={`/home/memorandum/detail/${item.id}`}>\n                <Card title={item.title} hoverable>\n                  {item.createdAt}\n                  <div\n                    className=\"content\"\n                    dangerouslySetInnerHTML={{ __html: item.html }}\n                  >\n                  </div>\n                  <div className=\"button-group\">\n                    <Button size=\"small\" onClick={handleButton.bind(null, 0, item)}>删除</Button>\n                    <Button size=\"small\" onClick={handleButton.bind(null, 1, item)}>编辑</Button>\n                  </div>\n                </Card>\n              </Link>\n            </Col>\n          ))}\n        </Row>\n      ) : (\n        <NoData\n          message=\"还没有备忘录，是否马上创建？\"\n          onClick={handleButton.bind(null, 2, null)}\n        />\n      )}\n    </div>\n  )\n};\n\nexport default Memorandum;\n","\nexport const defaultTitle = '无标题';\n","import React, { FC, useEffect, useState } from 'react';\nimport './style.scss';\nimport { match, Link, RouteComponentProps } from 'react-router-dom';\nimport { serviceGetMemorandumById } from '@/services';\nimport { defaultTitle } from '../constants';\nimport { LeftOutlined, EditOutlined } from '@ant-design/icons';\n\ninterface Props {\n  computedMatch: match<any>\n}\n\nconst Detail: FC<Props & RouteComponentProps> = ({ computedMatch, history }) => {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const id = computedMatch.params.id;\n\n  const goBack = function () {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    serviceGetMemorandumById(id)\n    .then(res => {\n      if (res.data.success) {\n        const title = res.data.data.title || defaultTitle;\n        document.title = title;\n        setTitle(title);\n        setContent(res.data.data.html);\n      }\n    });\n  }, [id]);\n\n  return (\n    <div className=\"memorandum-detail\">\n      <div className=\"tool-bar\">\n        <LeftOutlined className=\"icon-left\" onClick={goBack} />\n        <Link className=\"edit\" to={`/home/memorandum/update/${id}`}>\n          <EditOutlined title=\"编辑\" />\n        </Link>\n      </div>\n      <h1 className=\"title\">{ title }</h1>\n      <div\n        className=\"markdown-body tui-editor-contents\"\n        dangerouslySetInnerHTML={{ __html: content }}\n      >\n      </div>\n    </div>\n  )\n};\n\nexport default Detail;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport moment from 'moment';\nimport {\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  message,\n  Select\n} from 'antd';\nimport { serviceCreateCapitalFlow, serviceUpdateCapitalFlow } from '@/services';\nimport useKeepState from 'use-keep-state';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst dateFormat = 'YYYY-MM-DD HH:mm:ss';\nconst defaultDate = moment(new Date(), dateFormat);\n\ntype Props = {\n  visible: boolean;\n  onCancel: () => void;\n  onSuccess: (res?: any) => void;\n  rowData?: { [propName: string]: any; };\n  nameList: any[];\n};\n\ninterface State {\n  confirmLoading: boolean;\n  dateMode: 'time' | 'date' | 'month' | 'year' | 'decade';\n  date: moment.Moment;\n  remarks: string;\n  typeId: string;\n  price: string | number;\n}\n\nconst initialState: State = {\n  confirmLoading: false,\n  dateMode: 'date',\n  date: defaultDate,\n  remarks: '',\n  typeId: '',\n  price: ''\n};\n\nconst CreateReminder: React.FC<Props> = function ({\n  visible,\n  onCancel,\n  onSuccess,\n  rowData,\n  nameList\n}) {\n  const [state, setState] = useKeepState(initialState);\n  const initRef = useRef(false);\n\n  const initParams = useCallback(() => {\n    const params: any = {\n      remarks: '',\n      typeId: state.typeId || (nameList.length && nameList[0].id),\n      price: ''\n    };\n\n    if (rowData) {\n      params.date = moment(rowData.date, dateFormat);\n      params.remarks = rowData.remarks;\n      params.typeId = rowData.typeId;\n      params.price = rowData.price;\n    }\n    setState(params);\n  }, [setState, rowData, state.typeId, nameList]);\n\n  const handleSubmit = useCallback((e: React.MouseEvent | React.FormEvent) => {\n    e.preventDefault();\n    const params = {\n      date: state.date.valueOf(),\n      remarks: state.remarks.trim(),\n      typeId: state.typeId,\n      price: Number(state.price)\n    };\n\n    try {\n      if (!params.price || isNaN(params.price)) throw new Error('金额必须为数字');\n      if (!params.typeId) throw new Error('请选择名称');\n    } catch (err) {\n      message.warn(err.message);\n      return;\n    }\n\n    setState({ confirmLoading: true });\n\n    (\n      !rowData\n        ? serviceCreateCapitalFlow(params)\n        : serviceUpdateCapitalFlow(rowData.id, params)\n    )\n    .then(res => {\n      if (res.data.success) {\n        onSuccess(res);\n      }\n    })\n    .finally(() => {\n      setState({ confirmLoading: false });\n    });\n\n  }, [state, setState, onSuccess, rowData]);\n\n  useEffect(() => {\n    if (visible === initRef.current) return;\n    initRef.current = visible;\n    initParams();\n  }, [visible, initParams]);\n\n  return (\n    <Modal\n      title=\"新增\"\n      visible={visible}\n      onOk={handleSubmit}\n      onCancel={onCancel}\n      confirmLoading={state.confirmLoading}\n    >\n      <Form>\n        <Form.Item label=\"入账时间\">\n          <DatePicker\n            mode={state.dateMode}\n            showTime\n            allowClear={false}\n            value={state.date}\n            onPanelChange={(value, dateMode) => setState({ dateMode }) }\n            onChange={date => setState({ date }) }\n            style={{ width: '100%' }}\n          />\n        </Form.Item>\n        <Form.Item label=\"财务类型\">\n          <Select\n            onChange={(value: string) => setState({ typeId: value })}\n            value={state.typeId}\n          >\n            {nameList.map((item: any) => (\n              <Option value={item.id} key={item.id}>{item.optionName}</Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item label=\"收支金额\">\n          <Input\n            value={state.price}\n            onChange={e => setState({ price: e.target.value })}\n          />\n        </Form.Item>\n        <Form.Item label=\"备注信息\">\n          <TextArea\n            rows={5}\n            value={state.remarks}\n            onChange={e => setState({ remarks: e.target.value })}\n            maxLength={250}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nexport default React.memo(CreateReminder);\n","import React, { useEffect, useRef } from 'react';\nimport './style.scss';\nimport moment from 'moment';\nimport useKeepState from 'use-keep-state';\nimport Table from '@/components/table';\nimport CreateCapitalFlow from '../components/create-capital-flow';\nimport { DatePicker, Button, Select, Statistic, Input } from 'antd';\nimport {\n  getCurMonthFirstDay,\n  getCurMonthLastDay,\n  modalConfirmDelete,\n  ONE_DAY_TIMESTAMP\n} from '@/utils';\nimport {\n  serviceGetCapitalFlow,\n  serviceDeleteCapitalFlow,\n  serviceGetCapitalFlowType\n} from '@/services';\nimport { OPTION_TYPES, TypeNames, TYPES } from '../enum';\n\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\nconst Option = Select.Option;\nconst dateFormat = 'YYYY-MM-DD';\n\ninterface State {\n  date: moment.Moment[];\n  searchKeyword: string,\n  name: string;\n  type: string;\n  modalVisible: boolean;\n  currentRow: null | { [key: string]: any };\n  nameList: any[];\n  price: { consumption: number; income: number; available: number; };\n  sortedInfo: any;\n  filters: object;\n}\n\nconst initialState: State = {\n  date: [],\n  searchKeyword: '',\n  name: '',\n  type: '',\n  modalVisible: false,\n  currentRow: null,\n  nameList: [],\n  price: { consumption: 0, income: 0, available: 0 },\n  sortedInfo: null,\n  filters: {\n    price: [false]\n  }\n};\n\nconst Reminder: React.FC = function() {\n  const [state, setState] = useKeepState(initialState);\n  const tableRef = useRef<any>();\n\n  function initParams() {\n    const startDate = moment(getCurMonthFirstDay(dateFormat), dateFormat);\n    const endDate = moment(getCurMonthLastDay(dateFormat), dateFormat);\n    setState({\n      searchKeyword: '',\n      name: '',\n      date: [startDate, endDate],\n      sortedInfo: null\n    });\n  }\n\n  // 获取数据\n  function getCapitalFlow(params: { [k: string]: any }) {\n    params = {\n      ...params,\n      keyword: state.searchKeyword,\n      typeNameId: state.name,\n      type: state.type,\n      startDate: state.date[0].valueOf(),\n      endDate: state.date[1].valueOf() + ONE_DAY_TIMESTAMP\n    };\n\n    if (state.sortedInfo?.order) {\n      params.sort = `${state.sortedInfo.field}-${state.sortedInfo.order.replace('end', '')}`;\n    }\n\n    return serviceGetCapitalFlow(params).then(res => {\n      if (res.data.success) {\n        const data = res.data.data;\n\n        res.data.data.rows = res.data.data.rows.map((el: any, idx: number) => {\n          el.order = idx + 1;\n          el.date = moment(el.date).format('YYYY-MM-DD HH:mm');\n          el.__price__ = TYPES[el.type - 1].symbol + el.price;\n          el.__color__ = TYPES[el.type - 1].color;\n\n          return el;\n        });\n\n        setState({\n          price: {\n            income: data.income,\n            consumption: data.consumption,\n            available: data.available\n          }\n        });\n      }\n      return res;\n    });\n  }\n\n  // 获取所有类型\n  function getCapitalFlowType() {\n    serviceGetCapitalFlowType()\n      .then(res => {\n        if (res.data.success) {\n          const data = res.data.data.map((item: any) => {\n            item.optionName = `${TypeNames[item.type]} - ${item.name}`;\n            return item;\n          }).sort((a: any, b: any) => a.type - b.type);\n          setState({ nameList: data });\n        }\n      });\n  }\n\n  function handleActionButton(type: number, row: any) {\n    // 编辑\n    if (type === 0) {\n      setState({ modalVisible: true, currentRow: row });\n    } else {\n      modalConfirmDelete().then(() => {\n        serviceDeleteCapitalFlow(row.id).then(res => {\n          if (res.data.success) {\n            tableRef.current.getTableData();\n          }\n        });\n      });\n    }\n  }\n\n  // 时间过滤\n  function onFilterDate(type: number) {\n    const [startDate] = state.date;\n    const date: moment.Moment[] = [\n      moment(moment().format(dateFormat), dateFormat),\n      moment(moment().format(dateFormat), dateFormat)\n    ];\n\n    switch (type) {\n      case 2:\n        const prevDay = moment(\n          moment()\n            .subtract(1, 'days')\n            .format(dateFormat), dateFormat\n        );\n        date[0] = prevDay;\n        date[1] = prevDay;\n        break;\n      case 3:\n        date[0] = moment(\n          moment()\n            .subtract(7, 'days')\n            .format(dateFormat),\n          dateFormat\n        );\n        date[1] = moment(new Date(), dateFormat);\n        break;\n      case 4:\n        date[0] = moment(\n          moment(startDate)\n            .subtract(1, 'month')\n            .startOf('month')\n            .format(dateFormat),\n          dateFormat\n        );\n        date[1] = moment(\n          moment(startDate)\n            .subtract(1, 'month')\n            .endOf('month')\n            .format(dateFormat),\n          dateFormat\n        );\n        break;\n      case 5:\n        date[0] = moment(\n          moment(startDate)\n            .add(1, 'month')\n            .startOf('month')\n            .format(dateFormat),\n          dateFormat\n        );\n        date[1] = moment(\n          moment(startDate)\n            .add(1, 'month')\n            .endOf('month')\n            .format(dateFormat),\n          dateFormat\n        );\n        break;\n    }\n\n    setState({ date });\n  }\n\n  function onTableChange(pagination: any, filters: any, sorter: any) {\n    setState({\n      sortedInfo: {\n        field: sorter.field,\n        order: sorter.order\n      },\n      filters\n    });\n  }\n\n  function handleModalOnSuccess() {\n    setState({ modalVisible: false });\n    tableRef.current.getTableData();\n  }\n\n  useEffect(() => {\n    initParams();\n    getCapitalFlowType();\n  }, []);\n\n  useEffect(() => {\n    if (state.date.length <= 0) return;\n    tableRef?.current?.getTableData();\n  }, [state.name, state.type, state.date]);\n\n  const tableColumns = [\n    {\n      title: '入账时间', dataIndex: 'date', width: 180, sorter: true,\n      sortOrder: state.sortedInfo?.field === 'date' && state.sortedInfo.order\n    },\n    { title: '账务类型', dataIndex: 'name', width: 120 },\n    {\n      title: '收支金额（元）', width: 140, sorter: true, dataIndex: 'price',\n      sortOrder: state.sortedInfo?.field === 'price' && state.sortedInfo.order,\n      filters: [\n        { text: '隐藏金额', value: false }\n      ],\n      defaultFilteredValue: [true],\n      render: (text: any, rowData: any) => (\n        <span style={{ color: rowData.__color__ }}>\n          {state.filters.price && state.filters.price[0] === true ? '******' : rowData.__price__}\n        </span>\n      )\n    },\n    {\n      title: '备注信息',\n      render: (rowData: any) => (\n        <p className=\"white-space_pre-wrap\">{rowData.remarks}</p>\n      )\n    },\n    {\n      title: '操作', width: 180, align: 'right',\n      render: (row: any) => (\n        <>\n          <Button onClick={handleActionButton.bind(null, 0, row)}>编辑</Button>\n          <Button onClick={handleActionButton.bind(null, 1, row)}>删除</Button>\n        </>\n      )\n    }\n  ];\n\n  return (\n    <div className=\"capital-flow\">\n      <div className=\"query-panel\">\n        <span>账务类型：</span>\n        <Select\n          onChange={(value: string) => setState({ name: value })}\n          value={state.name}\n        >\n          <Option value=\"\">全部</Option>\n          {state.nameList.map((item: any) => (\n            <Option value={item.id} key={item.id}>{item.name}</Option>\n          ))}\n        </Select>\n          {!state.name && (\n            <>\n              <span>收支类别：</span>\n              <Select\n                onChange={(value: string) => setState({ type: value })}\n                value={state.type}\n              >\n              {OPTION_TYPES.map(item => (\n                <Option value={item.value} key={item.value}>{item.name}</Option>\n              ))}\n              </Select>\n            </>\n          )}\n        <Search\n          value={state.searchKeyword}\n          placeholder=\"试试搜索备注\"\n          maxLength={300}\n          onChange={e => setState({ searchKeyword: e.target.value })}\n          onSearch={() => tableRef.current.getTableData()}\n          style={{ width: 260, marginRight: '15px' }}\n        />\n        <Button type=\"primary\" onClick={tableRef.current?.getTableData}>查询</Button>\n        <Button onClick={initParams}>重置</Button>\n        <div style={{ marginTop: '10px' }}>\n          <span>日期：</span>\n          <RangePicker\n            format={dateFormat}\n            allowClear\n            value={state.date}\n            style={{ width: '280px', marginRight: '10px' }}\n            onChange={(date: any) => setState({ date })}\n          />\n          <Button onClick={onFilterDate.bind(null, 1)}>今天</Button>\n          <Button onClick={onFilterDate.bind(null, 2)}>昨天</Button>\n          <Button onClick={onFilterDate.bind(null, 3)}>最近一周</Button>\n          <Button onClick={onFilterDate.bind(null, 4)}>上个月</Button>\n          <Button onClick={onFilterDate.bind(null, 5)}>下个月</Button>\n        </div>\n        <div className=\"poly\">\n          <div className=\"item-price\">\n            <em>收入：￥</em>\n            <Statistic value={state.price.income} precision={2} />\n          </div>\n          <div className=\"item-price\">\n            <em>支出：￥</em>\n            <Statistic value={state.price.consumption} precision={2} />\n          </div>\n          <div className=\"item-price\">\n            <em>实际收入：￥</em>\n            <Statistic value={state.price.available} precision={2} />\n          </div>\n        </div>\n      </div>\n      <Table\n        ref={tableRef}\n        getTableData={getCapitalFlow}\n        columns={tableColumns}\n        onTableChange={onTableChange}\n        onDelete={serviceDeleteCapitalFlow}\n        onAdd={() => setState({ modalVisible: true, currentRow: null })}\n      />\n      <CreateCapitalFlow\n        visible={state.modalVisible}\n        rowData={state.currentRow}\n        nameList={state.nameList}\n        onCancel={() => setState({ modalVisible: false })}\n        onSuccess={handleModalOnSuccess}\n      />\n    </div>\n  )\n}\n\nexport default Reminder;\n","import React, { useCallback, useEffect } from 'react';\nimport {\n  Modal,\n  Form,\n  Input,\n  message,\n  Select\n} from 'antd';\nimport { serviceCreateCapitalFlowType, serviceUpdateCapitalFlowType } from '@/services';\nimport { TYPES } from '../../enum';\nimport useKeepState from 'use-keep-state';\n\ntype Props = {\n  visible: boolean;\n  onSuccess: (res?: any) => void;\n  onCancel: () => void;\n  rowData: null | { [propName: string]: any; }\n};\n\nconst { Option } = Select;\nconst defaultType = TYPES.length ? TYPES[0].value : null;\nconst initialState = {\n  confirmLoading: false,\n  name: '',\n  type: defaultType\n};\n\nconst CreateTask: React.FC<Props> = function ({\n  visible,\n  rowData,\n  onCancel,\n  onSuccess\n}) {\n  const [state, setState] = useKeepState(initialState);\n\n  const handleSubmitForm = useCallback(e => {\n    e.preventDefault();\n\n    const name = state.name.trim();\n    const params = { type: state.type, name };\n\n    if (!name) {\n      message.warn('名称不能为空');\n      return;\n    }\n\n    setState({ confirmLoading: true });\n\n    (rowData\n      ? serviceUpdateCapitalFlowType(rowData.id, params)\n        : serviceCreateCapitalFlowType(params)\n    )\n    .then(res => {\n      if (res.data.success) {\n        onSuccess(res.data.data);\n      }\n    })\n    .finally(() => {\n      setState({ confirmLoading: false });\n    });\n  }, [state, rowData, onSuccess, setState]);\n\n  useEffect(() => {\n    // 每次rowData改变重新赋值\n    if (rowData) {\n      setState({\n        name: rowData.name,\n        type: rowData.type\n      });\n    } else {\n      setState({\n        name: '',\n        type: defaultType\n      });\n    }\n  }, [rowData, setState]);\n\n  return (\n    <Modal\n      title=\"新增类别\"\n      visible={visible}\n      onOk={handleSubmitForm}\n      onCancel={onCancel}\n      confirmLoading={state.confirmLoading}\n    >\n      <Form>\n        <Form.Item label=\"名称\">\n          <Input\n            value={state.name}\n            onChange={e => setState({ name: e.target.value })}\n            maxLength={20}\n            placeholder=\"请输入名称\"\n          />\n        </Form.Item>\n        <Form.Item label=\"类型\">\n          <Select\n            value={state.type}\n            onChange={(value: any) => setState({ type: value })}\n          >\n          {TYPES.map(item => (\n            <Option value={item.value} key={item.value}>{item.name}</Option>\n          ))}\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nexport default React.memo(CreateTask);\n","import React, { useEffect } from 'react';\nimport './style.scss';\nimport moment from 'moment';\nimport useKeepState from 'use-keep-state';\nimport CreateType from '../components/create-type/index';\nimport { Table, Button, Tag, message } from 'antd';\nimport {\n  serviceGetCapitalFlowType,\n  serviceDeleteCapitalFlowType\n} from '@/services';\nimport { TypeNames, TypeColors } from '../enum';\n\nconst initialState = {\n  modalVisible: false,\n  selectedRowKeys: [],\n  loading: false,\n  data: [],\n  rowData: null\n};\n\nconst Type = () => {\n  const [state, setState] = useKeepState(initialState);\n  const tableColumns = [\n    { title: '账务类型', dataIndex: 'name' },\n    { title: '收支类别', render: (rowData: any) => (\n      <Tag color={rowData.color}>{rowData.typeName}</Tag>\n    ) },\n    { title: '创建时间', dataIndex: 'createdAt' },\n    { title: '操作', render: (rowData: any) => (\n      <Button onClick={handleEdit.bind(null, rowData)}>编辑</Button>\n    ) },\n  ];\n\n  const onSelectChange = function(selectedRowKeys: any) {\n    setState({ selectedRowKeys });\n  };\n\n  function getCapitalFlowType() {\n    serviceGetCapitalFlowType()\n      .then(res => {\n        if (res.data.success) {\n          const handleData = res.data.data.map((item: any) => {\n            item.typeName = TypeNames[item.type];\n            item.color = TypeColors[item.type];\n            item.createdAt = moment(item.createdAt).format('YYYY-MM-DD hh:mm');\n            return item;\n          });\n          setState({ data: handleData });\n        }\n      });\n  }\n\n  function deleteCapitalFlowType() {\n    const ids = state.selectedRowKeys.join();\n    if (!ids) return;\n    serviceDeleteCapitalFlowType(ids)\n      .then(res => {\n        if (res.data.success) {\n          getCapitalFlowType();\n        }\n      });\n  }\n\n  function handleOnSuccess() {\n    setState({ modalVisible: false });\n    getCapitalFlowType();\n  }\n\n  function handleAdd() {\n    if (state.data.length >= 100) {\n      message.warn('类型超出100条');\n      return;\n    }\n    setState({\n      modalVisible: true,\n      rowData: null\n    });\n  }\n\n  function handleEdit(rowData: any) {\n    setState({\n      modalVisible: true,\n      rowData\n    });\n  }\n\n  useEffect(() => {\n    getCapitalFlowType();\n  }, []);\n\n  const rowSelection = {\n    selectedRowKeys: state.selectedRowKeys,\n    onChange: onSelectChange,\n  };\n\n  return (\n    <div className=\"capital-flow-type\">\n      <div className=\"button-group\">\n        <Button type=\"primary\" danger onClick={deleteCapitalFlowType}>删除</Button>\n        <Button type=\"primary\" onClick={handleAdd}>新增</Button>\n      </div>\n      <Table\n        rowSelection={rowSelection}\n        columns={tableColumns}\n        dataSource={state.data}\n        pagination={false}\n        rowKey=\"id\"\n      />\n      <CreateType\n        visible={state.modalVisible}\n        rowData={state.rowData}\n        onCancel={() => setState({ modalVisible: false })}\n        onSuccess={handleOnSuccess}\n      />\n    </div>\n  )\n};\n\nexport default Type;\n","import React, { useCallback, useEffect } from 'react';\nimport useKeepState from 'use-keep-state';\nimport { serviceCreateTodoList, serviceUpdateTodoList } from '@/services';\nimport {\n  Modal,\n  Form,\n  Input,\n  message,\n} from 'antd';\n\ntype Props = {\n  visible: boolean;\n  rowData?: { [propName: string]: any; } | null;\n  setParentState(state: any): void;\n  onSuccess: (res?: any) => void;\n};\n\nconst { TextArea } = Input;\nconst initialState = {\n  confirmLoading: false,\n  content: '',\n};\n\nconst CreateTodo: React.FC<Props> = function ({\n  visible,\n  onSuccess,\n  setParentState,\n  rowData\n}) {\n  const [state, setState] = useKeepState(initialState);\n\n  const handleSubmitForm = useCallback(() => {\n    const params = {\n      content: state.content.trim(),\n    };\n\n    if (!params.content) {\n      message.warn('内容不能为空');\n      return;\n    }\n\n    (\n      !rowData\n        ? serviceCreateTodoList(params)\n          : serviceUpdateTodoList(rowData.id, params)\n    )\n    .then(res => {\n      if (res.data.success) {\n        onSuccess();\n      }\n    });\n  }, [state, onSuccess, rowData]);\n\n  useEffect(() => {\n    setState({\n      content: rowData ? rowData.content : ''\n    });\n  }, [rowData, setState]);\n\n  return (\n    <Modal\n      title=\"新增\"\n      visible={visible}\n      onOk={handleSubmitForm}\n      onCancel={() => setParentState({ showCreateTodoModal: false })}\n      confirmLoading={state.confirmLoading}\n    >\n      <Form>\n        <Form.Item label=\"活动内容\">\n          <TextArea\n            rows={3}\n            value={state.content}\n            onChange={e => setState({ content: e.target.value })}\n            maxLength={250}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n};\n\nexport default React.memo(CreateTodo);\n","\nexport const STATUS: any = {\n  1: { text: '进行中', color: 'volcano' },\n  2: { text: '已完成', color: '#2db7f5' }\n};\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport moment from 'moment';\nimport useKeepState from 'use-keep-state';\nimport Table from '@/components/table';\nimport CreateTodo from '../components/create-todo';\nimport { serviceGetTodoList, serviceDeleteTodoList, serviceUpdateTodoList } from '@/services';\nimport { STATUS } from '../constants';\nimport { DatePicker, Button, Tag } from 'antd';\nimport {\n  getThisYearFirstDay,\n  getCurMonthLastDay,\n  modalConfirmDelete,\n  ONE_DAY_TIMESTAMP\n} from '@/utils';\n\nconst { RangePicker } = DatePicker;\nconst dateFormat = 'YYYY-MM-DD';\n\ninterface State {\n  date: moment.Moment[];\n  showCreateTodoModal: boolean;\n  currentRowData: { [key: string]: any; } | null;\n}\n\nconst initialState: State = {\n  date: [],\n  showCreateTodoModal: false,\n  currentRowData: null\n};\n\nconst TodoList = () => {\n  const [state, setState] = useKeepState(initialState);\n  const tableRef = useRef<any>();\n  const tableColumns = [\n    { title: '状态', dataIndex: 'status', width: 90, render: (status: number) => (\n      <Tag color={STATUS[status].color}>{STATUS[status].text}</Tag>\n    )},\n    { title: '创建时间', dataIndex: 'createdAt', width: 170 },\n    { title: '活动内容', dataIndex: 'content', className: 'word-break_break-all' },\n    { title: '操作', width: 250, align: 'right',\n      render: (row: any) => (\n        <>\n          <Button onClick={handleActionButton.bind(null, 0, row)}>编辑</Button>\n          <Button onClick={handleActionButton.bind(null, 1, row)}>删除</Button>\n          <Button\n            onClick={handleActionButton.bind(null, 2, row)}\n            disabled={row.status === 2}\n          >\n            完成\n          </Button>\n        </>\n      )\n    }\n  ];\n\n  function getData() {\n    tableRef.current.getTableData();\n  }\n\n  const getTodoList = useCallback((params?: any) => {\n    params.startDate = state.date[0].valueOf();\n    params.endDate = state.date[1].valueOf() + ONE_DAY_TIMESTAMP;\n\n    return serviceGetTodoList(params).then(res => {\n      res.data.data.rows.map((item: any) => {\n        item.createdAt = moment(item.createdAt).format('YYYY-MM-DD HH:mm');\n        return item;\n      });\n      return res;\n    })\n  }, [state.date]);\n\n  const initParams = useCallback(() => {\n    const startDate = moment(getThisYearFirstDay(), dateFormat);\n    const endDate = moment(getCurMonthLastDay(dateFormat), dateFormat);\n    setState({ date: [startDate, endDate] });\n  }, [setState]);\n\n  const handleOnSuccess = function() {\n    setState({ showCreateTodoModal: false });\n    tableRef.current.getTableData();\n  };\n\n  const handleActionButton = useCallback((buttonType: number, row: any) => {\n    switch (buttonType) {\n      // 编辑\n      case 0:\n        setState({ showCreateTodoModal: true, currentRowData: row });\n        break;\n      // 删除\n      case 1:\n        modalConfirmDelete()\n        .then(() => {\n          serviceDeleteTodoList(row.id)\n          .then(res => {\n            if (res.data.success) {\n              tableRef.current.getTableData();\n            }\n          });\n        });\n        break;\n      // 状态\n      case 2:\n        serviceUpdateTodoList(row.id, { status: 2 })\n        .then(res => {\n          if (res.data.success) {\n            tableRef.current.getTableData();\n          }\n        });\n        break;\n      default:\n    }\n  }, [setState]);\n\n  useEffect(() => {\n    initParams();\n  }, [initParams]);\n\n  useEffect(() => {\n    if (state.date.length <= 0) return;\n    tableRef?.current?.getTableData();\n  }, [state.date]);\n\n  return (\n    <div className=\"today-task\">\n      <div className=\"query-panel\">\n        <span>查询日期：</span>\n        <RangePicker\n          format={dateFormat}\n          allowClear\n          value={state.date}\n          onChange={(date: any) => setState({ date })}\n        />\n        <Button type=\"primary\" onClick={getData}>查询</Button>\n        <Button onClick={initParams}>重置</Button>\n      </div>\n      <Table\n        ref={tableRef}\n        getTableData={getTodoList}\n        columns={tableColumns}\n        onDelete={serviceDeleteTodoList}\n        onAdd={() => setState({\n          showCreateTodoModal: true,\n          currentRowData: null\n        })}\n      />\n      <CreateTodo\n        visible={state.showCreateTodoModal}\n        onSuccess={handleOnSuccess}\n        setParentState={setState}\n        rowData={state.currentRowData}\n      />\n    </div>\n  );\n};\n\nexport default TodoList;\n","import { lazy } from 'react';\nimport { IRouteProps } from '@/router/types';\nimport { HOME, SETTING } from './constants';\nimport Login from '@/views/login/index';\nimport NoMatch from '@/views/exception/no-match';\nimport MainEntry from '@/views/home/main-entry';\nimport Reminder from '@/views/home/reminder';\nimport SettingIndex from '@/views/home/setting/index';\nimport HomeIndex from '@/views/home/index';\nimport TodayTask from '@/views/home/today-task';\nimport Memorandum from '@/views/home/memorandum/index';\nimport MemorandumCreate from '@/views/home/memorandum/create';\nimport MemorandumDetail from '@/views/home/memorandum/detail';\nimport CapitalFlow from '@/views/home/capital-flow/index';\nimport CapitalFlowType from '@/views/home/capital-flow/type';\nimport TodoList from '@/views/home/todo-list/index';\n\nconst routesMap: Array<IRouteProps> = [\n  {\n    path: HOME.LOGIN.path,\n    exact: true,\n    component: Login,\n    meta: {\n      // 当前页面是否需要登录状态\n      requiresAuth: false,\n      // 网页标题\n      title: HOME.LOGIN.name,\n      // 如果当前登录状态跳转到后台首页\n      isLoginToHome: true\n    }\n  },\n  {\n    path: HOME.HOME.path,\n    component: MainEntry,\n    meta: {\n      requiresAuth: true,\n    },\n    childrenRoutes: [\n      {\n        path: HOME.HOME_INDEX.path,\n        component: HomeIndex,\n        exact: true,\n        meta: {\n          title: HOME.HOME_INDEX.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.REMINDER.path,\n        component: Reminder,\n        exact: true,\n        meta: {\n          title: HOME.REMINDER.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.SETTING_INDEX.path,\n        component: SettingIndex,\n        meta: {\n          title: HOME.SETTING_INDEX.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.TODAY_TASK.path,\n        component: TodayTask,\n        meta: {\n          title: HOME.TODAY_TASK.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.MEMORANDUM.path,\n        component: Memorandum,\n        exact: true,\n        meta: {\n          title: HOME.MEMORANDUM.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.MEMORANDUM_CREATE.path,\n        component: MemorandumCreate,\n        exact: true,\n        meta: {\n          title: HOME.MEMORANDUM_CREATE.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.MEMORANDUM_DETAIL.path,\n        component: MemorandumDetail,\n        exact: true,\n        meta: {\n          title: HOME.MEMORANDUM_DETAIL.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.CAPITAL_FLOW.path,\n        component: CapitalFlow,\n        exact: true,\n        meta: {\n          title: HOME.CAPITAL_FLOW.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.CAPITAL_FLOW_TYPE.path,\n        component: CapitalFlowType,\n        exact: true,\n        meta: {\n          title: HOME.CAPITAL_FLOW_TYPE.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.TODO_LIST.path,\n        component: TodoList,\n        exact: true,\n        meta: {\n          title: HOME.TODO_LIST.name,\n          requiresAuth: true,\n        }\n      },\n      {\n        path: HOME.NO_MATCH.path,\n        component: NoMatch,\n        meta: {\n          requiresAuth: true,\n          title: HOME.NO_MATCH.name\n        }\n      },\n    ]\n  },\n  {\n    path: HOME.NO_MATCH.path,\n    component: NoMatch,\n    meta: {\n      requiresAuth: false,\n      title: HOME.NO_MATCH.name\n    }\n  },\n];\n\nconst Base = lazy(() => import('@/views/home/setting/base'));\nconst InnerMessage = lazy(() => import('@/views/home/setting/inner-message'));\nconst Notification = lazy(() => import('@/views/home/setting/notification'));\nconst Account = lazy(() => import('@/views/home/setting/account'));\n\nexport const settingRoutes: Array<IRouteProps> = [\n  {\n    path: SETTING.BASE.path,\n    component: Base,\n    meta: {\n      requiresAuth: true,\n      title: SETTING.BASE.name\n    }\n  },\n  {\n    path: SETTING.INNER_MESSAGE.path,\n    component: InnerMessage,\n    meta: {\n      requiresAuth: true,\n      title: SETTING.INNER_MESSAGE.name\n    }\n  },\n  {\n    path: SETTING.NOTIFICATION.path,\n    component: Notification,\n    meta: {\n      requiresAuth: true,\n      title: SETTING.NOTIFICATION.name\n    }\n  },\n  {\n    path: SETTING.ACCOUNT.path,\n    component: Account,\n    meta: {\n      requiresAuth: true,\n      title: SETTING.ACCOUNT.name\n    }\n  },\n];\n\nexport default routesMap;\n","import React from 'react';\nimport PrivateRoute from '@/components/private-route';\nimport CONFIG from '@/config';\nimport routesMap from './routes';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { DispatchProp, connect } from 'react-redux';\nimport { validateLocalStatus } from '@/store/actions/user';\n\nconst Routes: React.FC<DispatchProp> = function ({ dispatch }) {\n  dispatch(validateLocalStatus());\n\n  return (\n    <Router basename={CONFIG.baseURL}>\n      <Switch>\n        {routesMap.map((route, idx) => (\n          <PrivateRoute {...route} key={idx} />\n        ))}\n      </Switch>\n    </Router>\n  )\n};\n\nexport default connect()(Routes);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/global.scss';\nimport Routes from './router';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ConfigProvider } from 'antd';\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport store from '@/store';\n\nmoment.locale('zh-cn');\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <ConfigProvider locale={zh_CN}>\n        <Routes />\n      </ConfigProvider>\n    </Provider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('tomato-work-root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// 路由常量配置信息\n\nexport const SETTING = {\n  BASE: { name: '个人中心', path: '/home/setting/base' },\n\n  INNER_MESSAGE: { name: '消息中心', path: '/home/setting/innerMessage' },\n\n  NOTIFICATION: { name: '消息通知', path: '/home/setting/notification' },\n\n  ACCOUNT: { name: '账号设置', path: '/home/setting/account' },\n};\n\nexport const HOME = {\n  LOGIN: { name: '登录', path: ['/', '/login'] },\n\n  HOME: { name: '', path: '/home' },\n\n  HOME_INDEX: { name: '后台首页', path: '/home/index' },\n\n  REMINDER: { name: '提醒事项', path: '/home/reminder' },\n\n  SETTING_INDEX: { name: '个人中心', path: '/home/setting' },\n\n  TODAY_TASK: { name: '今日待办', path: '/home/todayTask' },\n\n  MEMORANDUM: { name: '备忘录列表', path: '/home/memorandum' },\n  MEMORANDUM_CREATE: { name: '备忘录创建', path: [\n    '/home/memorandum/create', '/home/memorandum/update/:id'\n  ] },\n  MEMORANDUM_DETAIL: { name: '*', path: '/home/memorandum/detail/:id' },\n\n  CAPITAL_FLOW: { name: '资金流动', path: '/home/capitalFlow' },\n  CAPITAL_FLOW_TYPE: { name: '创建类别', path: '/home/capitalFlow/type' },\n\n  TODO_LIST: { name: '活动清单', path: '/home/todoList' },\n\n  NO_MATCH: { name: '404 Not Found', path: '*' },\n};\n","/**\n * @file Define action type constants\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\n\nexport const USER: any = {\n  LOGIN: 'LOGIN',\n  LOGOUT: 'LOGOUT',\n};\n\nexport const SYSTEM: any = {\n  INFO: 'INFO'\n};\n","/**\n * @file System Action Creator\n * @since 1.0.0\n * @author xiejiahe <xjh22222228@gmail.com>\n */\n\nimport { SYSTEM } from '../constants';\nimport { serviceGetSystemInfo } from '@/services';\nimport { Dispatch } from 'redux';\n\nconst { INFO } = SYSTEM;\n\nexport function setSystemInfo(data: any = {}) {\n  return { type: INFO, data };\n}\n\n/**\n * 获取系统信息\n */\nexport function getSystemInfo() {\n  return function (dispatch: Dispatch, getState: () => any) {\n    const { system: { info } } = getState();\n\n    if (info.nodeVersion) {\n      return dispatch(setSystemInfo());\n    }\n\n    return serviceGetSystemInfo().then((res: any) => {\n      if (res.data.success) {\n        const data = res.data.data;\n        return dispatch(setSystemInfo(data));\n      }\n      return dispatch(setSystemInfo());\n    });\n  }\n}\n"],"sourceRoot":""}